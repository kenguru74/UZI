--'  Квест Германа по лабораториям
function german_secret_labs(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "af_cristall_u", "in")
   dialogs.relocate_item_section(first_speaker, "af_mincer_meat_u", "in")
   first_speaker:set_relation(game_object.friend, second_speaker)
   db.actor:set_character_rank(db.actor:character_rank() + 180)
end

--'  Квест Германа по докам из лабы Х-1
function german_take_disk(first_speaker, second_speaker)
   dialogs.relocate_item_section(second_speaker, "disk_code", "out")
end

--'  Выдача снаряжения Германом
function german_give_equipment(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_fmj", "in")
   dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_ap", "in")
   dialogs.relocate_item_section(first_speaker, "medkit_army", "in")
   dialogs.relocate_item_section(first_speaker, "medkit_scientic", "in")
end

--'  Квест Азота по запчастям
function azot_jupiter_parts(first_speaker, second_speaker)
   dialogs.relocate_item_section(second_speaker, "box_condensers", "out")
   dialogs.relocate_item_section(second_speaker, "materials_textolite", "out")
   dialogs.relocate_item_section(second_speaker, "materials_wire", "out")
   dialogs.relocate_item_section(second_speaker, "box_transistors", "out")
   dialogs.relocate_item_section(second_speaker, "kanifol", "out")
   second_speaker:set_relation(game_object.friend, first_speaker)
end

--'  Выдача Азотом дешифратора
function azot_german_decoder(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "azot_decoder", "in")
end

--'  Сдача Герману дешифратора
function german_take_decoder(first_speaker, second_speaker)
   dialogs.relocate_item_section(second_speaker, "azot_decoder", "out")
end

--'  Сдача Герману документов из лаборатории Х-8
function german_take_docs_x8(first_speaker, second_speaker)
   dialogs.relocate_item_section(second_speaker, "books_research", "out")
end

--'  Сдача Герману документов из экспериментального цеха
function german_take_docs_zech(first_speaker, second_speaker)
   dialogs.relocate_item_section(second_speaker, "blocknotes", "out")
end

--'  Получение у Германа документов из экспериментального цеха
function strelok_take_docs_zech(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "blocknotes", "in")
end

--'  Спавн компьютерного диска на Научной станции
function spawn_disk_on_yantar_old()
   alife():create("disk_code",vector():set(201.23118591309,-5.3942155838013,-34.999893188477),510204,4384)
end

--'  Спавн документов в Х-8
function spawn_docs_in_labx8()
   alife():create("books_research",vector():set(-111.32600402832,-31.504022598267,89.694602966309),259,3832)
end

--'  Спавн радиохлама на Юпитере
function spawn_radioparts_on_jupiter()
   alife():create("box_condensers",vector():set(324.84414672852,31.384653091431,-301.21694946289),1234545,3745)
   alife():create("materials_textolite",vector():set(419.27789306641,31.373983383179,-355.97882080078),1378107,3745)
   alife():create("materials_wire",vector():set(400.37356567383,32.167964935303,-383.7048034668),1346540,3745)
   alife():create("box_transistors",vector():set(323.7766418457,32.532653808594,-310.54364013672),1233517,3745)
   alife():create("kanifol",vector():set(323.72311401367,28.581968307495,-303.16015625),1231533,3745)
end

--'  Подсчет запчастей для Азота
local azot_parts = {"box_condensers", "materials_textolite", "materials_wire", "box_transistors", "kanifol"}
function radioparts_have(task, objective)
    local gg = db.actor
    if gg then
        for i=1,#azot_parts  do
            if not gg:object(azot_parts[i]) then 
                return false
            end
        end
        return true 
    end
    return false
end

--'  Спавн флешки учёного
function spawn_flash()
 if has_alife_info("dialog_usach2") then
   local obj = alife():object( "jupiter_stalker_corpse_2" )
   if obj then
     alife():create( "ecolog_flash", vector(), 0, 0, obj.id )
   end
 end
end

--'  Выдача метки на беспилотник
function mapspot_jupiter()
   local obj = alife():object( "jupiter_dron" )
   if obj then
     level.map_add_object_spot_ser(obj.id, "find_item_location", "Район падения беспилотника")
   end
end

--' Проверка на флешку учёного
function flash_ecolog_have(task, objective)
   if db.actor ~= nil then
      return db.actor:object("ecolog_flash") ~= nil
   end
   return false
end

--' Выдача инфы о тайниках в Госпитале
function give_info_secret()
	treasure_manager.get_treasure_manager():give_treasure("hos_treasure_1")
	treasure_manager.get_treasure_manager():give_treasure("hos_treasure_2")
	treasure_manager.get_treasure_manager():give_treasure("hos_treasure_3")
end

--'  Подсчет артов для Германа
local german_arts = {"af_diablo", "af_elektron", "af_chelust"}
function artefacts_have(task, objective)
    local gg = db.actor
    if gg then
        for i=1,#german_arts  do
            if not gg:object(german_arts[i]) then 
                return false
            end
        end
        return true 
    end
    return false
end

--'  Сдача артов Герману
function give_arts_german(first_speaker, second_speaker)
   dialogs.relocate_item_section(second_speaker, "af_diablo", "out")
   dialogs.relocate_item_section(second_speaker, "af_elektron", "out")
   dialogs.relocate_item_section(second_speaker, "af_chelust", "out")
   dialogs.relocate_item_section(second_speaker, "ecolog_flash", "out")
end

--'  Получение бабла от Германа
function have_money_german(first_speaker, second_speaker)
	dialogs.relocate_money(first_speaker, 1000, "in")
end

--'  Тополь - друг
function topol_friend(first_speaker, second_speaker)
   second_speaker:set_relation(game_object.friend, first_speaker)
   db.actor:set_character_rank(db.actor:character_rank() + 180)
end

--'  Сообщение Герману
function sending_message_german()
  local text = "Стрелок - Герману. Профессор, в районе падения беспилотника найден тяжелораненый сталкер, друг Тополя - сталкера, который охраняет бункер. Ему срочно нужна помощь. Вы можете связаться с военными и вызвать сюда вертолёт с медиками? По возвращении отблагодарю, чем смогу. Жду Вашего ответа."
  news_manager.send_tip(db.actor, text, nil, nil, 30000)
  amk.g_start_timer("hel",0, 0, 5)
end

--'  Снятие метки
function flash_mapspot_no()
 local obj = alife():object( "jupiter_dron" )
 if obj then
  level.map_remove_object_spot(obj.id, "find_item_location")
 end
end

--' Тайник Тополя
function take_topol_secret()
	treasure_manager.get_treasure_manager():give_treasure("jup_treasure_1")
end

--'  Спавн постановщика помех
function spawn_jammer()
   alife():create("jammer",vector():set(-33.919622802734,2.6090931415558,-24.714649581909),609052,3716)
end

--' Проверка на постановщик помех
function jammer_have(task, objective)
   if db.actor ~= nil then
      return db.actor:object("jammer") ~= nil
   end
   return false
end

--'  Возврат Герману глушилки
function give_jammer(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "jammer", "out")
end

--'  Сообщение от Германа
function give_message_strelok()
 amk.g_start_timer("mg1",0, 0, 59)
end

function spawn_black_box()
 if has_alife_info("jupiter_stalker_grek_54828") and (not has_alife_info("test_black_box")) then
   alife():create("black_box",vector():set(-322.4248046875,-1.956528544426,243.34028625488),166304,3704)
   local obj = alife():object("jupiter_kopachi")
   if obj then
     level.map_add_object_spot_ser(obj.id, "uzi_spot_max", "Село Копачи")
   end
   db.actor:give_info_portion("test_black_box")
 end
end

function lozman_money(first_speaker, second_speaker)
   dialogs.relocate_money(first_speaker, 500, "in")
   first_speaker:set_relation(game_object.friend, second_speaker)
   db.actor:set_character_rank(db.actor:character_rank() + 20)
end

function spawn_batteryes()
   local obj = alife():object("jupiter_zem_plant")
   if obj then
     level.map_add_object_spot_ser(obj.id, "uzi_spot_max", "Цементный завод")
   end
   alife():create("akkum",vector():set(400.58850097656,17.563261032104,355.83999633789),1347501,3746)
   alife():create("akkum",vector():set(400.41116333008,21.781669676699,356.04119873047),1348792,3746)
   alife():create("akkum",vector():set(386.14743041992,12.717052459717,354.78552246094),1325689,3746)
end

function give_black_box_azot(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "black_box", "out")
end

function give_accumulators_azot(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "akkum", "out")
   dialogs.relocate_item_section(first_speaker, "akkum", "out")
   dialogs.relocate_item_section(first_speaker, "akkum", "out")
   local count = db.actor:object_count() - 1
   for i=0, count do
    local item = db.actor:object(i)
    if item:section() == "akkum" then
        local sobj = alife():object(item:id())
        if sobj then
          alife():release(sobj,true)
        end
    end
   end
   local obj = alife():object("jupiter_zem_plant")
   if obj then
     level.map_remove_object_spot(obj.id, "uzi_spot_max")
   end
   amk.g_start_timer("akk",0, 0, 20)
end

function take_black_box_azot(first_speaker, second_speaker)
   dialogs.relocate_item_section(second_speaker, "black_box", "in")
end

function give_black_box_kozlov(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "black_box", "out")
end

function give_message_kozlov()
   amk.g_start_timer("kozl",0, 0, 30)
end

function spawn_containers()
   spawn_ids_object("jupiter_helicopter")
   alife():create("container",vector():set(-277.83953857422,-2.9347994327545,-257.12957763672),244624,3705)
   alife():create("container",vector():set(-281.64044189453,-2.9350891113281,-269.44955444336),238677,3705)
   alife():create("container",vector():set(-290.44622802734,-2.935852766037,-263.64733886719),228142,3705)
   alife():create("container",vector():set(-303.80465698242,-1.8451224565506,-256.63223266602),202033,3702)
   alife():create("container",vector():set(-306.08923339844,-1.3151108026505,-250.74798583984),198501,3702)
   alife():create("container",vector():set(-297.92623901367,-2.9401361942291,-236.53036499023),210449,3705)
   alife():create("container",vector():set(-298.57873535156,-2.9369704723358,-234.0340423584),210449,3705)
   alife():create("container",vector():set(-295.44924926758,-2.909330368042,-211.99291992188),215207,3705)
   alife():create("container",vector():set(-317.65582275391,-1.7818349599838,-196.87281799316),178599,3705)
   alife():create("container",vector():set(-317.01940917969,-2.9187126159668,-233.17594909668),178549,3705)
end

function spawn_ids_object(name_object)
  local ini = ini_file("game_spawn_story_ids.ltx")
  local spawn_story = ini:r_string("spawn_story_ids",name_object)
  local section_number = alife():spawn_id(tonumber(spawn_story))
  alife():create(section_number)
end

function give_containers(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "container", "out")
   dialogs.relocate_item_section(first_speaker, "container", "out")
   dialogs.relocate_item_section(first_speaker, "container", "out")
   dialogs.relocate_item_section(first_speaker, "container", "out")
   dialogs.relocate_item_section(first_speaker, "container", "out")
   dialogs.relocate_item_section(first_speaker, "container", "out")
   dialogs.relocate_item_section(first_speaker, "container", "out")
   dialogs.relocate_item_section(first_speaker, "container", "out")
   dialogs.relocate_item_section(first_speaker, "container", "out")
   dialogs.relocate_item_section(first_speaker, "container", "out")
   local count = db.actor:object_count() - 1
   for i=0, count do
    local item = db.actor:object(i)
    if item:section() == "container" then
        local sobj = alife():object(item:id())
        if sobj then
          alife():release(sobj,true)
        end
    end
   end
end

function spawn_jup_heli_karta()
   local sobj = alife():object("jup_heli_seif")
   if sobj then
     local obj = level.object_by_id(sobj.id)
     if obj then
       spawn_item_in_heli("heli_karta", obj)
     end
   end
end

function give_karta(first_speaker, second_speaker)
   dialogs.relocate_item_section(second_speaker, "heli_karta", "out")
end

function spawn_item_in_heli(spawn_item,npc)
	if not npc then 
		npc = db.actor 
	end
	local item = alife():create(spawn_item, 
		npc:position(),
		npc:level_vertex_id(),  
		npc:game_vertex_id(),
		npc:id())
	
	if npc:id() ~= db.actor:id() then
		-- Фикс пропадания доспавненного предмета при сейв/лоаде
		level.client_spawn_manager():add(item.id, -1, fix_spawn_item_in_heli, npc)  -- Калбек на выход item в онлайн
	end

	return item
end

function fix_spawn_item_in_heli(npc, id, item)
    npc:transfer_item(item, npc)
end

function have_money(first_speaker, second_speaker)
	dialogs.relocate_money(first_speaker, 1500, "in")
   db.actor:set_character_rank(db.actor:character_rank() + 200)
end

function have_hren(task, objective)
   if db.actor ~= nil then
      return db.actor:object("black_box") ~= nil
   end
   return false
end

function spot_oasis()
   local obj = alife():object("jupiter_come_oasis")
   if obj then
     level.map_add_object_spot_ser(obj.id, "uzi_spot_max", "Место поиска Оазиса")
   end
end

function lozman_remove_spots()
   local obj = alife():object("jupiter_kopachi")
   if obj then
     level.map_remove_object_spot(obj.id, "uzi_spot_max")
   end
   local sobj = alife():object("jupiter_come_oasis")
   if sobj then
     level.map_remove_object_spot(sobj.id, "uzi_spot_max")
   end
   lozman_remove_spots1()
end

function lozman_remove_spots1()
   local obj = alife():object("jupiter_kopachi")
   if obj then
     level.map_remove_object_spot(obj.id, "uzi_spot_max")
   end
end

function have_accums()
 return this.have_n_mm("akkum",3)
end

function have_n_mm(section,number)
 local actor = db.actor
 if actor then
  local cnt = 0
  actor:iterate_inventory(function (dummy, item) if item:section() == section then cnt = cnt + 1 end end,nil)
  return cnt >= number
 end
 return false
end

function have_conteins()
 return this.have_n_mmm("container",10)
end

function have_n_mmm(section,number)
 local actor = db.actor
 if actor then
  local cnt = 0
  actor:iterate_inventory(function (dummy, item) if item:section() == section then cnt = cnt + 1 end end,nil)
  return cnt >= number
 end
 return false
end

function have_bumagi(task, objective)
   if db.actor ~= nil then
      return db.actor:object("heli_karta") ~= nil
   end
   return false
end