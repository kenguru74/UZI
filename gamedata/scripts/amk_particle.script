--------- Обработчик динамических партиклов для монстров для OGSM 2.x ---------

-------------------- Copyright 2007-2008 xStream & DEXXX ----------------------

class "amk_particle"
function amk_particle:__init(params)
	self.type = params.typ or "absolute" --bone,absolute
	
	self.dir = params.dir or vector():set(0,0,0)
	self.len = params.len or 1
	self.looped = params.looped or false
	self.life_time = params.life_time or -1
	self.obj = params.obj or nil
	self.bone = params.bone or nil
	self.pos = params.pos or nil
	self.stop_on_death = params.stop_on_death or false
	self.gravity = params.gravity or vector():set(0,0,0)
	
	self.cgravity=vector():set(0,0,0)
	self.particle = particles_object(params.particle)
	if params.sound then self.sound = sound_object(params.sound) end
	self.started=false
	self.start_time = time_global()
	self.finalized=false
	self:start()
end

function amk_particle:__finalize()
	self.particle:stop()
	if self.sound then self.sound:stop() end
end

function amk_particle:start()
	if not self.particle:playing() then
		local pos
		if self.bone and self.obj then
			pos = self.obj:bone_position(self.bone)
		elseif self.pos then
			pos = self.pos
		end
		self.start_pos = pos
		if pos then
			self.particle:play_at_pos(pos)
			if self.sound then
				if not self.sound:playing() then 
					self.sound:play_at_pos(db.actor, self.obj:position(), 1, sound_object.looped)
				else
					self.sound:set_position(self.obj:position())
				end
			end
			self.started=true
		end
	end
end

function amk_particle:update(delta)
	if self.finalized then return end
	self.cgravity = self.cgravity:add(self.gravity)
	if self.particle:playing() then
		if self.life_time>-1 and time_global()>self.start_time+self.life_time then 
			self.started=false
			self.looped=false
			self:stop() 
			self.finalized=true
		end
		local pos
		if self.bone and self.obj then
	    		pos = self.obj:bone_position(self.bone)
			self.pos = pos
		elseif self.dir then
			self.pos = self.pos:add(self.dir:set_length(self.len/self.life_time*delta))
			self.pos = self.pos:add(self.cgravity)
			pos = self.pos
		end
		if pos then
			self.particle:move_to(pos,pos)
		end

		if self.sound then
			if not self.sound:playing() then 
				self.sound:play_at_pos(db.actor, self.obj:position(), 1, sound_object.looped) 
			else
				self.sound:set_position(self.obj:position())
			end
		end
	else
		if self.started then
			if self.looped then
				self:start()
			end
		end
	end
end

function amk_particle:stop()
	if self.particle:playing() then self.particle:stop() end
	if self.sound and self.sound:playing() then self.sound:stop() end
end

function amk_particle:get_pos()
	return self.pos
end

function amk_particle:is_finished()
	return self.finalized
end

function amk_particle:on_death()
	if self.stop_on_death then
		self:stop()
	end
end

--------- Обработчик динамических партиклов для монстров для OGSM 2.x ---------

-------------------- Copyright 2007-2008 xStream & DEXXX ----------------------

--[[

If you're going to use the whole of this script or its parts in your own creative 
developments for the S.T.A.L.K.E.R. game, please don't become such a goddamn 
motherfucker like the notorious author of the ABC Mod - Carbrobro. Leave the 
copyrights, note the real author(s) and don't claim others' ideas and their 
realization to be your own ones. It's just simple Modmakers' Ethics. Thank you!

Если вы собираетесь использовать данный скрипт целиком или частично в своих 
разработках по игре S.T.A.L.K.E.R., пожалуйста не опускайтесь до уровня печально 
известного автора ABC мода - Carbrobro. Не удаляйте копирайты, указывайте настоящего 
автора(ов) и не выдавайте чужие идеи и их реализацию за свои. Ведь это элементарная 
этика модостроителей! Спасибо за понимание.

]]--