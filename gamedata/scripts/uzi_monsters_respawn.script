function resp_monsters()
	local lname = level.name()
	
	local bad_sector_table = {--координаты, за пределами которых запрещено спавнить монстров (места за пределами локаций).
	 -- Кордон --- fixed by KamikaZze
		["l01_escape"] = {
			x1 = {-89, -107, -160, 145, 10, -65, 136, 35, 373, -146, 83, -126, 145},
			x2 = {-286, -150, -180, 90, -5, -70, 125, 20, 346, -164, 29, -176, 117},
			y1 = {-182, -400, -360, -50, -76, 115, 305, 670, -49, -341, 134, -360, 290},
			y2 = {-100, -350, -344, 12, -55, 200, 325, 690, -15, -235, 182, -320, 335}
		},
	 -- Свалка --- fixed by KamikaZze
		["l02_garbage"] = {
			x1 = {38, -41, 68, 38, -230, 306, -36, 125, 120, -182},
			x2 = {25, -146, 15, 32, -306, 291, -92, 51, 35, -272},
			y1 = {-271, -9, 199, -323, -32, 132, -250, -165, 140, -177},
			y2 = {-258, 29, 262, -289, -13, 154, -195, -111, 185, -133}
		},
	 -- Темная долина --- fixed by KamikaZze
		["l04_darkvalley"] = {
			x1 = {-131, -100, -36, 191, 122, 51, 51, -29, -26, 20, 73, 71},
			x2 = {-217, -155, -53, 96, 82, -12, -33, -73, -32, 8, 35, 40},
			y1 = {-211, -532, -547, -301, -20, -91, 25, -23, -22, 5, -249, -225},
			y2 = {-175, -455, -536, -200, 8, -16, 50, -18, 25, 17, -208, -179}
		},
	 -- Агропром --- fixed by KamikaZze
		["l03_agroprom"] = {
			x1 = {67, -188, -89, 291, 255, -158},
			x2 = {-100, -209, -211, 265, 220, -170},
			y1 = {-36, 78, -241, 0, -16, 90},
			y2 = {58, 102, -117, 5, 7, 98}
		},
	 -- Дикая территория --- fixed by KamikaZze
		["l06_rostok"] = {
			x1 = {37, -58, -226, -235, -218, -113, -215, -242},
			x2 = {9, -103, -235, -285, -242, -213, -297, -266},
			y1 = {117, 113, 135, 78, 29, -123, 119, 2},
			y2 = {156, 151, 165, 112, 64, -49, 172, 24}
		},
	 -- Янтарь
		["l08_yantar"] = {
			x1 = {39, 116, 150},
			x2 = {30, 55, 155},
			y1 = {-55, -58, 58},
			y2 = {-47, -34, 64}
		},
	 -- Армейские склады --- fixed by KamikaZze
		["l07_military"] = {
			x1 = {-305, -317, -198, -259, -324, -160, -83, 104, 113, -203, -117, 75, -14, 77, -2, -186, 92},
			x2 = {-322, -347, -233, -277, -386, -195, -105, 85, 87, -247, -146, -141, -60, 0, -10, -202, 12},
			y1 = {55, 37, 185, 234, 371, 350, 207, 300, 160, 31, 7, -62, -34, 10, 0, 35, 335},
			y2 = {67, 50, 211, 249, 411, 391, 235, 316, 184, 72, 37, 122, -10, 23, 109, 46, 403}
		},
	 -- Радар --- fixed by KamikaZze
		["l10_radar"] = {
			x1 = {149, 390, 664, 404, 314},
			x2 = {75, 377, 609, 355, 297},
			y1 = {-35, 141, 167, -11, -30},
			y2 = {-20, 162, 200, 40, -15}
		},
	 -- Припять --- fixed by KamikaZze
		["l11_pripyat"] = {
			x1 = {31, 118, 115, 36, 18, 33},
			x2 = {11, 58, 96, 27, -17, -15},
			y1 = {-296, -2, 110, 280, 191, -307},
			y2 = {-266, 33, 159, 301, 210, -60}
		},
		
		["l12_stancia"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["l12u_sarcofag"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["l12u_control_monolith"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["l12_stancia_2"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["l03u_agr_underground"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["l04u_labx18"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["l08u_brainlab"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["l10u_bunker"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["atp_for_test22"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["peshera"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["puzir"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["aver"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["av_peshera"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["limansk"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["hospital"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["generators"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["warlab"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["red_forest"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["lost_village"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["marsh"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["dead_city"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["zaton"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["jupiter"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["pripyat"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["jupiter_underground"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["labx8"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["cs_agroprom_underground"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["predbannik"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["garbage_old"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["yantar_old"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		},
		
		["swamp_old"] = {
			x1 = {0, 1, 2, 3},
			x2 = {1, 2, 3, 4},
			y1 = {0, 1, 2, 3},
			y2 = {1, 2, 3, 4}
		}
	}
	
	function bad_sector(p_vector, lname)
	--нужно для того, чтобы монстры за пределами локаций не спавнились.
		local bad_list = bad_sector_table[lname] --формируется по принципу x1>x2, y2>y1
		
		if not bad_list then return false end
		
		for k,v in pairs(bad_list.x1) do
			if (p_vector.x >= (bad_list.x2[k]) and (p_vector.x <= bad_list.x1[k])) and (p_vector.z >= (bad_list.y1[k]) and p_vector.z <= (bad_list.y2[k])) then
				return true
			end
		end
		
		return false
	end
	
	function bad_zone(p_vector)
	--Проверяем, попадает ли монстр в зоны укрытий и кострищ
		for i=1,65535 do
			local obj = alife():object(i)
			
			if obj then
				if string.find(obj:name(), level.name().."_hide_restrictor") or
				string.find(obj:name(),"zone_campfire_grill") or
				string.find(obj:name(),"zone_flame") or
				string.find(obj:name(),"light_koster")
				then
					if p_vector:distance_to(obj.position) <= 50 then
						--Запрещено спавнить монстров ближе 50 метров от укрытий и костров
						return true
					end
				end
			end
		end
		
		return false
	end
	
	--Круглые области, внутри которых ВСЕГДА запрещено спавнить монстров.
	local bad_circle_table = {
		["l01_escape"] = {
			{-157, -29.6,-369, 200}, -- армейский кордон
			{-200, -20,-140, 50}, -- ДН
		},
		
		["l02_garbage"] = {
			{15.16, 0.40, -14.70, 15}, -- автобусная остановка напротив ангара
			{48, 0.7,231, 20} -- Блокпост Долга
		},
		
		["l03_agroprom"] = {
			{0,0,0,1} -- шаблон
		},
		
		["l04_darkvalley"] = {
			{0,0,0,1} -- шаблон
		},
		
		["l05_bar"] = {
			{160.00, 0.00, 100.00,150} -- территория
		},
		
		["l06_rostok"] = {
			{-27.35, 0.00, 141.50, 30} -- пост долговцев на ДТ
		},
		
		["l07_military"] = {
			{0,0,0,1} -- шаблон
		},
		
		["l08_yantar"] = {
			{31.55, -11.70,-272.40, 70} -- лагерь экологов
		},
		
		["l10_radar"] = {
			{0,0,0,1} -- шаблон
		},
		
		-- kenguru оставил тут для будущего заполнения
		-- Заполняется по принципу: первые три числа - X,Y, Z центра окружности, четвёртое число - радиус в метрах
		-- Каждая область в фигурных скобках через запятую, последняя скобка БЕЗ запятой!
		
		["l11_pripyat"] = {
			{0,0,0,1} -- шаблон
		},
		
		["l12_stancia"] = {
			{0,0,0,1} -- шаблон
		},
		
		["l12u_sarcofag"] = {
			{0,0,0,1} -- шаблон
		},
		
		["l12u_control_monolith"] = {
			{0,0,0,1} -- шаблон
		},
		
		["l12_stancia_2"] = {
			{0,0,0,1} -- шаблон
		},
		
		["l03u_agr_underground"] = {
			{0,0,0,1} -- шаблон
		},
		
		["l04u_labx18"] = {
			{0,0,0,1} -- шаблон
		},
		
		["l08u_brainlab"] = {
			{0,0,0,1} -- шаблон
		},
		
		["l10u_bunker"] = {
			{0,0,0,1} -- шаблон
		},
		
		["atp_for_test22"] = {
			{138,-7,20,50} -- АТП
		},
		
		["peshera"] = {
			{0,0,0,1} -- шаблон
		},
		
		["puzir"] = {
			{0,0,0,1} -- шаблон
		},
		
		["aver"] = {
			{-345,-8.6,-8.3,20} -- место около Лесничего
		},
		
		["av_peshera"] = {
			{0,0,0,1} -- шаблон
		},
		
		["limansk"] = {
			{-42,-4.4,-255,25} -- База сталкеров Лиманска
		},
		
		["hospital"] = {
			{0,0,0,1} -- шаблон
		},
		
		["generators"] = {
			{0,0,0,1} -- шаблон
		},
		
		["warlab"] = {
			{0,0,0,1} -- шаблон
		},
		
		["red_forest"] = {
			{0,0,0,1} -- шаблон
		},
		
		["lost_village"] = {
			{74,4.5,-56,15} -- около Зверобоя
		},
		
		["marsh"] = {
			{-155, 0.5, -280, 60}, -- База ЧН
			{0,0,1,1} -- шаблон
		},
		
		["dead_city"] = {
			{0,0,0,1} -- шаблон
		},
		
		["zaton"] = {
			{124, -7.3,177,40}, -- Скадовск
			{158,-6.9,-136,20} -- баржа Ноя
		},
		
		["jupiter"] = {
			{-226, -3.5,78,30}, -- бункер учёных
			{-50,3.4,190,35} -- Янов
		},
		
		["pripyat"] = {
			{140,0,-190,40} -- прачечная
		},
		
		["jupiter_underground"] = {
			{0,0,0,1} -- шаблон
		},
		
		["labx8"] = {
			{0,0,0,1} -- шаблон
		},
		
		["cs_agroprom_underground"] = {
			{0,0,0,1} -- шаблон
		},
		
		["predbannik"] = {
			{0,0,0,1} -- шаблон
		},
		
		["garbage_old"] = {
			{-45,3,249,50}, -- ангар сталкеров
			{44,22,-147,15} -- домик Шухова
		},
		
		["yantar_old"] = {
			{0,0,0,1} -- шаблон
		},
		
		["swamp_old"] = {
			{197,2.8,-39,20}, -- Дом Доктора
			{-320,2.6,66,20} -- Туннель охотников
		}
	}
	
	local bad_circle_tbl = bad_circle_table[lname]
	local table_bad_circles = {}
	
	if bad_circle_tbl then
		for _, pos in pairs(bad_circle_tbl) do
			table.insert(table_bad_circles, {vector():set(pos[1], pos[2], pos[3]), pos[4]})
		end
	end
	
	function bad_circle(pos)
		for k, v in ipairs(table_bad_circles) do
			if pos:distance_to(v[1]) <= v[2] then
				return true
			end
		end
		
		return false
	end
	
	local bad_pos_table = {
		["l01_escape"] = {
			{377, 20.1, 281}, -- приход со Старой Свалки
			{148, 0.3, 348}, -- приход с Путепровода
			{29, 16.5, 680}, -- приход со Свалки
			{-113, 11.4, 123}, -- приход с Болот
			{358, 15.1, -35}, -- приход с Пещеры
			{-125, -26.2, -467} -- приход с Предбанника
		},
		
		["l02_garbage"] = {
			{257, -9.3, -125}, -- приход с Волчьего Леса
			{39, 0.4, -298}, -- приход с Кордона
			{-279, 1.7, -21}, -- приход с Агропрома
			{-6, 0.4, 284} -- приход с Бара
		},
		
		["l03_agroprom"] = {
			{-82, 10.6, -110}, -- приход с Катакомб
			{254, -0.2, 71}, -- приход с Путепровода
			{14, -139}, -- приход с Кордона
			{281, 0.3, 2}, -- приход со Свалки
			{-75, 1.7, 11}, -- приход с подземки Агропрома
			{-124, 0, -136}, -- приход с подземки Агропрома
			{8, 20.5, 209}, -- приход с ДТ
			{-244, 15.8, 134}, -- приход с Янтаря
			{180, 0.9, -226} -- приход с Болот
		},
		
		["l04_darkvalley"] = {
			{-160, 1.3, -537}, -- приход с Волчьего Леса
			{-188, 3.8, -193}, -- приход с Волчьего Леса
			{-45, 0.4, -541}, -- приход со Старой Свалки
			{-2, 0.1, -56}, -- приход с Путепровода
			{123, -2.8, -261} -- приход с Х-18
		},
		
		["l05_bar"] = {
			{390, 12.5, -361}, -- приход со Свалки
			{52, 0, 140}, -- приход с ДТ
			{-14, -5.8, 361} -- приход со Складов
		},
		
		["l06_rostok"] = {
			{-82, 7.2, -267}, -- приход с Агропрома
			{31, -0.6, 140}, -- приход с Бара
			{-144, -13.2, -256} -- приход с Янтаря
		},
		
		["l07_military"] = {
			{-368, -14, 397}, -- приход с АТП
			{-108, -12.5, -25}, -- приход с Путепровода
			{-388, -21.4, 0}, -- приход с Бара
			{167, -0.1, 432} -- приход с Радара
		},
		
		["l08_yantar"] = {
			{192, 17.3, -260}, -- приход с Агропрома
			{227, 6.5, -256}, -- приход с ДТ
			{-240, -19, -43}, -- приход с Х-16
			{4, -1.2, -13}, -- приход с Х-16
			{-64, -3.6, -344}, -- приход с Болот
			{-12, 0, 9} -- приход с БД
		},
		
		["l10_radar"] = {
			{660, -43.8, 175}, -- приход с Путепровода
			{568, -53.4, -408}, -- приход со Складов
			{305, -39.3, -22}, -- приход с Х-10
			{147, -9.2, -32}, -- приход с Х-10
			{375, -33.9, 154} -- приход с Припяти
		},
		
		["l11_pripyat"] = {
			{-111, -2.2, -69}, -- приход с Юпитера
			{44, -2.2, -290}, -- приход с Радара
			{34, -0.6, 447}, -- приход со Станции ЧАЭС-1
			{153, -2.2, -57} -- приход с Восточной Припяти
		},
		
		["l12_stancia"] = {
			{919, -0.1, -368}, -- приход с Припяти
			{376, 0, 31}, -- приход с Саркофага
			{1066, 0, -20}, -- приход со Станции ЧАЭС-2
			{983, -0.1, -317}, -- приход с Восточной Припяти
			{379, 0, -230} -- приход с Научной Станции
		},
		
		["l12u_sarcofag"] = {
			{59, 16.6, 27}, -- приход с Контроля Монолита
			{-28, 0.23, 46} -- приход со Станции ЧАЭС-1
		},
		
		["l12u_control_monolith"] = {
			{-11, -34.3, -8}, -- приход с Саркофага
			{36, -34, 21} -- приход со Станции ЧАЭС-2
		},
		
		["l12_stancia_2"] = {
			{163, 0.1, 316}, -- приход со Генераторов
			{1, 5.2, 67}, -- приход с Контроля Монолита
			{1000, 0, 124} -- приход со Станции ЧАЭС-1
		},
		
		["l03u_agr_underground"] = {
			{-38, -3.8, 31}, -- приход с Агропрома
			{-122, -3.8, -141} -- приход с Агропрома
		},
		
		["l04u_labx18"] = {
			{37, -6.3, -29}, -- приход с Путепровода
			{-3, 9.4, -7} -- приход с ТД
		},
		
		["l08u_brainlab"] = {
			{149, 34, -16} -- приход с Янтаря
		},
		
		["l10u_bunker"] = {
			{20, -23.4, 30}, -- приход с Путепровода
			{14, -23.5, 17}, -- приход с Радара
			{0, -7.4, -75} -- приход с Радара
		},
		
		["atp_for_test22"] = {
			{358, -6, -23}, -- приход со Складов
			{-146, -3.6, 294}, -- приход с Пузыря
			{-223, 2.1, -14}, -- приход с Рыжего Леса
			{-131, -8.2, -357} -- приход с БД
		},
		
		["peshera"] = {
			{-95, 10.5, -123}, -- какой-то сталкер
			{-73, 10.2, -95}, -- Колобок
			{-99, 7.6, -112}, -- приход с Лабиринта
			{-10, -2.4, 0}, -- приход со Старой Свалки
			{-99, 8.6, -118}, -- приход с Путепровода
			{-197, -9.8, 15}, -- приход с Кордона
			{-98, 8.4, -117} -- приход с Предбанника
		},
		
		["puzir"] = {
			{208, 0.3, -192}, -- приход с АТП
			{192, 1.5, 214}, -- приход с Юпитера
			{-169, 11.1, -203} -- приход с Рыжего Леса
		},
		
		["aver"] = {
			{-414, 0.8, 62}, -- приход с Лабиринта
			{-338, 4.2, -395}, -- приход со Свалки
			{436, -5.6, -319}, -- приход с ТД
			{306, -35.6, 409} -- приход с ТД
		},
		
		["av_peshera"] = {
			{140, 38.6, 394}, -- приход с Волчьего Леса
			{93, 40.8, 388}, -- приход с Пещеры
			{-398, 87.8, 187} -- приход с Затона
		},
		
		["limansk"] = {
			{59, 3.2, 342}, -- приход с Госпиталя
			{5, 0, -365} -- приход с Рыжего Леса
		},
		
		["hospital"] = {
			{-76, 31.9, 843}, -- приход с МГ
			{-75, 19.7, 567} -- приход с Лиманска
		},
		
		["generators"] = {
			{81, 25.4, -56}, -- приход с МГ
			{219, 19.3, -99}, -- приход со Станции ЧАЭС-2
			{172, 30.4, -489}, -- приход с Варлаба
			{-63, 33, -536} -- приход с Научной Станции
		},
		
		["warlab"] = {
			{5, 7.3, 15}, -- приход со Генераторов
			{-3, -3, -16} -- приход с Х-8
		},
		
		["red_forest"] = {
			{255, -1.4, -310}, -- приход с АТП
			{-52, 0, 100}, -- приход с Юпитера
			{-140, -6.1, -62}, -- приход с Путепровода
			{-186, 0.1, -291}, -- приход с Лиманска
			{-15, 0.7, -441}, -- приход с ЗД
			{238, 5, 104} -- приход с Пузыря
		},
		
		["lost_village"] = {
			{117, 13.5, 83}, -- приход с Рыжего Леса
			{118, 7.3, -16} -- приход с БД
		},
		
		["marsh"] = {
			{648, 7.5, 423}, -- приход с Кордона
			{643, 10.5, 464}, -- приход с Агропрома
			{169, 9.5, 576}, -- приход с Янтаря
			{555, 1.9, -179}, -- приход с Предбанника
			{-208, 4.2, 513} -- приход с БД
		},
		
		["dead_city"] = {
			{-229, -2.0, 290}, -- приход со Генераторов
			{-249, 3.6, -129}, -- приход с Госпиталя
			{137, 1.2, -129} -- приход с Научной Станции
		},
		
		["zaton"] = {
			{51, 5.4, -112}, -- приход с Лабиринта
			{-414, 30.1, -377}, -- приход с Катакомб
			{430, 30.7, -418}, -- приход с Юпитера
			{-416, -1.1, 61}, -- приход с Путепровода
			{-320, 19.3, 608} -- приход с Научной Станции
		},
		
		["jupiter"] = {
			{-7, 24, 243}, -- Динка
			{-6, 23.1, 246}, -- Хемуль
			{-219, -3.5, 74}, -- Новиков ещё один?
			{-394, 19.6, 430}, -- эколог
			{-22, 15.5, -320}, -- Грек
			{-385, 19.9, 430}, -- Усач
			{-202, -3.9, 57}, -- Тополь
			{-446, 0, -383}, -- Туз
			{14, 24.6, -188}, -- Валет
			{-13, 23, 249}, -- Зулус
			{344, 23.7, -329}, -- приход с Путепровода
			{436, 27.6, -163}, -- приход с Припяти
			{-434, 31.8, 426}, -- приход с Пузыря
			{-442, 0, -346}, -- приход с Рыжего Леса
			{427, 0.1, 472} -- приход с Затона
		},
		
		["pripyat"] = {
			{185, -0.5, -257}, -- приход с Путепровода
			{-250, -0.4, -237}, -- приход с Припяти
			{176, -0.4, 404}, -- приход со Станции ЧАЭС-1
			{-80, 0.3, 93} -- приход с Х-8
		},
		
		["jupiter_underground"] = {
			{61, 1.8, 13}, -- приход с Катакомб
			{78, 4.2, -222}, -- приход со Старой Свалки
			{-47, 8.0, 438}, -- приход с Юпитера
			{14, 4.97, -139}, -- приход с Кордона
			{-10, -0.7, -70}, -- приход с Агропрома
			{61, 3, 0}, -- приход с Х-18
			{51, -0.5, 26}, -- приход с ТД
			{-51, 3.2, 0}, -- приход с Бара
			{-5, 0, 65}, -- приход со Складов
			{13, 9.4, 376}, -- приход с Х-10
			{49, 17, 247}, -- приход с Радара
			{37, 4.4, -174}, -- приход с Пещеры
			{75, 0, 112}, -- приход с Восточной Припяти
			{-11, 0, -28}, -- приход с Рыжего Леса
			{48, 4.2, -147}, -- приход с БД
			{-2, 9.2, 201} -- приход с Затона
		},
		
		["labx8"] = {
			{-78, -10.8, 88}, -- приход с Восточной Припяти
			{-95, -20, 68} -- приход с Варлаба
		},
		
		["cs_agroprom_underground"] = {
			{58, -0.7, -1}, -- приход с Путепровода
			{32, 15.7, 29}, -- приход с Агропрома
			{71, -16.1, 98}, -- приход с Научной Станции
			{61, -19.4, -172} -- приход с Затона
		},
		
		["predbannik"] = {
			{191.95, -28.2, 507.61}, -- приход со Старой Свалки
			{-567, 18.0, 401}, -- приход с Кордона
			{-575, 32.6, 64}, -- приход с Болот
			{-273, 10.5, 223} -- приход с Пещеры
		},
		
		["garbage_old"] = {
			{-87, 5.5, 498}, -- приход с Путепровода
			{-113, 21.6, -80}, -- приход с Кордона
			{90, 12.6, 608}, -- приход с ТД
			{28, 16.7, -382}, -- приход с Пещеры
			{22, 4.8, -633} -- приход с Предбанника
		},
		
		["yantar_old"] = {
			{83, 13.1, -37}, -- приход с Катакомб
			{-268, 6.3, 25}, -- приход с МГ
			{-169, 8.0, 271}, -- приход со Генераторов
			{274, 5.2, -263}, -- приход со Станции ЧАЭС-1
			{53, 4.8, -273} -- приход с Затона
		},
		
		["swamp_old"] = {
			{271, 2.7, 286}, -- приход с АТП
			{196, 1.4, -12}, -- приход с Путепровода
			{279, 6.9, 67}, -- приход с Янтаря
			{-321, 2.2, 69}, -- приход с ЗД
			{278, 3.7, -270} -- приход с Болот
		}
	}
	
	local bad_pos_tbl = bad_pos_table[lname]
	local table_bad_pos = {}
	
	if bad_pos_tbl then
		for _, pos in pairs(bad_pos_tbl) do
			table.insert(table_bad_pos, {vector():set(pos[1], pos[2], pos[3])})
			table.insert(table_bad_pos, {db.actor:position()})
		end
	end
	
	function bad_pos(pos)
		for k, v in ipairs(table_bad_pos) do
			if pos:distance_to(v[1]) <= 50 then
				return true
			end
		end
		
		return false
	end
	
	-- local pos, lv_rand, gv_rand = monster_position_choice(lname)
	
	function monster_position_choice(lname)
		local lvx = level.vertex_count() - 1
		local lv_rand, pos
		
		repeat --Подбираем свободный level_vertex и position
			lv_rand = math.random(lvx)
			pos = level.vertex_position(lv_rand)
		until not (
			bad_sector(pos, lname) --Скорее всего, места за пределами локаций
			or bad_zone(pos, lname) --Укрытия и костры. По сути те же круглые области, но с фиксированным радиусом 10 м. Место берётся автоматом по тексту в имени секции
			or bad_circle(pos, lname) --Круглые области, в которых по каким-то причинам нельзя спавнить аномалии (лагеря, базы и тд.). Вписываются вручную.
			or bad_pos(pos) --Запрещённые точки. По сути те же круглые области, но с фиксированным радиусом 5 м. Вписываются вручную.
		)
		
		local gv_rand = cross_table():vertex(lv_rand):game_vertex_id()
		
		return pos, lv_rand, gv_rand
	end
	
	if lname == "predbannik" then
		if has_alife_info("predbannik_flesh1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\flesh1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_flesh1_death")
		end
		if has_alife_info("predbannik_flesh2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\flesh2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_flesh2_death")
		end
		if has_alife_info("predbannik_flesh3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\flesh3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_flesh3_death")
		end
		if has_alife_info("predbannik_flesh4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\flesh4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_flesh4_death")
		end
		if has_alife_info("predbannik_flesh5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\flesh5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_flesh5_death")
		end
		if has_alife_info("predbannik_flesh6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\flesh6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_flesh6_death")
		end
		if has_alife_info("predbannik_flesh7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\flesh7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_flesh7_death")
		end
		if has_alife_info("predbannik_flesh8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\flesh8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_flesh8_death")
		end
		if has_alife_info("predbannik_dog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog1_death")
		end
		if has_alife_info("predbannik_dog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog2_death")
		end
		if has_alife_info("predbannik_dog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog3_death")
		end
		if has_alife_info("predbannik_dog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog4_death")
		end
		if has_alife_info("predbannik_dog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog5_death")
		end
		if has_alife_info("predbannik_dog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog6_death")
		end
		if has_alife_info("predbannik_dog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog7_death")
		end
		if has_alife_info("predbannik_dog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog8_death")
		end
		if has_alife_info("predbannik_dog9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog9_death")
		end
		if has_alife_info("predbannik_dog10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog10_death")
		end
		if has_alife_info("predbannik_dog11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog11_death")
		end
		if has_alife_info("predbannik_dog12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog12_death")
		end
		if has_alife_info("predbannik_dog13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog13_death")
		end
		if has_alife_info("predbannik_dog14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog14_death")
		end
		if has_alife_info("predbannik_dog15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog15_death")
		end
		if has_alife_info("predbannik_dog16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog16_death")
		end
		if has_alife_info("predbannik_dog17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog17_death")
		end
		if has_alife_info("predbannik_dog18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog18_death")
		end
		if has_alife_info("predbannik_dog19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog19_death")
		end
		if has_alife_info("predbannik_dog20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\predbannik\\dog20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("predbannik_dog20_death")
		end
	end
	
	if lname == "marsh" then
		if has_alife_info("marsh_flesh1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\flesh1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_flesh1_death")
		end
		if has_alife_info("marsh_flesh2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\flesh2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_flesh2_death")
		end
		if has_alife_info("marsh_flesh3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\flesh3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_flesh3_death")
		end
		if has_alife_info("marsh_flesh4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\flesh4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_flesh4_death")
		end
		if has_alife_info("marsh_flesh5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\flesh5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_flesh5_death")
		end
		if has_alife_info("marsh_flesh6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\flesh6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_flesh6_death")
		end
		if has_alife_info("marsh_flesh7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\flesh7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_flesh7_death")
		end
		if has_alife_info("marsh_flesh8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\flesh8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_flesh8_death")
		end
		if has_alife_info("marsh_flesh9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\flesh9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_flesh9_death")
		end
		if has_alife_info("marsh_flesh10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\flesh10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_flesh10_death")
		end
		if has_alife_info("marsh_flesh11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\flesh11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_flesh11_death")
		end
		if has_alife_info("marsh_flesh12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\flesh12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_flesh12_death")
		end
		if has_alife_info("marsh_flesh13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\flesh13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_flesh13_death")
		end
		if has_alife_info("marsh_flesh14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\flesh14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_flesh14_death")
		end
		if has_alife_info("marsh_boar1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\boar1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_boar1_death")
		end
		if has_alife_info("marsh_boar2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\boar2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_boar2_death")
		end
		if has_alife_info("marsh_boar3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\boar3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_boar3_death")
		end
		if has_alife_info("marsh_boar4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\boar4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_boar4_death")
		end
		if has_alife_info("marsh_boar5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\boar5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_boar5_death")
		end
		if has_alife_info("marsh_boar6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\boar6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_boar6_death")
		end
		if has_alife_info("marsh_boar7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\boar7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_boar7_death")
		end
		if has_alife_info("marsh_boar8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\boar8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_boar8_death")
		end
		if has_alife_info("marsh_boar9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\boar9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_boar9_death")
		end
		if has_alife_info("marsh_boar10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\boar10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_boar10_death")
		end
		if has_alife_info("marsh_boar11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\boar11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_boar11_death")
		end
		if has_alife_info("marsh_boar12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\boar12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_boar12_death")
		end
		if has_alife_info("marsh_boar13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\boar13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_boar13_death")
		end
		if has_alife_info("marsh_boar14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\boar14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_boar14_death")
		end
		if has_alife_info("marsh_tushkano1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\tushkano1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_tushkano1_death")
		end
		if has_alife_info("marsh_tushkano2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\tushkano2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_tushkano2_death")
		end
		if has_alife_info("marsh_tushkano3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\tushkano3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_tushkano3_death")
		end
		if has_alife_info("marsh_tushkano4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\tushkano4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_tushkano4_death")
		end
		if has_alife_info("marsh_tushkano5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\tushkano5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_tushkano5_death")
		end
		if has_alife_info("marsh_tushkano6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\tushkano6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_tushkano6_death")
		end
		if has_alife_info("marsh_dog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog1_death")
		end
		if has_alife_info("marsh_dog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog2_death")
		end
		if has_alife_info("marsh_dog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog3_death")
		end
		if has_alife_info("marsh_dog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog4_death")
		end
		if has_alife_info("marsh_dog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog5_death")
		end
		if has_alife_info("marsh_dog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog6_death")
		end
		if has_alife_info("marsh_dog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog7_death")
		end
		if has_alife_info("marsh_dog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog8_death")
		end
		if has_alife_info("marsh_dog9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog9_death")
		end
		if has_alife_info("marsh_dog10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog10_death")
		end
		if has_alife_info("marsh_dog11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog11_death")
		end
		if has_alife_info("marsh_dog12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog12_death")
		end
		if has_alife_info("marsh_dog13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog13_death")
		end
		if has_alife_info("marsh_dog14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog14_death")
		end
		if has_alife_info("marsh_dog15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog15_death")
		end
		if has_alife_info("marsh_dog16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog16_death")
		end
		if has_alife_info("marsh_dog17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\dog17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_dog17_death")
		end
		if has_alife_info("marsh_pseudodog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\pseudodog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_pseudodog1_death")
		end
		if has_alife_info("marsh_pseudodog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\pseudodog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_pseudodog2_death")
		end
		if has_alife_info("marsh_pseudodog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\pseudodog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_pseudodog3_death")
		end
		if has_alife_info("marsh_bloodsucker1_death") and not has_alife_info("third_dialog_kalancha") then
			local obj = alife():create("bloodsucker_strong",vector():set(149.81524658203,0.82491481304169,450.1220703125),226156,3474)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\marsh\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("marsh_bloodsucker1_death")
		end
	end
	
	if lname == "swamp_old" then
		if has_alife_info("swamp_old_boar1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar1_death")
		end
		if has_alife_info("swamp_old_boar2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar2_death")
		end
		if has_alife_info("swamp_old_boar3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar3_death")
		end
		if has_alife_info("swamp_old_boar4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar4_death")
		end
		if has_alife_info("swamp_old_boar5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar5_death")
		end
		if has_alife_info("swamp_old_boar6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar6_death")
		end
		if has_alife_info("swamp_old_boar7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar7_death")
		end
		if has_alife_info("swamp_old_boar8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar8_death")
		end
		if has_alife_info("swamp_old_boar9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar9_death")
		end
		if has_alife_info("swamp_old_boar10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar10_death")
		end
		if has_alife_info("swamp_old_boar11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar11_death")
		end
		if has_alife_info("swamp_old_boar12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar12_death")
		end
		if has_alife_info("swamp_old_boar13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar13_death")
		end
		if has_alife_info("swamp_old_boar14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar14_death")
		end
		if has_alife_info("swamp_old_boar15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar15_death")
		end
		if has_alife_info("swamp_old_boar16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\boar16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_boar16_death")
		end
		if has_alife_info("swamp_old_flesh1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\flesh1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_flesh1_death")
		end
		if has_alife_info("swamp_old_flesh2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\flesh2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_flesh2_death")
		end
		if has_alife_info("swamp_old_flesh3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\flesh3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_flesh3_death")
		end
		if has_alife_info("swamp_old_flesh4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\flesh4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_flesh4_death")
		end
		if has_alife_info("swamp_old_flesh5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\flesh5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_flesh5_death")
		end
		if has_alife_info("swamp_old_flesh6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\flesh6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_flesh6_death")
		end
		if has_alife_info("swamp_old_flesh7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\flesh7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_flesh7_death")
		end
		if has_alife_info("swamp_old_flesh8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\flesh8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_flesh8_death")
		end
		if has_alife_info("swamp_old_flesh9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\flesh9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_flesh9_death")
		end
		if has_alife_info("swamp_old_tushkano1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano1_death")
		end
		if has_alife_info("swamp_old_tushkano2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano2_death")
		end
		if has_alife_info("swamp_old_tushkano3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano3_death")
		end
		if has_alife_info("swamp_old_tushkano4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano4_death")
		end
		if has_alife_info("swamp_old_tushkano5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano5_death")
		end
		if has_alife_info("swamp_old_tushkano6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano6_death")
		end
		if has_alife_info("swamp_old_tushkano7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano7_death")
		end
		if has_alife_info("swamp_old_tushkano8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano8_death")
		end
		if has_alife_info("swamp_old_tushkano9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano9_death")
		end
		if has_alife_info("swamp_old_tushkano10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano10_death")
		end
		if has_alife_info("swamp_old_tushkano11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano11_death")
		end
		if has_alife_info("swamp_old_tushkano12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano12_death")
		end
		if has_alife_info("swamp_old_tushkano13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano13_death")
		end
		if has_alife_info("swamp_old_tushkano14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano14_death")
		end
		if has_alife_info("swamp_old_tushkano15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano15_death")
		end
		if has_alife_info("swamp_old_tushkano16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano16_death")
		end
		if has_alife_info("swamp_old_tushkano17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano17_death")
		end
		if has_alife_info("swamp_old_tushkano18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano18_death")
		end
		if has_alife_info("swamp_old_tushkano19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano19_death")
		end
		if has_alife_info("swamp_old_tushkano20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano20_death")
		end
		if has_alife_info("swamp_old_tushkano21_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano21.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano21_death")
		end
		if has_alife_info("swamp_old_tushkano22_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano22.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano22_death")
		end
		if has_alife_info("swamp_old_tushkano23_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano23.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano23_death")
		end
		if has_alife_info("swamp_old_tushkano24_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano24.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano24_death")
		end
		if has_alife_info("swamp_old_tushkano25_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano25.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano25_death")
		end
		if has_alife_info("swamp_old_tushkano26_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano26.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano26_death")
		end
		if has_alife_info("swamp_old_tushkano27_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano27.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano27_death")
		end
		if has_alife_info("swamp_old_tushkano28_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano28.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano28_death")
		end
		if has_alife_info("swamp_old_tushkano29_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano29.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano29_death")
		end
		if has_alife_info("swamp_old_tushkano30_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano30.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano30_death")
		end
		if has_alife_info("swamp_old_tushkano31_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano31.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano31_death")
		end
		if has_alife_info("swamp_old_tushkano32_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano32.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano32_death")
		end
		if has_alife_info("swamp_old_tushkano33_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano33.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano33_death")
		end
		if has_alife_info("swamp_old_tushkano34_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano34.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano34_death")
		end
		if has_alife_info("swamp_old_tushkano35_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\tushkano35.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_tushkano35_death")
		end
		if has_alife_info("swamp_old_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_bloodsucker1_death")
		end
		if has_alife_info("swamp_old_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_bloodsucker2_death")
		end
		if has_alife_info("swamp_old_bloodsucker3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\bloodsucker3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_bloodsucker3_death")
		end
		if has_alife_info("swamp_old_bloodsucker4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\bloodsucker4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_bloodsucker4_death")
		end
		if has_alife_info("swamp_old_bloodsucker5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\bloodsucker5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_bloodsucker5_death")
		end
		if has_alife_info("swamp_old_snork1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\snork1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_snork1_death")
		end
		if has_alife_info("swamp_old_snork2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\snork2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_snork2_death")
		end
		if has_alife_info("swamp_old_snork3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\snork3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_snork3_death")
		end
		if has_alife_info("swamp_old_snork4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\snork4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_snork4_death")
		end
		if has_alife_info("swamp_old_snork5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\snork5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_snork5_death")
		end
		if has_alife_info("swamp_old_snork6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\snork6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_snork6_death")
		end
		if has_alife_info("swamp_old_snork7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\snork7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_snork7_death")
		end
		if has_alife_info("swamp_old_snork8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\snork8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_snork8_death")
		end
		if has_alife_info("swamp_old_snork9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\snork9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_snork9_death")
		end
		if has_alife_info("swamp_old_controller1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("controller_tubeman",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\controller1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_controller1_death")
		end
		if has_alife_info("swamp_old_cat1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("cat_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\cat1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_cat1_death")
		end
		if has_alife_info("swamp_old_cat2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("cat_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\cat2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_cat2_death")
		end
		if has_alife_info("swamp_old_cat3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("cat_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\cat3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_cat3_death")
		end
		if has_alife_info("swamp_old_cat4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("cat_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\cat4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_cat4_death")
		end
		if has_alife_info("swamp_old_cat5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("cat_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\cat5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_cat5_death")
		end
		if has_alife_info("swamp_old_cat6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("cat_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\cat6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_cat6_death")
		end
		if has_alife_info("swamp_old_cat7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("cat_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\cat7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_cat7_death")
		end
		if has_alife_info("swamp_old_cat8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("cat_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\cat8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_cat8_death")
		end
		if has_alife_info("swamp_old_cat9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("cat_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\cat9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_cat9_death")
		end
		if has_alife_info("swamp_old_cat10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("cat_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\cat10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_cat10_death")
		end
		if has_alife_info("swamp_old_fracture1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("fracture_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\fracture1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_fracture1_death")
		end
		if has_alife_info("swamp_old_zombie1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\zombie1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_zombie1_death")
		end
		if has_alife_info("swamp_old_zombie2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\zombie2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_zombie2_death")
		end
		if has_alife_info("swamp_old_zombie3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\zombie3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_zombie3_death")
		end
		if has_alife_info("swamp_old_zombie4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\zombie4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_zombie4_death")
		end
		if has_alife_info("swamp_old_zombie5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\zombie5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_zombie5_death")
		end
		if has_alife_info("swamp_old_zombie6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\zombie6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_zombie6_death")
		end
		if has_alife_info("swamp_old_zombie7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\zombie7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_zombie7_death")
		end
		if has_alife_info("swamp_old_zombie8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\zombie8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_zombie8_death")
		end
		if has_alife_info("swamp_old_zombie9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\zombie9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_zombie9_death")
		end
		if has_alife_info("swamp_old_zombie10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\zombie10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_zombie10_death")
		end
		if has_alife_info("swamp_old_zombie11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\zombie11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_zombie11_death")
		end
		if has_alife_info("swamp_old_zombie12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\zombie12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_zombie12_death")
		end
		if has_alife_info("swamp_old_zombie13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\swamp_old\\zombie13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("swamp_old_zombie13_death")
		end
	end
	
	if lname == "garbage_old" then
		if has_alife_info("garbage_old_dog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\dog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_dog1_death")
		end
		if has_alife_info("garbage_old_dog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\dog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_dog2_death")
		end
		if has_alife_info("garbage_old_dog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\dog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_dog3_death")
		end
		if has_alife_info("garbage_old_dog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\dog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_dog4_death")
		end
		if has_alife_info("garbage_old_dog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\dog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_dog5_death")
		end
		if has_alife_info("garbage_old_dog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\dog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_dog6_death")
		end
		if has_alife_info("garbage_old_dog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\dog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_dog7_death")
		end
		if has_alife_info("garbage_old_dog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\dog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_dog8_death")
		end
		if has_alife_info("garbage_old_dog9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\dog9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_dog9_death")
		end
		if has_alife_info("garbage_old_dog10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\dog10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_dog10_death")
		end
		if has_alife_info("garbage_old_dog11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\dog11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_dog11_death")
		end
		if has_alife_info("garbage_old_dog12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\dog12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_dog12_death")
		end
		if has_alife_info("garbage_old_dog13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\dog13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_dog13_death")
		end
		if has_alife_info("garbage_old_flesh1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\flesh1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_flesh1_death")
		end
		if has_alife_info("garbage_old_flesh2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\flesh2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_flesh2_death")
		end
		if has_alife_info("garbage_old_flesh3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\flesh3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_flesh3_death")
		end
		if has_alife_info("garbage_old_flesh4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\flesh4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_flesh4_death")
		end
		if has_alife_info("garbage_old_flesh5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\flesh5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_flesh5_death")
		end
		if has_alife_info("garbage_old_flesh6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\flesh6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_flesh6_death")
		end
		if has_alife_info("garbage_old_flesh7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\flesh7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_flesh7_death")
		end
		if has_alife_info("garbage_old_flesh8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\flesh8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_flesh8_death")
		end
		if has_alife_info("garbage_old_flesh9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\flesh9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_flesh9_death")
		end
		if has_alife_info("garbage_old_flesh10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\flesh10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_flesh10_death")
		end
		if has_alife_info("garbage_old_boar1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar1_death")
		end
		if has_alife_info("garbage_old_boar2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar2_death")
		end
		if has_alife_info("garbage_old_boar3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar3_death")
		end
		if has_alife_info("garbage_old_boar4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar4_death")
		end
		if has_alife_info("garbage_old_boar5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar5_death")
		end
		if has_alife_info("garbage_old_boar6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar6_death")
		end
		if has_alife_info("garbage_old_boar7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar7_death")
		end
		if has_alife_info("garbage_old_boar8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar8_death")
		end
		if has_alife_info("garbage_old_boar9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar9_death")
		end
		if has_alife_info("garbage_old_boar10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar10_death")
		end
		if has_alife_info("garbage_old_boar11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar11_death")
		end
		if has_alife_info("garbage_old_boar12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar12_death")
		end
		if has_alife_info("garbage_old_boar13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar13_death")
		end
		if has_alife_info("garbage_old_boar14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar14_death")
		end
		if has_alife_info("garbage_old_boar15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar15_death")
		end
		if has_alife_info("garbage_old_boar16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\boar16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_boar16_death")
		end
		if has_alife_info("garbage_old_tushkano1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\tushkano1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_tushkano1_death")
		end
		if has_alife_info("garbage_old_tushkano2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\tushkano2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_tushkano2_death")
		end
		if has_alife_info("garbage_old_tushkano3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\tushkano3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_tushkano3_death")
		end
		if has_alife_info("garbage_old_tushkano4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\tushkano4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_tushkano4_death")
		end
		if has_alife_info("garbage_old_tushkano5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\tushkano5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_tushkano5_death")
		end
		if has_alife_info("garbage_old_tushkano6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\tushkano6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_tushkano6_death")
		end
		if has_alife_info("garbage_old_tushkano7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\tushkano7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_tushkano7_death")
		end
		if has_alife_info("garbage_old_tushkano8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\tushkano8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_tushkano8_death")
		end
		if has_alife_info("garbage_old_tushkano9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\tushkano9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_tushkano9_death")
		end
		if has_alife_info("garbage_old_tushkano10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\tushkano10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_tushkano10_death")
		end
		if has_alife_info("garbage_old_tushkano11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\tushkano11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_tushkano11_death")
		end
		if has_alife_info("garbage_old_tushkano12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\tushkano12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_tushkano12_death")
		end
		if has_alife_info("garbage_old_tushkano13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\tushkano13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_tushkano13_death")
		end
		if has_alife_info("garbage_old_pseudodog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\pseudodog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_pseudodog1_death")
		end
		if has_alife_info("garbage_old_pseudodog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\pseudodog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_pseudodog2_death")
		end
		if has_alife_info("garbage_old_pseudodog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\pseudodog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_pseudodog3_death")
		end
		if has_alife_info("garbage_old_pseudodog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\pseudodog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_pseudodog4_death")
		end
		if has_alife_info("garbage_old_pseudodog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\pseudodog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_pseudodog5_death")
		end
		if has_alife_info("garbage_old_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_bloodsucker1_death")
		end
		if has_alife_info("garbage_old_burer1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\burer1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_burer1_death")
		end
		if has_alife_info("garbage_old_burer2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\burer2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_burer2_death")
		end
		if has_alife_info("garbage_old_burer3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\burer3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_burer3_death")
		end
		if has_alife_info("garbage_old_burer4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\garbage_old\\burer4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("garbage_old_burer4_death")
		end
	end
	
	if lname == "aver" then
		if has_alife_info("aver_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_bloodsucker1_death")
		end
		if has_alife_info("aver_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_bloodsucker2_death")
		end
		if has_alife_info("aver_bloodsucker3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\bloodsucker3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_bloodsucker3_death")
		end
		if has_alife_info("aver_bloodsucker4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\bloodsucker4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_bloodsucker4_death")
		end
		if has_alife_info("aver_bloodsucker5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\bloodsucker5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_bloodsucker5_death")
		end
		if has_alife_info("aver_bloodsucker6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\bloodsucker6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_bloodsucker6_death")
		end
		if has_alife_info("aver_boar1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\boar1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_boar1_death")
		end
		if has_alife_info("aver_boar2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\boar2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_boar2_death")
		end
		if has_alife_info("aver_boar3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\boar3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_boar3_death")
		end
		if has_alife_info("aver_boar4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\boar4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_boar4_death")
		end
		if has_alife_info("aver_boar5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\boar5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_boar5_death")
		end
		if has_alife_info("aver_boar6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\boar6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_boar6_death")
		end
		if has_alife_info("aver_boar7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\boar7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_boar7_death")
		end
		if has_alife_info("aver_boar8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\boar8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_boar8_death")
		end
		if has_alife_info("aver_boar9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\boar9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_boar9_death")
		end
		if has_alife_info("aver_boar10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\boar10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_boar10_death")
		end
		if has_alife_info("aver_boar11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\boar11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_boar11_death")
		end
		if has_alife_info("aver_boar12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\boar12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_boar12_death")
		end
		if has_alife_info("aver_boar13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\boar13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_boar13_death")
		end
		if has_alife_info("aver_boar14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\boar14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_boar14_death")
		end
		if has_alife_info("aver_dog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog1_death")
		end
		if has_alife_info("aver_dog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog2_death")
		end
		if has_alife_info("aver_dog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog3_death")
		end
		if has_alife_info("aver_dog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog4_death")
		end
		if has_alife_info("aver_dog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog5_death")
		end
		if has_alife_info("aver_dog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog6_death")
		end
		if has_alife_info("aver_dog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog7_death")
		end
		if has_alife_info("aver_dog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog8_death")
		end
		if has_alife_info("aver_dog9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog9_death")
		end
		if has_alife_info("aver_dog10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog10_death")
		end
		if has_alife_info("aver_dog11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog11_death")
		end
		if has_alife_info("aver_dog12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog12_death")
		end
		if has_alife_info("aver_dog13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog13_death")
		end
		if has_alife_info("aver_dog14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog14_death")
		end
		if has_alife_info("aver_dog15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog15_death")
		end
		if has_alife_info("aver_dog16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog16_death")
		end
		if has_alife_info("aver_dog17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog17_death")
		end
		if has_alife_info("aver_dog18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog18_death")
		end
		if has_alife_info("aver_dog19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog19_death")
		end
		if has_alife_info("aver_dog20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog20_death")
		end
		if has_alife_info("aver_dog21_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog21.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog21_death")
		end
		if has_alife_info("aver_dog22_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog22.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog22_death")
		end
		if has_alife_info("aver_dog23_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog23.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog23_death")
		end
		if has_alife_info("aver_dog24_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog24.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog24_death")
		end
		if has_alife_info("aver_dog25_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog25.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog25_death")
		end
		if has_alife_info("aver_dog26_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog26.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog26_death")
		end
		if has_alife_info("aver_dog27_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog27.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog27_death")
		end
		if has_alife_info("aver_dog28_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog28.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog28_death")
		end
		if has_alife_info("aver_dog29_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\dog29.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_dog29_death")
		end
		if has_alife_info("aver_flesh1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\flesh1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_flesh1_death")
		end
		if has_alife_info("aver_flesh2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\flesh2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_flesh2_death")
		end
		if has_alife_info("aver_flesh3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\flesh3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_flesh3_death")
		end
		if has_alife_info("aver_flesh4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\flesh4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_flesh4_death")
		end
		if has_alife_info("aver_flesh5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\flesh5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_flesh5_death")
		end
		if has_alife_info("aver_flesh6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\flesh6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_flesh6_death")
		end
		if has_alife_info("aver_flesh7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\flesh7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_flesh7_death")
		end
		if has_alife_info("aver_flesh8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\flesh8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_flesh8_death")
		end
		if has_alife_info("aver_flesh9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\flesh9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_flesh9_death")
		end
		if has_alife_info("aver_flesh10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\flesh10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_flesh10_death")
		end
		if has_alife_info("aver_flesh11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\flesh11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_flesh11_death")
		end
		if has_alife_info("aver_gigant1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\gigant1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_gigant1_death")
		end
		if has_alife_info("aver_gigant2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\gigant2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_gigant2_death")
		end
		if has_alife_info("aver_controller1_death") and has_alife_info("controler_spawn") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_controller_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\controller1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_controller1_death")
		end
		if has_alife_info("aver_controller2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_controller_old",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\controller2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_controller2_death")
		end
		if has_alife_info("aver_poltergeist1_death") and has_alife_info("polter_spawn") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\poltergeist1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_poltergeist1_death")
		end
		if has_alife_info("aver_poltergeist2_death") and has_alife_info("polter_spawn") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\poltergeist2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_poltergeist2_death")
		end
		if has_alife_info("aver_poltergeist3_death") and has_alife_info("polter_spawn") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\poltergeist3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_poltergeist3_death")
		end
		if has_alife_info("aver_poltergeist4_death") and has_alife_info("polter_spawn") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\poltergeist4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_poltergeist4_death")
		end
		if has_alife_info("aver_poltergeist5_death") and has_alife_info("controler_spawn") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\poltergeist5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_poltergeist5_death")
		end
		if has_alife_info("aver_poltergeist6_death") and has_alife_info("polter2_spawn") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\poltergeist6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_poltergeist6_death")
		end
		if has_alife_info("aver_pseudodog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\pseudodog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_pseudodog1_death")
		end
		if has_alife_info("aver_pseudodog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\pseudodog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_pseudodog2_death")
		end
		if has_alife_info("aver_pseudodog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\pseudodog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_pseudodog3_death")
		end
		if has_alife_info("aver_pseudodog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\pseudodog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_pseudodog4_death")
		end
		if has_alife_info("aver_pseudodog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\pseudodog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_pseudodog5_death")
		end
		if has_alife_info("aver_pseudodog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\pseudodog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_pseudodog6_death")
		end
		if has_alife_info("aver_pseudodog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\pseudodog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_pseudodog7_death")
		end
		if has_alife_info("aver_pseudodog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\pseudodog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_pseudodog8_death")
		end
		if has_alife_info("aver_snork1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\snork1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_snork1_death")
		end
		if has_alife_info("aver_snork2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\snork2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_snork2_death")
		end
		if has_alife_info("aver_snork3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\snork3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_snork3_death")
		end
		if has_alife_info("aver_snork4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\snork4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_snork4_death")
		end
		if has_alife_info("aver_snork5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\snork5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_snork5_death")
		end
		if has_alife_info("aver_snork6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\snork6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_snork6_death")
		end
		if has_alife_info("aver_snork7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\snork7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_snork7_death")
		end
		if has_alife_info("aver_snork8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\snork8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_snork8_death")
		end
		if has_alife_info("aver_snork9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\snork9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_snork9_death")
		end
		if has_alife_info("aver_snork10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\snork10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_snork10_death")
		end
		if has_alife_info("aver_snork11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\snork11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_snork11_death")
		end
		if has_alife_info("aver_snork12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\aver\\snork12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("aver_snork12_death")
		end
	end
	
	if lname == "jupiter_underground" then
		if has_alife_info("jup_und_burer1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer1_death")
		end
		if has_alife_info("jup_und_burer2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer2_death")
		end
		if has_alife_info("jup_und_burer3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer3_death")
		end
		if has_alife_info("jup_und_burer4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer4_death")
		end
		if has_alife_info("jup_ind_burer5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer5_death")
		end
		if has_alife_info("jup_und_burer6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer6_death")
		end
		if has_alife_info("jup_und_burer7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer7_death")
		end
		if has_alife_info("jup_und_burer8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer8_death")
		end
		if has_alife_info("jup_und_burer9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer9_death")
		end
		if has_alife_info("jup_und_burer10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer10_death")
		end
		if has_alife_info("jup_und_burer11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer11_death")
		end
		if has_alife_info("jup_und_burer12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer12_death")
		end
		if has_alife_info("jup_und_burer13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer13_death")
		end
		if has_alife_info("jup_und_burer14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer14_death")
		end
		if has_alife_info("jup_und_burer15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer15_death")
		end
		if has_alife_info("jup_und_burer16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer16_death")
		end
		if has_alife_info("jup_und_burer17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer17_death")
		end
		if has_alife_info("jup_und_burer18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer18_death")
		end
		if has_alife_info("jup_und_burer19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer19_death")
		end
		if has_alife_info("jup_und_burer20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\burer20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_burer20_death")
		end
		if has_alife_info("jup_und_zombie1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie1_death")
		end
		if has_alife_info("jup_und_zombie2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie2_death")
		end
		if has_alife_info("jup_und_zombie3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie3_death")
		end
		if has_alife_info("jup_und_zombie4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie4_death")
		end
		if has_alife_info("jup_und_zombie5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie5_death")
		end
		if has_alife_info("jup_und_zombie6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie6_death")
		end
		if has_alife_info("jup_und_zombie7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie7_death")
		end
		if has_alife_info("jup_und_zombie8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie8_death")
		end
		if has_alife_info("jup_und_zombie9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie9_death")
		end
		if has_alife_info("jup_und_zombie10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie10_death")
		end
		if has_alife_info("jup_und_zombie11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie11_death")
		end
		if has_alife_info("jup_und_zombie12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie12_death")
		end
		if has_alife_info("jup_und_zombie13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie13_death")
		end
		if has_alife_info("jup_und_zombie14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie14_death")
		end
		if has_alife_info("jup_und_zombie15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie15_death")
		end
		if has_alife_info("jup_und_zombie16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\zombie16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_zombie16_death")
		end
		if has_alife_info("jup_und_controller1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("controller_tubeman",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\controller1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_controller1_death")
		end
		if has_alife_info("jup_und_poltergeist1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\poltergeist1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_poltergeist1_death")
		end
		if has_alife_info("jup_und_poltergeist2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\poltergeist2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_poltergeist2_death")
		end
		if has_alife_info("jup_und_poltergeist3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\poltergeist3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_poltergeist3_death")
		end
		if has_alife_info("jup_und_poltergeist4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\poltergeist4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_poltergeist4_death")
		end
		if has_alife_info("jup_und_snork1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork1_death")
		end
		if has_alife_info("jup_und_snork2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork2_death")
		end
		if has_alife_info("jup_und_snork3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork3_death")
		end
		if has_alife_info("jup_und_snork4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork4_death")
		end
		if has_alife_info("jup_und_snork5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork5_death")
		end
		if has_alife_info("jup_und_snork6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork6_death")
		end
		if has_alife_info("jup_und_snork7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork7_death")
		end
		if has_alife_info("jup_und_snork8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork8_death")
		end
		if has_alife_info("jup_und_snork9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork9_death")
		end
		if has_alife_info("jup_und_snork10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork10_death")
		end
		if has_alife_info("jup_und_snork11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork11_death")
		end
		if has_alife_info("jup_und_snork12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork12_death")
		end
		if has_alife_info("jup_und_snork13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork13_death")
		end
		if has_alife_info("jup_und_snork14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork14_death")
		end
		if has_alife_info("jup_und_snork15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork15_death")
		end
		if has_alife_info("jup_und_snork16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork16_death")
		end
		if has_alife_info("jup_und_snork17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork17_death")
		end
		if has_alife_info("jup_und_snork18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork18_death")
		end
		if has_alife_info("jup_und_snork19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork19_death")
		end
		if has_alife_info("jup_und_snork20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork20_death")
		end
		if has_alife_info("jup_und_snork21_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork21.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork21_death")
		end
		if has_alife_info("jup_und_snork22_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork22.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork22_death")
		end
		if has_alife_info("jup_und_snork23_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork23.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork23_death")
		end
		if has_alife_info("jup_und_snork24_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork24.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork24_death")
		end
		if has_alife_info("jup_und_snork25_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork25.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork25_death")
		end
		if has_alife_info("jup_und_snork26_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork26.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork26_death")
		end
		if has_alife_info("jup_und_snork27_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\snork27.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_snork27_death")
		end
		if has_alife_info("jup_und_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_bloodsucker1_death")
		end
		if has_alife_info("jup_und_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jup_und\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jup_und_bloodsucker2_death")
		end
		if has_alife_info("jup_und_zombied1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("jup_und_zombied1",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("jup_und_zombied1_death")
		end
		if has_alife_info("jup_und_zombied2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("jup_und_zombied2",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("jup_und_zombied2_death")
		end
		if has_alife_info("jup_und_zombied3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("jup_und_zombied3",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("jup_und_zombied3_death")
		end
		if has_alife_info("jup_und_zombied4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("jup_und_zombied4",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("jup_und_zombied4_death")
		end
		if has_alife_info("jup_und_zombied5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("jup_und_zombied5",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("jup_und_zombied5_death")
		end
	end
	
	if lname == "atp_for_test22" then
		if has_alife_info("atp_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_bloodsucker1_death")
		end
		if has_alife_info("atp_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_bloodsucker2_death")
		end
		if has_alife_info("atp_boar1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\boar1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_boar1_death")
		end
		if has_alife_info("atp_boar2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\boar2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_boar2_death")
		end
		if has_alife_info("atp_boar3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\boar3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_boar3_death")
		end
		if has_alife_info("atp_boar4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\boar4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_boar4_death")
		end
		if has_alife_info("atp_boar5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\boar5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_boar5_death")
		end
		if has_alife_info("atp_boar6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\boar6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_boar6_death")
		end
		if has_alife_info("atp_boar7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\boar7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_boar7_death")
		end
		if has_alife_info("atp_boar8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\boar8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_boar8_death")
		end
		if has_alife_info("atp_boar9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\boar9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_boar9_death")
		end
		if has_alife_info("atp_boar10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\boar10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_boar10_death")
		end
		if has_alife_info("atp_dog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog1_death")
		end
		if has_alife_info("atp_dog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog2_death")
		end
		if has_alife_info("atp_dog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog3_death")
		end
		if has_alife_info("atp_dog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog4_death")
		end
		if has_alife_info("atp_dog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog5_death")
		end
		if has_alife_info("atp_dog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog6_death")
		end
		if has_alife_info("atp_dog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog7_death")
		end
		if has_alife_info("atp_dog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog8_death")
		end
		if has_alife_info("atp_dog9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog9_death")
		end
		if has_alife_info("atp_dog10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog10_death")
		end
		if has_alife_info("atp_dog11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog11_death")
		end
		if has_alife_info("atp_dog12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog12_death")
		end
		if has_alife_info("atp_dog13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog13_death")
		end
		if has_alife_info("atp_dog14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog14_death")
		end
		if has_alife_info("atp_dog15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\dog15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_dog15_death")
		end
		if has_alife_info("atp_tushkano1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\tushkano1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_tushkano1_death")
		end
		if has_alife_info("atp_tushkano2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\tushkano2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_tushkano2_death")
		end
		if has_alife_info("atp_tushkano3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\tushkano3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_tushkano3_death")
		end
		if has_alife_info("atp_tushkano4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\tushkano4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_tushkano4_death")
		end
		if has_alife_info("atp_tushkano5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\tushkano5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_tushkano5_death")
		end
		if has_alife_info("atp_tushkano6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\tushkano6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_tushkano6_death")
		end
		if has_alife_info("atp_tushkano7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\tushkano7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_tushkano7_death")
		end
		if has_alife_info("atp_tushkano8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\tushkano8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_tushkano8_death")
		end
		if has_alife_info("atp_tushkano9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\tushkano9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_tushkano9_death")
		end
		if has_alife_info("atp_tushkano10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\tushkano10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_tushkano10_death")
		end
		if has_alife_info("atp_tushkano11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\tushkano11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_tushkano11_death")
		end
		if has_alife_info("atp_tushkano12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\tushkano12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_tushkano12_death")
		end
		if has_alife_info("atp_tushkano13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\tushkano13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_tushkano13_death")
		end
		if has_alife_info("atp_tushkano14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\tushkano14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_tushkano14_death")
		end
		if has_alife_info("atp_flesh1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\flesh1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_flesh1_death")
		end
		if has_alife_info("atp_flesh2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\flesh2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_flesh2_death")
		end
		if has_alife_info("atp_flesh3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\flesh3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_flesh3_death")
		end
		if has_alife_info("atp_flesh4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\flesh4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_flesh4_death")
		end
		if has_alife_info("atp_flesh5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\flesh5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_flesh5_death")
		end
		if has_alife_info("atp_flesh6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\flesh6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_flesh6_death")
		end
		if has_alife_info("atp_gigant1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\gigant1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_gigant1_death")
		end
		if has_alife_info("atp_gigant2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\gigant2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_gigant2_death")
		end
		if has_alife_info("atp_gigant3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\gigant3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_gigant3_death")
		end
		if has_alife_info("atp_pseudodog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\pseudodog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_pseudodog1_death")
		end
		if has_alife_info("atp_pseudodog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\pseudodog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_pseudodog2_death")
		end
		if has_alife_info("atp_pseudodog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\pseudodog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_pseudodog3_death")
		end
		if has_alife_info("atp_pseudodog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\pseudodog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_pseudodog4_death")
		end
		if has_alife_info("atp_snork1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\snork1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_snork1_death")
		end
		if has_alife_info("atp_snork2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\snork2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_snork2_death")
		end
		if has_alife_info("atp_snork3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\atp\\snork3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("atp_snork3_death")
		end
	end
	
	if lname == "av_peshera" then
		if has_alife_info("av_peshera_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_bloodsucker1_death")
		end
		if has_alife_info("av_peshera_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_bloodsucker2_death")
		end
		if has_alife_info("av_peshera_bloodsucker3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\bloodsucker3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_bloodsucker3_death")
		end
		if has_alife_info("av_peshera_bloodsucker4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\bloodsucker4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_bloodsucker4_death")
		end
		if has_alife_info("av_peshera_bloodsucker5_death") and has_alife_info("krovosos_spawn2") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\bloodsucker5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_bloodsucker5_death")
		end
		if has_alife_info("av_peshera_bloodsucker6_death") and has_alife_info("bring_food_klyk") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\bloodsucker6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_bloodsucker6_death")
		end
		if has_alife_info("av_peshera_bloodsucker7_death") and has_alife_info("bring_food_klyk") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\bloodsucker7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_bloodsucker7_death")
		end
		if has_alife_info("av_peshera_gigant1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\gigant1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_gigant1_death")
		end
		if has_alife_info("av_peshera_gigant2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\gigant2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_gigant2_death")
		end
		if has_alife_info("av_peshera_gigant3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\gigant3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_gigant3_death")
		end
		if has_alife_info("av_peshera_poltergeist1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\poltergeist1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_poltergeist1_death")
		end
		if has_alife_info("av_peshera_poltergeist2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\poltergeist2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_poltergeist2_death")
		end
		if has_alife_info("av_peshera_poltergeist3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\poltergeist3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_poltergeist3_death")
		end
		if has_alife_info("av_peshera_poltergeist4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\poltergeist4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_poltergeist4_death")
		end
		if has_alife_info("av_peshera_poltergeist5_death") and has_alife_info("bring_food_klyk") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\poltergeist5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_poltergeist5_death")
		end
		if has_alife_info("av_peshera_poltergeist6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\poltergeist6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_poltergeist6_death")
		end
		if has_alife_info("av_peshera_poltergeist7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\poltergeist7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_poltergeist7_death")
		end
		if has_alife_info("av_peshera_poltergeist8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\poltergeist8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_poltergeist8_death")
		end
		if has_alife_info("av_peshera_poltergeist9_death") and has_alife_info("bring_food_klyk") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\poltergeist9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_poltergeist9_death")
		end
		if has_alife_info("av_peshera_pseudodog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\pseudodog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_pseudodog1_death")
		end
		if has_alife_info("av_peshera_pseudodog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\pseudodog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_pseudodog2_death")
		end
		if has_alife_info("av_peshera_pseudodog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\pseudodog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_pseudodog3_death")
		end
		if has_alife_info("av_peshera_pseudodog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\pseudodog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_pseudodog4_death")
		end
		if has_alife_info("av_peshera_snork1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\snork1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_snork1_death")
		end
		if has_alife_info("av_peshera_snork2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\snork2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_snork2_death")
		end
		if has_alife_info("av_peshera_snork3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\snork3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_snork3_death")
		end
		if has_alife_info("av_peshera_snork4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\snork4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_snork4_death")
		end
		if has_alife_info("av_peshera_snork5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\snork5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_snork5_death")
		end
		if has_alife_info("av_peshera_snork6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\snork6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_snork6_death")
		end
		if has_alife_info("av_peshera_snork7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\snork7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_snork7_death")
		end
		if has_alife_info("av_peshera_snork8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\snork8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_snork8_death")
		end
		if has_alife_info("av_peshera_snork9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\snork9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_snork9_death")
		end
		if has_alife_info("av_peshera_snork10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\snork10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_snork10_death")
		end
		if has_alife_info("av_peshera_snork11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\snork11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_snork11_death")
		end
		if has_alife_info("av_peshera_snork12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\snork12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_snork12_death")
		end
		if has_alife_info("av_peshera_snork13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\snork13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_snork13_death")
		end
		if has_alife_info("av_peshera_snork14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\av_peshera\\snork14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("av_peshera_snork14_death")
		end
	end
	
	if lname == "cs_agroprom_underground" then
		if has_alife_info("kat_controller1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("controller_tubeman",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\controller1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_controller1_death")
		end
		if has_alife_info("kat_controller2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("controller_tubeman",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\controller2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_controller2_death")
		end
		if has_alife_info("kat_zombied1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("kat_zombied1",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("kat_zombied1_death")
		end
		if has_alife_info("kat_zombied2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("kat_zombied2",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("kat_zombied2_death")
		end
		if has_alife_info("kat_zombied3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("kat_zombied3",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("kat_zombied3_death")
		end
		if has_alife_info("kat_zombied4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("kat_zombied4",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("kat_zombied4_death")
		end
		if has_alife_info("kat_zombied5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("kat_zombied5",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("kat_zombied5_death")
		end
		if has_alife_info("kat_zombied6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("kat_zombied6",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("kat_zombied6_death")
		end
		if has_alife_info("kat_zombied7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("kat_zombied7",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("kat_zombied7_death")
		end
		if has_alife_info("kat_zombied8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("kat_zombied8",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("kat_zombied8_death")
		end
		if has_alife_info("kat_zombie1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\zombie1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_zombie1_death")
		end
		if has_alife_info("kat_zombie2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\zombie2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_zombie2_death")
		end
		if has_alife_info("kat_zombie3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\zombie3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_zombie3_death")
		end
		if has_alife_info("kat_zombie4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\zombie4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_zombie4_death")
		end
		if has_alife_info("kat_zombie5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\zombie5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_zombie5_death")
		end
		if has_alife_info("kat_zombie6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\zombie6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_zombie6_death")
		end
		if has_alife_info("kat_zombie7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\zombie7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_zombie7_death")
		end
		if has_alife_info("kat_zombie8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\zombie8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_zombie8_death")
		end
		if has_alife_info("kat_zombie9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\zombie9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_zombie9_death")
		end
		if has_alife_info("kat_zombie10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\zombie10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_zombie10_death")
		end
		if has_alife_info("kat_zombie11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\zombie11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_zombie11_death")
		end
		if has_alife_info("kat_zombie12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\zombie12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_zombie12_death")
		end
		if has_alife_info("kat_zombie13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\zombie13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_zombie13_death")
		end
		if has_alife_info("kat_snork1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork1_death")
		end
		if has_alife_info("kat_snork2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork2_death")
		end
		if has_alife_info("kat_snork3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork3_death")
		end
		if has_alife_info("kat_snork4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork4_death")
		end
		if has_alife_info("kat_snork5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork5_death")
		end
		if has_alife_info("kat_snork6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork6_death")
		end
		if has_alife_info("kat_snork7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork7_death")
		end
		if has_alife_info("kat_snork8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork8_death")
		end
		if has_alife_info("kat_snork9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork9_death")
		end
		if has_alife_info("kat_snork10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork10_death")
		end
		if has_alife_info("kat_snork11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork11_death")
		end
		if has_alife_info("kat_snork12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork12_death")
		end
		if has_alife_info("kat_snork13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork13_death")
		end
		if has_alife_info("kat_snork14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork14_death")
		end
		if has_alife_info("kat_snork15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork15_death")
		end
		if has_alife_info("kat_snork16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork16_death")
		end
		if has_alife_info("kat_snork17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork17_death")
		end
		if has_alife_info("kat_snork18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork18_death")
		end
		if has_alife_info("kat_snork19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork19_death")
		end
		if has_alife_info("kat_snork20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork20_death")
		end
		if has_alife_info("kat_snork21_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork21.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork21_death")
		end
		if has_alife_info("kat_snork22_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork22.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork22_death")
		end
		if has_alife_info("kat_snork23_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork23.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork23_death")
		end
		if has_alife_info("kat_snork24_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork24.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork24_death")
		end
		if has_alife_info("kat_snork25_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork25.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork25_death")
		end
		if has_alife_info("kat_snork26_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork26.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork26_death")
		end
		if has_alife_info("kat_snork27_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork27.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork27_death")
		end
		if has_alife_info("kat_snork28_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork28.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork28_death")
		end
		if has_alife_info("kat_snork29_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork29.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork29_death")
		end
		if has_alife_info("kat_snork30_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork30.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork30_death")
		end
		if has_alife_info("kat_snork31_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork31.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork31_death")
		end
		if has_alife_info("kat_snork32_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork32.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork32_death")
		end
		if has_alife_info("kat_snork33_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork33.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork33_death")
		end
		if has_alife_info("kat_snork34_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork34.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork34_death")
		end
		if has_alife_info("kat_snork35_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork35.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork35_death")
		end
		if has_alife_info("kat_snork36_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork36.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork36_death")
		end
		if has_alife_info("kat_snork37_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork37.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork37_death")
		end
		if has_alife_info("kat_snork38_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork38.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork38_death")
		end
		if has_alife_info("kat_snork39_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork39.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork39_death")
		end
		if has_alife_info("kat_snork40_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork40.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork40_death")
		end
		if has_alife_info("kat_snork41_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork41.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork41_death")
		end
		if has_alife_info("kat_snork42_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork42.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork42_death")
		end
		if has_alife_info("kat_snork43_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork43.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork43_death")
		end
		if has_alife_info("kat_snork44_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork44.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork44_death")
		end
		if has_alife_info("kat_snork45_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\kat\\snork45.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("kat_snork45_death")
		end
	end
	
	if lname == "dead_city" then
		if has_alife_info("dead_city_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_bloodsucker1_death")
		end
		if has_alife_info("dead_city_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_bloodsucker2_death")
		end
		if has_alife_info("dead_city_boar1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\boar1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_boar1_death")
		end
		if has_alife_info("dead_city_boar2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\boar2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_boar2_death")
		end
		if has_alife_info("dead_city_boar3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\boar3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_boar3_death")
		end
		if has_alife_info("dead_city_boar4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\boar4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_boar4_death")
		end
		if has_alife_info("dead_city_boar5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\boar5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_boar5_death")
		end
		if has_alife_info("dead_city_boar6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\boar6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_boar6_death")
		end
		if has_alife_info("dead_city_flesh1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\flesh1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_flesh1_death")
		end
		if has_alife_info("dead_city_flesh2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\flesh2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_flesh2_death")
		end
		if has_alife_info("dead_city_flesh3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\flesh3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_flesh3_death")
		end
		if has_alife_info("dead_city_flesh4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\flesh4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_flesh4_death")
		end
		if has_alife_info("dead_city_flesh5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\flesh5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_flesh5_death")
		end
		if has_alife_info("dead_city_flesh6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\flesh6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_flesh6_death")
		end
		if has_alife_info("dead_city_flesh7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\flesh7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_flesh7_death")
		end
		if has_alife_info("dead_city_flesh8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\flesh8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_flesh8_death")
		end
		if has_alife_info("dead_city_flesh9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\flesh9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_flesh9_death")
		end
		if has_alife_info("dead_city_flesh10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\flesh10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_flesh10_death")
		end
		if has_alife_info("dead_city_dog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\dog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_dog1_death")
		end
		if has_alife_info("dead_city_dog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\dog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_dog2_death")
		end
		if has_alife_info("dead_city_dog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\dog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_dog3_death")
		end
		if has_alife_info("dead_city_dog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\dog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_dog4_death")
		end
		if has_alife_info("dead_city_dog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\dog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_dog5_death")
		end
		if has_alife_info("dead_city_dog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\dog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_dog6_death")
		end
		if has_alife_info("dead_city_dog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\dog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_dog7_death")
		end
		if has_alife_info("dead_city_dog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\dog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_dog8_death")
		end
		if has_alife_info("dead_city_dog9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\dog9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_dog9_death")
		end
		if has_alife_info("dead_city_dog10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\dog10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_dog10_death")
		end
		if has_alife_info("dead_city_dog11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\dog11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_dog11_death")
		end
		if has_alife_info("dead_city_dog12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\dog12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_dog12_death")
		end
		if has_alife_info("dead_city_dog13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\dog13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_dog13_death")
		end
		if has_alife_info("dead_city_cat1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\cat1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_cat1_death")
		end
		if has_alife_info("dead_city_cat2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\cat2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_cat2_death")
		end
		if has_alife_info("dead_city_cat3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\cat3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_cat3_death")
		end
		if has_alife_info("dead_city_cat4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\cat4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_cat4_death")
		end
		if has_alife_info("dead_city_cat5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\cat5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_cat5_death")
		end
		if has_alife_info("dead_city_cat6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\cat6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_cat6_death")
		end
		if has_alife_info("dead_city_cat7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\cat7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_cat7_death")
		end
		if has_alife_info("dead_city_cat8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\cat8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_cat8_death")
		end
		if has_alife_info("dead_city_cat9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\cat9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_cat9_death")
		end
		if has_alife_info("dead_city_cat10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\cat10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_cat10_death")
		end
		if has_alife_info("dead_city_chimera1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("chimera_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\chimera1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_chimera1_death")
		end
		if has_alife_info("dead_city_chimera2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("chimera_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\chimera2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_chimera2_death")
		end
		if has_alife_info("dead_city_chimera3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("chimera_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\chimera3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_chimera3_death")
		end
		if has_alife_info("dead_city_controller1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("controller_tubeman",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\controller1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_controller1_death")
		end
		if has_alife_info("dead_city_pseudodog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\pseudodog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_pseudodog1_death")
		end
		if has_alife_info("dead_city_pseudodog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\pseudodog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_pseudodog2_death")
		end
		if has_alife_info("dead_city_pseudodog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\pseudodog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_pseudodog3_death")
		end
		if has_alife_info("dead_city_zombie1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\zombie1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_zombie1_death")
		end
		if has_alife_info("dead_city_zombie2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\zombie2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_zombie2_death")
		end
		if has_alife_info("dead_city_zombie3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\zombie3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_zombie3_death")
		end
		if has_alife_info("dead_city_zombie4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\zombie4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_zombie4_death")
		end
		if has_alife_info("dead_city_zombie5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\zombie5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_zombie5_death")
		end
		if has_alife_info("dead_city_zombie6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\zombie6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_zombie6_death")
		end
		if has_alife_info("dead_city_nozombie1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie1_death")
		end
		if has_alife_info("dead_city_nozombie2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie2_death")
		end
		if has_alife_info("dead_city_nozombie3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie3_death")
		end
		if has_alife_info("dead_city_nozombie4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie4_death")
		end
		if has_alife_info("dead_city_nozombie5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie5_death")
		end
		if has_alife_info("dead_city_nozombie6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie6_death")
		end
		if has_alife_info("dead_city_nozombie7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie7_death")
		end
		if has_alife_info("dead_city_nozombie8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie8_death")
		end
		if has_alife_info("dead_city_nozombie9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie9_death")
		end
		if has_alife_info("dead_city_nozombie10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie10_death")
		end
		if has_alife_info("dead_city_nozombie11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie11_death")
		end
		if has_alife_info("dead_city_nozombie12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie12_death")
		end
		if has_alife_info("dead_city_nozombie13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie13_death")
		end
		if has_alife_info("dead_city_nozombie14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie14_death")
		end
		if has_alife_info("dead_city_nozombie15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie15_death")
		end
		if has_alife_info("dead_city_nozombie16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie16_death")
		end
		if has_alife_info("dead_city_nozombie17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie17_death")
		end
		if has_alife_info("dead_city_nozombie18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie18_death")
		end
		if has_alife_info("dead_city_nozombie19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie19_death")
		end
		if has_alife_info("dead_city_nozombie20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie20_death")
		end
		if has_alife_info("dead_city_nozombie21_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie21.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie21_death")
		end
		if has_alife_info("dead_city_nozombie22_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie22.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie22_death")
		end
		if has_alife_info("dead_city_nozombie23_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie23.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie23_death")
		end
		if has_alife_info("dead_city_nozombie24_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie24.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie24_death")
		end
		if has_alife_info("dead_city_nozombie25_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie25.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie25_death")
		end
		if has_alife_info("dead_city_nozombie26_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie26.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie26_death")
		end
		if has_alife_info("dead_city_nozombie27_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie27.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie27_death")
		end
		if has_alife_info("dead_city_nozombie28_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie28.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie28_death")
		end
		if has_alife_info("dead_city_nozombie29_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie29.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie29_death")
		end
		if has_alife_info("dead_city_nozombie30_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie30.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie30_death")
		end
		if has_alife_info("dead_city_nozombie31_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie31.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie31_death")
		end
		if has_alife_info("dead_city_nozombie32_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie32.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie32_death")
		end
		if has_alife_info("dead_city_nozombie33_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie33.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie33_death")
		end
		if has_alife_info("dead_city_nozombie34_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie34.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie34_death")
		end
		if has_alife_info("dead_city_nozombie35_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie35.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie35_death")
		end
		if has_alife_info("dead_city_nozombie36_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie36.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie36_death")
		end
		if has_alife_info("dead_city_nozombie37_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie37.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie37_death")
		end
		if has_alife_info("dead_city_nozombie38_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie38.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie38_death")
		end
		if has_alife_info("dead_city_nozombie39_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie39.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie39_death")
		end
		if has_alife_info("dead_city_nozombie40_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie40.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie40_death")
		end
		if has_alife_info("dead_city_nozombie41_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie41.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie41_death")
		end
		if has_alife_info("dead_city_nozombie42_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie42.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie42_death")
		end
		if has_alife_info("dead_city_nozombie43_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie43.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie43_death")
		end
		if has_alife_info("dead_city_nozombie44_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie44.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie44_death")
		end
		if has_alife_info("dead_city_nozombie45_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("nozombie_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\dead_city\\nozombie45.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("dead_city_nozombie45_death")
		end
	end
	
	if lname == "generators" then
		if has_alife_info("generators_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_bloodsucker1_death")
		end
		if has_alife_info("generators_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_bloodsucker2_death")
		end
		if has_alife_info("generators_boar1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\boar1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_boar1_death")
		end
		if has_alife_info("generators_boar2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\boar2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_boar2_death")
		end
		if has_alife_info("generators_boar3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\boar3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_boar3_death")
		end
		if has_alife_info("generators_boar4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\boar4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_boar4_death")
		end
		if has_alife_info("generators_boar5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\boar5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_boar5_death")
		end
		if has_alife_info("generators_dog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\dog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_dog1_death")
		end
		if has_alife_info("generators_dog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\dog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_dog2_death")
		end
		if has_alife_info("generators_dog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\dog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_dog3_death")
		end
		if has_alife_info("generators_dog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\dog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_dog4_death")
		end
		if has_alife_info("generators_dog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\dog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_dog5_death")
		end
		if has_alife_info("generators_dog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\dog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_dog6_death")
		end
		if has_alife_info("generators_dog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\dog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_dog7_death")
		end
		if has_alife_info("generators_dog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\dog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_dog8_death")
		end
		if has_alife_info("generators_dog9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\dog9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_dog9_death")
		end
		if has_alife_info("generators_dog10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\dog10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_dog10_death")
		end
		if has_alife_info("generators_dog11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\dog11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_dog11_death")
		end
		if has_alife_info("generators_dog12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\dog12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_dog12_death")
		end
		if has_alife_info("generators_gigant1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\gigant1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_gigant1_death")
		end
		if has_alife_info("generators_poltergeist1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\poltergeist1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_poltergeist1_death")
		end
		if has_alife_info("generators_pseudodog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\pseudodog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_pseudodog1_death")
		end
		if has_alife_info("generators_pseudodog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\pseudodog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_pseudodog2_death")
		end
		if has_alife_info("generators_snork1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\snork1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_snork1_death")
		end
		if has_alife_info("generators_snork2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\snork2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_snork2_death")
		end
		if has_alife_info("generators_snork3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\snork3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_snork3_death")
		end
		if has_alife_info("generators_snork4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\snork4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_snork4_death")
		end
		if has_alife_info("generators_snork5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\snork5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_snork5_death")
		end
		if has_alife_info("generators_snork6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\snork6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_snork6_death")
		end
		if has_alife_info("generators_snork7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\snork7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_snork7_death")
		end
		if has_alife_info("generators_snork8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\snork8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_snork8_death")
		end
		if has_alife_info("generators_snork9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\snork9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_snork9_death")
		end
		if has_alife_info("generators_snork10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\generators\\snork10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("generators_snork10_death")
		end
	end
	
	if lname == "hospital" then
		if has_alife_info("hospital_snork1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\snork1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_snork1_death")
		end
		if has_alife_info("hospital_snork2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\snork2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_snork2_death")
		end
		if has_alife_info("hospital_snork3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\snork3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_snork3_death")
		end
		if has_alife_info("hospital_snork4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\snork4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_snork4_death")
		end
		if has_alife_info("hospital_snork5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\snork5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_snork5_death")
		end
		if has_alife_info("hospital_snork6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\snork6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_snork6_death")
		end
		if has_alife_info("hospital_snork7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\snork7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_snork7_death")
		end
		if has_alife_info("hospital_snork8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\snork8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_snork8_death")
		end
		if has_alife_info("hospital_snork9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\snork9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_snork9_death")
		end
		if has_alife_info("hospital_snork10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\snork10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_snork10_death")
		end
		if has_alife_info("hospital_burer1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\burer1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_burer1_death")
		end
		if has_alife_info("hospital_burer2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\burer2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_burer2_death")
		end
		if has_alife_info("hospital_burer3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\burer3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_burer3_death")
		end
		if has_alife_info("hospital_burer4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\burer4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_burer4_death")
		end
		if has_alife_info("hospital_burer5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\burer5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_burer5_death")
		end
		if has_alife_info("hospital_burer6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\burer6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_burer6_death")
		end
		if has_alife_info("hospital_burer7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\hospital\\burer7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("hospital_burer7_death")
		end
	end
	
	if lname == "jupiter" then
		if has_alife_info("jupiter_burer1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer1_death")
		end
		if has_alife_info("jupiter_burer2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer2_death")
		end
		if has_alife_info("jupiter_burer3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer3_death")
		end
		if has_alife_info("jupiter_burer4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer4_death")
		end
		if has_alife_info("jupiter_burer5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer5_death")
		end
		if has_alife_info("jupiter_burer6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer6_death")
		end
		if has_alife_info("jupiter_burer7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer7_death")
		end
		if has_alife_info("jupiter_burer8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer8_death")
		end
		if has_alife_info("jupiter_burer9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer9_death")
		end
		if has_alife_info("jupiter_burer10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer10_death")
		end
		if has_alife_info("jupiter_burer11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer11_death")
		end
		if has_alife_info("jupiter_burer12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer12_death")
		end
		if has_alife_info("jupiter_burer13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer13_death")
		end
		if has_alife_info("jupiter_burer14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer14_death")
		end
		if has_alife_info("jupiter_burer15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer15_death")
		end
		if has_alife_info("jupiter_burer16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer16_death")
		end
		if has_alife_info("jupiter_burer17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\burer17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_burer17_death")
		end
		if has_alife_info("jupiter_tushkano1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano1_death")
		end
		if has_alife_info("jupiter_tushkano2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano2_death")
		end
		if has_alife_info("jupiter_tushkano3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano3_death")
		end
		if has_alife_info("jupiter_tushkano4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano4_death")
		end
		if has_alife_info("jupiter_tushkano5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano5_death")
		end
		if has_alife_info("jupiter_tushkano6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano6_death")
		end
		if has_alife_info("jupiter_tushkano7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano7_death")
		end
		if has_alife_info("jupiter_tushkano8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano8_death")
		end
		if has_alife_info("jupiter_tushkano9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano9_death")
		end
		if has_alife_info("jupiter_tushkano10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano10_death")
		end
		if has_alife_info("jupiter_tushkano11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano11_death")
		end
		if has_alife_info("jupiter_tushkano12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano12_death")
		end
		if has_alife_info("jupiter_tushkano13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano13_death")
		end
		if has_alife_info("jupiter_tushkano14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano14_death")
		end
		if has_alife_info("jupiter_tushkano15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano15_death")
		end
		if has_alife_info("jupiter_tushkano16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano16_death")
		end
		if has_alife_info("jupiter_tushkano17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\tushkano17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_tushkano17_death")
		end
		if has_alife_info("jupiter_dog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog1_death")
		end
		if has_alife_info("jupiter_dog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog2_death")
		end
		if has_alife_info("jupiter_dog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog3_death")
		end
		if has_alife_info("jupiter_dog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog4_death")
		end
		if has_alife_info("jupiter_dog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog5_death")
		end
		if has_alife_info("jupiter_dog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog6_death")
		end
		if has_alife_info("jupiter_dog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog7_death")
		end
		if has_alife_info("jupiter_dog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog8_death")
		end
		if has_alife_info("jupiter_dog9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog9_death")
		end
		if has_alife_info("jupiter_dog10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog10_death")
		end
		if has_alife_info("jupiter_dog11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog11_death")
		end
		if has_alife_info("jupiter_dog12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog12_death")
		end
		if has_alife_info("jupiter_dog13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog13_death")
		end
		if has_alife_info("jupiter_dog14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog14_death")
		end
		if has_alife_info("jupiter_dog15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog15_death")
		end
		if has_alife_info("jupiter_dog16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog16_death")
		end
		if has_alife_info("jupiter_dog17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog17_death")
		end
		if has_alife_info("jupiter_dog18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog18_death")
		end
		if has_alife_info("jupiter_dog19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog19_death")
		end
		if has_alife_info("jupiter_dog20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog20_death")
		end
		if has_alife_info("jupiter_dog21_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog21.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog21_death")
		end
		if has_alife_info("jupiter_dog22_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog22.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog22_death")
		end
		if has_alife_info("jupiter_dog23_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog23.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog23_death")
		end
		if has_alife_info("jupiter_dog24_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog24.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog24_death")
		end
		if has_alife_info("jupiter_dog25_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog25.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog25_death")
		end
		if has_alife_info("jupiter_dog26_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog26.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog26_death")
		end
		if has_alife_info("jupiter_dog27_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog27.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog27_death")
		end
		if has_alife_info("jupiter_dog28_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog28.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog28_death")
		end
		if has_alife_info("jupiter_dog29_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog29.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog29_death")
		end
		if has_alife_info("jupiter_dog30_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog30.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog30_death")
		end
		if has_alife_info("jupiter_dog31_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog31.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog31_death")
		end
		if has_alife_info("jupiter_dog32_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog32.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog32_death")
		end
		if has_alife_info("jupiter_dog33_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog33.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog33_death")
		end
		if has_alife_info("jupiter_dog34_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog34.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog34_death")
		end
		if has_alife_info("jupiter_dog35_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog35.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog35_death")
		end
		if has_alife_info("jupiter_dog36_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog36.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog36_death")
		end
		if has_alife_info("jupiter_dog37_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog37.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog37_death")
		end
		if has_alife_info("jupiter_dog38_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog38.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog38_death")
		end
		if has_alife_info("jupiter_dog39_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog39.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog39_death")
		end
		if has_alife_info("jupiter_dog40_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog40.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog40_death")
		end
		if has_alife_info("jupiter_dog41_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog41.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog41_death")
		end
		if has_alife_info("jupiter_dog42_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog42.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog42_death")
		end
		if has_alife_info("jupiter_dog43_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog43.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog43_death")
		end
		if has_alife_info("jupiter_dog44_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog44.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog44_death")
		end
		if has_alife_info("jupiter_dog45_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog45.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog45_death")
		end
		if has_alife_info("jupiter_dog46_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog46.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog46_death")
		end
		if has_alife_info("jupiter_dog47_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog47.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog47_death")
		end
		if has_alife_info("jupiter_dog48_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog48.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog48_death")
		end
		if has_alife_info("jupiter_dog49_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog49.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog49_death")
		end
		if has_alife_info("jupiter_dog50_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog50.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog50_death")
		end
		if has_alife_info("jupiter_dog51_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog51.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog51_death")
		end
		if has_alife_info("jupiter_dog52_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog52.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog52_death")
		end
		if has_alife_info("jupiter_dog53_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog53.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog53_death")
		end
		if has_alife_info("jupiter_dog54_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog54.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog54_death")
		end
		if has_alife_info("jupiter_dog55_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog55.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog55_death")
		end
		if has_alife_info("jupiter_dog56_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog56.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog56_death")
		end
		if has_alife_info("jupiter_dog57_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog57.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog57_death")
		end
		if has_alife_info("jupiter_dog58_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog58.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog58_death")
		end
		if has_alife_info("jupiter_dog59_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog59.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog59_death")
		end
		if has_alife_info("jupiter_dog60_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog60.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog60_death")
		end
		if has_alife_info("jupiter_dog61_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog61.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog61_death")
		end
		if has_alife_info("jupiter_dog62_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog62.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog62_death")
		end
		if has_alife_info("jupiter_dog63_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog63.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog63_death")
		end
		if has_alife_info("jupiter_dog64_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog64.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog64_death")
		end
		if has_alife_info("jupiter_dog65_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog65.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog65_death")
		end
		if has_alife_info("jupiter_dog66_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog66.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog66_death")
		end
		if has_alife_info("jupiter_dog67_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog67.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog67_death")
		end
		if has_alife_info("jupiter_dog68_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\dog68.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_dog68_death")
		end
		if has_alife_info("jupiter_pseudodog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\pseudodog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_pseudodog1_death")
		end
		if has_alife_info("jupiter_pseudodog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\pseudodog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_pseudodog2_death")
		end
		if has_alife_info("jupiter_pseudodog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\pseudodog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_pseudodog3_death")
		end
		if has_alife_info("jupiter_pseudodog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\pseudodog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_pseudodog4_death")
		end
		if has_alife_info("jupiter_pseudodog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\pseudodog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_pseudodog5_death")
		end
		if has_alife_info("jupiter_pseudodog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\pseudodog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_pseudodog6_death")
		end
		if has_alife_info("jupiter_pseudodog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\pseudodog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_pseudodog7_death")
		end
		if has_alife_info("jupiter_pseudodog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\pseudodog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_pseudodog8_death")
		end
		if has_alife_info("jupiter_pseudodog9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\pseudodog9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_pseudodog9_death")
		end
		if has_alife_info("jupiter_pseudodog10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\pseudodog10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_pseudodog10_death")
		end
		if has_alife_info("jupiter_pseudodog11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\pseudodog11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_pseudodog11_death")
		end
		if has_alife_info("jupiter_pseudodog12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\pseudodog12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_pseudodog12_death")
		end
		if has_alife_info("jupiter_pseudodog13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\pseudodog13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_pseudodog13_death")
		end
		if has_alife_info("jupiter_zombie1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie1_death")
		end
		if has_alife_info("jupiter_zombie2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie2_death")
		end
		if has_alife_info("jupiter_zombie3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie3_death")
		end
		if has_alife_info("jupiter_zombie4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie4_death")
		end
		if has_alife_info("jupiter_zombie5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie5_death")
		end
		if has_alife_info("jupiter_zombie6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie6_death")
		end
		if has_alife_info("jupiter_zombie7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie7_death")
		end
		if has_alife_info("jupiter_zombie8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie8_death")
		end
		if has_alife_info("jupiter_zombie9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie9_death")
		end
		if has_alife_info("jupiter_zombie10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie10_death")
		end
		if has_alife_info("jupiter_zombie11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie11_death")
		end
		if has_alife_info("jupiter_zombie12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie12_death")
		end
		if has_alife_info("jupiter_zombie13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie13_death")
		end
		if has_alife_info("jupiter_zombie14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie14_death")
		end
		if has_alife_info("jupiter_zombie15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie15_death")
		end
		if has_alife_info("jupiter_zombie16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\zombie16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_zombie16_death")
		end
		if has_alife_info("jupiter_flesh1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh1_death")
		end
		if has_alife_info("jupiter_flesh2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh2_death")
		end
		if has_alife_info("jupiter_flesh3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh3_death")
		end
		if has_alife_info("jupiter_flesh4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh4_death")
		end
		if has_alife_info("jupiter_flesh5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh5_death")
		end
		if has_alife_info("jupiter_flesh6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh6_death")
		end
		if has_alife_info("jupiter_flesh7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh7_death")
		end
		if has_alife_info("jupiter_flesh8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh8_death")
		end
		if has_alife_info("jupiter_flesh9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh9_death")
		end
		if has_alife_info("jupiter_flesh10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh10_death")
		end
		if has_alife_info("jupiter_flesh11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh11_death")
		end
		if has_alife_info("jupiter_flesh12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh12_death")
		end
		if has_alife_info("jupiter_flesh13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh13_death")
		end
		if has_alife_info("jupiter_flesh14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh14_death")
		end
		if has_alife_info("jupiter_flesh15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh15_death")
		end
		if has_alife_info("jupiter_flesh16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh16_death")
		end
		if has_alife_info("jupiter_flesh17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh17_death")
		end
		if has_alife_info("jupiter_flesh18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh18_death")
		end
		if has_alife_info("jupiter_flesh19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh19_death")
		end
		if has_alife_info("jupiter_flesh20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh20_death")
		end
		if has_alife_info("jupiter_flesh21_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh21.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh21_death")
		end
		if has_alife_info("jupiter_flesh22_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh22.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh22_death")
		end
		if has_alife_info("jupiter_flesh23_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\flesh23.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_flesh23_death")
		end
		if has_alife_info("jupiter_boar1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\boar1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_boar1_death")
		end
		if has_alife_info("jupiter_boar2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\boar2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_boar2_death")
		end
		if has_alife_info("jupiter_boar3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\boar3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_boar3_death")
		end
		if has_alife_info("jupiter_boar4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\boar4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_boar4_death")
		end
		if has_alife_info("jupiter_boar5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\boar5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_boar5_death")
		end
		if has_alife_info("jupiter_boar6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\boar6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_boar6_death")
		end
		if has_alife_info("jupiter_boar7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\boar7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_boar7_death")
		end
		if has_alife_info("jupiter_boar8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\boar8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_boar8_death")
		end
		if has_alife_info("jupiter_boar9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\boar9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_boar9_death")
		end
		if has_alife_info("jupiter_boar10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\boar10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_boar10_death")
		end
		if has_alife_info("jupiter_boar11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\boar11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_boar11_death")
		end
		if has_alife_info("jupiter_boar12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\boar12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_boar12_death")
		end
		if has_alife_info("jupiter_boar13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\boar13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_boar13_death")
		end
		if has_alife_info("jupiter_boar14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\boar14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_boar14_death")
		end
		if has_alife_info("jupiter_controller1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("controller_tubeman",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\controller1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_controller1_death")
		end
		if has_alife_info("jupiter_controller2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("controller_tubeman",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\controller2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_controller2_death")
		end
		if has_alife_info("jupiter_fracture1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("fracture_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\fracture1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_fracture1_death")
		end
		if has_alife_info("jupiter_fracture2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("fracture_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\fracture2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_fracture2_death")
		end
		if has_alife_info("jupiter_fracture3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("fracture_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\fracture3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_fracture3_death")
		end
		if has_alife_info("jupiter_fracture4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("fracture_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\fracture4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_fracture4_death")
		end
		if has_alife_info("jupiter_fracture5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("fracture_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\fracture5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_fracture5_death")
		end
		if has_alife_info("jupiter_fracture6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("fracture_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\fracture6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_fracture6_death")
		end
		if has_alife_info("jupiter_gigant1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\gigant1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_gigant1_death")
		end
		if has_alife_info("jupiter_gigant2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\gigant2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_gigant2_death")
		end
		if has_alife_info("jupiter_snork1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork1_death")
		end
		if has_alife_info("jupiter_snork2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork2_death")
		end
		if has_alife_info("jupiter_snork3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork3_death")
		end
		if has_alife_info("jupiter_snork4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork4_death")
		end
		if has_alife_info("jupiter_snork5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork5_death")
		end
		if has_alife_info("jupiter_snork6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork6_death")
		end
		if has_alife_info("jupiter_snork7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork7_death")
		end
		if has_alife_info("jupiter_snork8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork8_death")
		end
		if has_alife_info("jupiter_snork9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork9_death")
		end
		if has_alife_info("jupiter_snork10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork10_death")
		end
		if has_alife_info("jupiter_snork11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork11_death")
		end
		if has_alife_info("jupiter_snork12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork12_death")
		end
		if has_alife_info("jupiter_snork13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork13_death")
		end
		if has_alife_info("jupiter_snork14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork14_death")
		end
		if has_alife_info("jupiter_snork15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork15_death")
		end
		if has_alife_info("jupiter_snork16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork16_death")
		end
		if has_alife_info("jupiter_snork17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork17_death")
		end
		if has_alife_info("jupiter_snork18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\snork18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_snork18_death")
		end
		if has_alife_info("jupiter_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_bloodsucker1_death")
		end
		if has_alife_info("jupiter_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_bloodsucker2_death")
		end
		if has_alife_info("jupiter_bloodsucker3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\bloodsucker3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_bloodsucker3_death")
		end
		if has_alife_info("jupiter_bloodsucker4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\bloodsucker4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_bloodsucker4_death")
		end
		if has_alife_info("jupiter_bloodsucker5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\bloodsucker5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_bloodsucker5_death")
		end
		if has_alife_info("jupiter_chimera1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("chimera_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\chimera1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_chimera1_death")
		end
		if has_alife_info("jupiter_chimera2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("chimera_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\chimera2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_chimera2_death")
		end
		if has_alife_info("jupiter_chimera3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("chimera_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\chimera3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_chimera3_death")
		end
		if has_alife_info("jupiter_chimera4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("chimera_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\chimera4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_chimera4_death")
		end
		if has_alife_info("jupiter_chimera5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("chimera_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\jupiter\\chimera5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("jupiter_chimera5_death")
		end
		if has_alife_info("jupiter_zombied1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("jupiter_zombied1",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("jupiter_zombied1_death")
		end
		if has_alife_info("jupiter_zombied2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("jupiter_zombied2",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("jupiter_zombied2_death")
		end
		if has_alife_info("jupiter_zombied3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("jupiter_zombied3",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("jupiter_zombied3_death")
		end
		if has_alife_info("jupiter_zombied4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("jupiter_zombied4",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("jupiter_zombied4_death")
		end
		if has_alife_info("jupiter_zombied5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("jupiter_zombied5",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("jupiter_zombied5_death")
		end
		if has_alife_info("jupiter_zombied6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("jupiter_zombied6",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("jupiter_zombied6_death")
		end
		if has_alife_info("jupiter_zombied7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("jupiter_zombied7",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("jupiter_zombied7_death")
		end
		if has_alife_info("jupiter_zombied8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("jupiter_zombied8",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("jupiter_zombied8_death")
		end
		if has_alife_info("jupiter_jupiter_killer1_death") then
			spawn_ids_object("jupiter_killer1")
			db.actor:disable_info_portion("jupiter_jupiter_killer1_death")
		end
		if has_alife_info("jupiter_jupiter_killer2_death") then
			spawn_ids_object("jupiter_killer2")
			db.actor:disable_info_portion("jupiter_jupiter_killer2_death")
		end
		if has_alife_info("jupiter_jupiter_killer3_death") then
			spawn_ids_object("jupiter_killer3")
			db.actor:disable_info_portion("jupiter_jupiter_killer3_death")
		end
		if has_alife_info("jupiter_jupiter_killer4_death") then
			spawn_ids_object("jupiter_killer4")
			db.actor:disable_info_portion("jupiter_jupiter_killer4_death")
		end
		if has_alife_info("jupiter_jupiter_killer5_death") then
			spawn_ids_object("jupiter_killer5")
			db.actor:disable_info_portion("jupiter_jupiter_killer5_death")
		end
		if has_alife_info("jupiter_kpp_bandit1_death") then
			spawn_ids_object("jupiter_kpp_bandit1")
			db.actor:disable_info_portion("jupiter_kpp_bandit1_death")
		end
		if has_alife_info("jupiter_kpp_bandit2_death") then
			spawn_ids_object("jupiter_kpp_bandit2")
			db.actor:disable_info_portion("jupiter_kpp_bandit2_death")
		end
		if has_alife_info("jupiter_kpp_bandit3_death") then
			spawn_ids_object("jupiter_kpp_bandit3")
			db.actor:disable_info_portion("jupiter_kpp_bandit3_death")
		end
		if has_alife_info("jupiter_kpp_bandit4_death") then
			spawn_ids_object("jupiter_kpp_bandit4")
			db.actor:disable_info_portion("jupiter_kpp_bandit4_death")
		end
		if has_alife_info("jupiter_kpp_bandit5_death") then
			spawn_ids_object("jupiter_kpp_bandit5")
			db.actor:disable_info_portion("jupiter_kpp_bandit5_death")
		end
		if has_alife_info("jupiter_kpp_bandit6_death") then
			spawn_ids_object("jupiter_kpp_bandit6")
			db.actor:disable_info_portion("jupiter_kpp_bandit6_death")
		end
		if has_alife_info("jupiter_kpp_bandit7_death") then
			spawn_ids_object("jupiter_kpp_bandit7")
			db.actor:disable_info_portion("jupiter_kpp_bandit7_death")
		end
		if has_alife_info("jupiter_kpp_bandit8_death") then
			spawn_ids_object("jupiter_kpp_bandit8")
			db.actor:disable_info_portion("jupiter_kpp_bandit8_death")
		end
		if has_alife_info("jupiter_kpp_bandit9_death") then
			spawn_ids_object("jupiter_kpp_bandit9")
			db.actor:disable_info_portion("jupiter_kpp_bandit9_death")
		end
		if has_alife_info("jupiter_kpp_lider_death") then
			spawn_ids_object("jupiter_valet")
			db.actor:disable_info_portion("jupiter_kpp_lider_death")
		end
		if has_alife_info("jupiter_sklad_bandit1_death") then
			spawn_ids_object("jupiter_sklad_bandit1")
			db.actor:disable_info_portion("jupiter_sklad_bandit1_death")
		end
		if has_alife_info("jupiter_sklad_bandit2_death") then
			spawn_ids_object("jupiter_sklad_bandit2")
			db.actor:disable_info_portion("jupiter_sklad_bandit2_death")
		end
		if has_alife_info("jupiter_sklad_bandit3_death") then
			spawn_ids_object("jupiter_sklad_bandit3")
			db.actor:disable_info_portion("jupiter_sklad_bandit3_death")
		end
		if has_alife_info("jupiter_sklad_bandit4_death") then
			spawn_ids_object("jupiter_sklad_bandit4")
			db.actor:disable_info_portion("jupiter_sklad_bandit4_death")
		end
		if has_alife_info("jupiter_sklad_bandit5_death") then
			spawn_ids_object("jupiter_sklad_bandit5")
			db.actor:disable_info_portion("jupiter_sklad_bandit5_death")
		end
		if has_alife_info("jupiter_sklad_bandit6_death") then
			spawn_ids_object("jupiter_sklad_bandit6")
			db.actor:disable_info_portion("jupiter_sklad_bandit6_death")
		end
		if has_alife_info("jupiter_sklad_bandit7_death") then
			spawn_ids_object("jupiter_sklad_bandit7")
			db.actor:disable_info_portion("jupiter_sklad_bandit7_death")
		end
		if has_alife_info("jupiter_sklad_bandit8_death") then
			spawn_ids_object("jupiter_sklad_bandit8")
			db.actor:disable_info_portion("jupiter_sklad_bandit8_death")
		end
		if has_alife_info("jupiter_sklad_lider_death") then
			spawn_ids_object("jupiter_tuz")
			db.actor:disable_info_portion("jupiter_sklad_lider_death")
		end
	end
	
	if lname == "labx8" then
		if has_alife_info("labx8_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\labx8\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("labx8_bloodsucker1_death")
		end
		if has_alife_info("labx8_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\labx8\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("labx8_bloodsucker2_death")
		end
		if has_alife_info("labx8_poltergeist1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\labx8\\poltergeist1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("labx8_poltergeist1_death")
		end
		if has_alife_info("labx8_poltergeist2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\labx8\\poltergeist2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("labx8_poltergeist2_death")
		end
		if has_alife_info("labx8_poltergeist3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\labx8\\poltergeist3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("labx8_poltergeist3_death")
		end
		if has_alife_info("labx8_poltergeist4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\labx8\\poltergeist4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("labx8_poltergeist4_death")
		end
		if has_alife_info("labx8_poltergeist5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\labx8\\poltergeist5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("labx8_poltergeist5_death")
		end
		if has_alife_info("labx8_poltergeist6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\labx8\\poltergeist6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("labx8_poltergeist6_death")
		end
	end
	
	if lname == "limansk" then
		if has_alife_info("limansk_zombie1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie1_death")
		end
		if has_alife_info("limansk_zombie2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie2_death")
		end
		if has_alife_info("limansk_zombie3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie3_death")
		end
		if has_alife_info("limansk_zombie4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie4_death")
		end
		if has_alife_info("limansk_zombie5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie5_death")
		end
		if has_alife_info("limansk_zombie6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie6_death")
		end
		if has_alife_info("limansk_zombie7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie7_death")
		end
		if has_alife_info("limansk_zombie8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie8_death")
		end
		if has_alife_info("limansk_zombie9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie9_death")
		end
		if has_alife_info("limansk_zombie10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie10_death")
		end
		if has_alife_info("limansk_zombie11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie11_death")
		end
		if has_alife_info("limansk_zombie12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie12_death")
		end
		if has_alife_info("limansk_zombie13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie13_death")
		end
		if has_alife_info("limansk_zombie14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie14_death")
		end
		if has_alife_info("limansk_zombie15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie15_death")
		end
		if has_alife_info("limansk_zombie16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie16_death")
		end
		if has_alife_info("limansk_zombie17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie17_death")
		end
		if has_alife_info("limansk_zombie18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie18_death")
		end
		if has_alife_info("limansk_zombie19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie19_death")
		end
		if has_alife_info("limansk_zombie20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie20_death")
		end
		if has_alife_info("limansk_zombie21_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie21.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie21_death")
		end
		if has_alife_info("limansk_zombie22_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie22.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie22_death")
		end
		if has_alife_info("limansk_zombie23_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie23.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie23_death")
		end
		if has_alife_info("limansk_zombie24_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\zombie24.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_zombie24_death")
		end
		if has_alife_info("limansk_fracture1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_fracture_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\fracture1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_fracture1_death")
		end
		if has_alife_info("limansk_fracture2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_fracture_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\fracture2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_fracture2_death")
		end
		if has_alife_info("limansk_fracture3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_fracture_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\fracture3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_fracture3_death")
		end
		if has_alife_info("limansk_cat2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\cat2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_cat2_death")
		end
		if has_alife_info("limansk_cat3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\cat3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_cat3_death")
		end
		if has_alife_info("limansk_cat4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\cat4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_cat4_death")
		end
		if has_alife_info("limansk_cat5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\cat5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_cat5_death")
		end
		if has_alife_info("limansk_cat6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\cat6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_cat6_death")
		end
		if has_alife_info("limansk_cat7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\cat7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_cat7_death")
		end
		if has_alife_info("limansk_cat8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\cat8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_cat8_death")
		end
		if has_alife_info("limansk_cat9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\cat9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_cat9_death")
		end
		if has_alife_info("limansk_cat10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\cat10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_cat10_death")
		end
		if has_alife_info("limansk_cat11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\cat11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_cat11_death")
		end
		if has_alife_info("limansk_cat12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\cat12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_cat12_death")
		end
		if has_alife_info("limansk_cat13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\cat13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_cat13_death")
		end
		if has_alife_info("limansk_cat14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\cat14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_cat14_death")
		end
		if has_alife_info("limansk_cat15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\cat15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_cat15_death")
		end
		if has_alife_info("limansk_controller1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("controller_tubeman",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\controller1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_controller1_death")
		end
		if has_alife_info("limansk_controller2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("controller_tubeman",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\limansk\\controller2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("limansk_controller2_death")
		end
		if has_alife_info("limansk_radiowave_monolit1_death") then
			alife():create("limansk_radiowave_monolit1",vector():set(69.175178527832,10.299920082092,309.32666015625),57736,3023)
			db.actor:disable_info_portion("limansk_radiowave_monolit1_death")
		end
		if has_alife_info("limansk_radiowave_monolit2_death") then
			alife():create("limansk_radiowave_monolit2",vector():set(69.808784484863,10.297445297241,312.51129150391),57978,3023)
			db.actor:disable_info_portion("limansk_radiowave_monolit2_death")
		end
		if has_alife_info("limansk_radiowave_monolit3_death") then
			alife():create("limansk_radiowave_monolit3",vector():set(69.800422668457,17.295146942139,322.74450683594),57864,3023)
			db.actor:disable_info_portion("limansk_radiowave_monolit3_death")
		end
		if has_alife_info("limansk_radiowave_monolit4_death") then
			alife():create("limansk_radiowave_monolit4",vector():set(70.844512939453,17.297304153442,313.86862182617),57981,3023)
			db.actor:disable_info_portion("limansk_radiowave_monolit4_death")
		end
		if has_alife_info("limansk_radiowave_monolit5_death") then
			alife():create("limansk_radiowave_monolit5",vector():set(68.343315124512,10.299438476563,325.77603149414),57621,3023)
			db.actor:disable_info_portion("limansk_radiowave_monolit5_death")
		end
		if has_alife_info("limansk_radiowave_monolit6_death") then
			alife():create("limansk_radiowave_monolit6",vector():set(70.849510192871,10.299693107605,323.81130981445),57619,3023)
			db.actor:disable_info_portion("limansk_radiowave_monolit6_death")
		end
		if has_alife_info("limansk_radiowave_monolit7_death") then
			alife():create("limansk_radiowave_monolit7",vector():set(69.631523132324,10.297842025757,305.75836181641),57734,3023)
			db.actor:disable_info_portion("limansk_radiowave_monolit7_death")
		end
		if has_alife_info("limansk_radiowave_monolit8_death") then
			alife():create("limansk_radiowave_monolit8",vector():set(69.132232666016,10.299752235413,302.15505981445),57732,3023)
			db.actor:disable_info_portion("limansk_radiowave_monolit8_death")
		end
		if has_alife_info("limansk_radiowave_monolit9_death") then
			alife():create("limansk_radiowave_monolit9",vector():set(70.664215087891, 10.29488658905, 300.00143432617),57969,3023)
			db.actor:disable_info_portion("limansk_radiowave_monolit9_death")
		end
		if has_alife_info("limansk_radiowave_monolit10_death") then
			alife():create("limansk_radiowave_monolit10",vector():set(68.285629272461,10.299715042114,296.31314086914),57588,3023)
			db.actor:disable_info_portion("limansk_radiowave_monolit10_death")
		end
		if has_alife_info("limansk_radiowave_monolit11_death") then
			alife():create("limansk_radiowave_monolit11",vector():set(69.151359558105, 10.299016952515, 294.22180175781),57585,3023)
			db.actor:disable_info_portion("limansk_radiowave_monolit11_death")
		end
		if has_alife_info("limansk_radiowave_monolit12_death") then
			alife():create("limansk_radiowave_monolit12",vector():set(70.070602416992,10.299989700317,286.13265991211),57841,3023)
			db.actor:disable_info_portion("limansk_radiowave_monolit12_death")
		end
		if has_alife_info("limansk_radiowave_monolit13_death") then
			alife():create("limansk_radiowave_monolit13",vector():set(68.327682495117,10.300036430359,284.51629638672),57571,3023)
			db.actor:disable_info_portion("limansk_radiowave_monolit13_death")
		end
		if has_alife_info("limansk_radiowave_monolit14_death") then
			alife():create("limansk_radiowave_monolit14",vector():set(28.800975799561,3.2937140464783,289.26348876953),41759,3022)
			db.actor:disable_info_portion("limansk_radiowave_monolit14_death")
		end
		if has_alife_info("limansk_radiowave_monolit15_death") then
			alife():create("limansk_radiowave_monolit15",vector():set(28.672439575195,3.2983717918396,292.65679931641),41763,3022)
			db.actor:disable_info_portion("limansk_radiowave_monolit15_death")
		end
		if has_alife_info("limansk_radiowave_monolit16_death") then
			alife():create("limansk_radiowave_monolit16",vector():set(37.809368133545,3.3015990257263,263.75991821289),47068,3021)
			db.actor:disable_info_portion("limansk_radiowave_monolit16_death")
		end
		if has_alife_info("limansk_radiowave_monolit17_death") then
			alife():create("limansk_radiowave_monolit17",vector():set(33.547527313232,3.2961235046387,268.91571044922),44542,3022)
			db.actor:disable_info_portion("limansk_radiowave_monolit17_death")
		end
		if has_alife_info("limansk_radiowave_monolit18_death") then
			alife():create("limansk_radiowave_monolit18",vector():set(46.931480407715,3.2904863357544,257.79348754883),50637,3021)
			db.actor:disable_info_portion("limansk_radiowave_monolit18_death")
		end
		if has_alife_info("limansk_radiowave_monolit19_death") then
			alife():create("limansk_radiowave_monolit19",vector():set(47.530578613281,3.2959332466125,253.77084350586),50842,3021)
			db.actor:disable_info_portion("limansk_radiowave_monolit19_death")
		end
		if has_alife_info("limansk_radiowave_monolit20_death") then
			alife():create("limansk_radiowave_monolit20",vector():set(47.848560333252,3.2981925010681,256.40713500977),50845,3021)
			db.actor:disable_info_portion("limansk_radiowave_monolit20_death")
		end
		if has_alife_info("limansk_radiowave_monolit21_death") then
			alife():create("limansk_radiowave_monolit21",vector():set(74.509506225586,7.3426289558411,246.388671875),58479,3021)
			db.actor:disable_info_portion("limansk_radiowave_monolit21_death")
		end
		if has_alife_info("limansk_radiowave_monolit22_death") then
			alife():create("limansk_radiowave_monolit22",vector():set(78.873435974121,7.3436813354492,242.41070556641),58999,3021)
			db.actor:disable_info_portion("limansk_radiowave_monolit22_death")
		end
		if has_alife_info("limansk_radiowave_monolit23_death") then
			alife():create("limansk_radiowave_monolit23",vector():set(83.590148925781,7.3438920974731,241.50323486328),59414,3021)
			db.actor:disable_info_portion("limansk_radiowave_monolit23_death")
		end
		if has_alife_info("limansk_radiowave_monolit24_death") then
			alife():create("limansk_radiowave_monolit24",vector():set(86.30143737793,7.3415846824646,251.21171569824),59708,3021)
			db.actor:disable_info_portion("limansk_radiowave_monolit24_death")
		end
		if has_alife_info("limansk_radiowave_monolit25_death") then
			alife():create("limansk_radiowave_monolit25",vector():set(88.106002807617,7.3440818786621,240.38269042969),59764,3021)
			db.actor:disable_info_portion("limansk_radiowave_monolit25_death")
		end
		if has_alife_info("limansk_radiowave_monolit26_death") then
			alife():create("limansk_radiowave_monolit26",vector():set(89.903511047363,11.15648651123,245.28874206543),60027,3021)
			db.actor:disable_info_portion("limansk_radiowave_monolit26_death")
		end
		if has_alife_info("limansk_radiowave_monolit27_death") then
			alife():create("limansk_radiowave_monolit27",vector():set(71.379005432129,10.79884147644,258.42721557617),58482,3021)
			db.actor:disable_info_portion("limansk_radiowave_monolit27_death")
		end
		if has_alife_info("limansk_radiowave_monolit28_death") then
			alife():create("limansk_radiowave_monolit28",vector():set(13.714120864868,4.4527945518494,248.20562744141),33824,3021)
			db.actor:disable_info_portion("limansk_radiowave_monolit28_death")
		end
		if has_alife_info("limansk_radiowave_monolit29_death") then
			alife():create("limansk_radiowave_monolit29",vector():set(16.954982757568,3.3002369403839,244.4500579834),35448,3021)
			db.actor:disable_info_portion("limansk_radiowave_monolit29_death")
		end
		if has_alife_info("limansk_radiowave_monolit30_death") then
			alife():create("limansk_radiowave_monolit30",vector():set(23.928112030029,3.2997343540192,250.06544494629),39475,3021)
			db.actor:disable_info_portion("limansk_radiowave_monolit30_death")
		end
		if has_alife_info("limansk_building_monolit1_death") then
			alife():create("limansk_building_monolit1",vector():set(21.946184158325,16.834609985352,180.96238708496),37959,3010)
			db.actor:disable_info_portion("limansk_building_monolit1_death")
		end
		if has_alife_info("limansk_building_monolit2_death") then
			alife():create("limansk_building_monolit2",vector():set(13.698635101318,16.837919235229,180.33467102051),33711,3010)
			db.actor:disable_info_portion("limansk_building_monolit2_death")
		end
		if has_alife_info("limansk_building_monolit3_death") then
			alife():create("limansk_building_monolit3",vector():set(14.792273521423,17.102489471436,183.52491760254),34140,3010)
			db.actor:disable_info_portion("limansk_building_monolit3_death")
		end
		if has_alife_info("limansk_building_monolit4_death") then
			alife():create("limansk_building_monolit4",vector():set(22.722764968872,17.09156036377,184.40678405762),38330,3010)
			db.actor:disable_info_portion("limansk_building_monolit4_death")
		end
		if has_alife_info("limansk_building_monolit5_death") then
			alife():create("limansk_building_monolit5",vector():set(11.379366874695,17.088512420654,198.50479125977),31922,3010)
			db.actor:disable_info_portion("limansk_building_monolit5_death")
		end
		if has_alife_info("limansk_building_monolit6_death") then
			alife():create("limansk_building_monolit6",vector():set(32.920341491699,17.085308074951,199.55656433105),44062,3010)
			db.actor:disable_info_portion("limansk_building_monolit6_death")
		end
		if has_alife_info("limansk_building_monolit7_death") then
			alife():create("limansk_building_monolit7",vector():set(39.291927337646,17.085279464722,178.57516479492),47289,3010)
			db.actor:disable_info_portion("limansk_building_monolit7_death")
		end
		if has_alife_info("limansk_building_monolit8_death") then
			alife():create("limansk_building_monolit8",vector():set(4.4149417877197,17.092292785645,199.43193054199),27241,3010)
			db.actor:disable_info_portion("limansk_building_monolit8_death")
		end
		if has_alife_info("limansk_building_monolit9_death") then
			alife():create("limansk_building_monolit9",vector():set(9.9011116027832,20.860555648804,178.04019165039),30857,3003)
			db.actor:disable_info_portion("limansk_building_monolit9_death")
		end
		if has_alife_info("limansk_building_monolit10_death") then
			alife():create("limansk_building_monolit10",vector():set(-0.55162876844406,20.896409988403,179.83827209473),24335,3003)
			db.actor:disable_info_portion("limansk_building_monolit10_death")
		end
		if has_alife_info("limansk_building_monolit11_death") then
			alife():create("limansk_building_monolit11",vector():set(14.556371688843,24.8694190979,181.76644897461),34133,3003)
			db.actor:disable_info_portion("limansk_building_monolit11_death")
		end
		if has_alife_info("limansk_building_monolit12_death") then
			alife():create("limansk_building_monolit12",vector():set(0.1789558082819,24.78888130188,179.05490112305),24696,3003)
			db.actor:disable_info_portion("limansk_building_monolit12_death")
		end
		if has_alife_info("limansk_building_monolit13_death") then
			alife():create("limansk_building_monolit13",vector():set(-3.6227979660034,24.744258880615,183.38139343262),22843,3003)
			db.actor:disable_info_portion("limansk_building_monolit13_death")
		end
		if has_alife_info("limansk_building_monolit14_death") then
			alife():create("limansk_building_monolit14",vector():set(25.41296005249,24.745464324951,186.17776489258),39771,3003)
			db.actor:disable_info_portion("limansk_building_monolit14_death")
		end
		if has_alife_info("limansk_building_monolit15_death") then
			alife():create("limansk_building_monolit15",vector():set(20.608783721924,24.712196350098,199.90225219727),37660,3003)
			db.actor:disable_info_portion("limansk_building_monolit15_death")
		end
		if has_alife_info("limansk_building_monolit16_death") then
			alife():create("limansk_building_monolit16",vector():set(34.025615692139,24.744703292847,199.85491943359),44904,3003)
			db.actor:disable_info_portion("limansk_building_monolit16_death")
		end
		if has_alife_info("limansk_building_monolit17_death") then
			alife():create("limansk_building_monolit17",vector():set(22.513092041016,24.703378677368,188.82901000977),38349,3003)
			db.actor:disable_info_portion("limansk_building_monolit17_death")
		end
		if has_alife_info("limansk_building_monolit18_death") then
			alife():create("limansk_building_monolit18",vector():set(2.2460341453552,24.811422348022,179.18258666992),25953,3003)
			db.actor:disable_info_portion("limansk_building_monolit18_death")
		end
		if has_alife_info("limansk_building_monolit19_death") then
			alife():create("limansk_building_monolit19",vector():set(0.94609272480011,24.744194030762,185.53970336914),25119,3003)
			db.actor:disable_info_portion("limansk_building_monolit19_death")
		end
		if has_alife_info("limansk_building_monolit20_death") then
			alife():create("limansk_building_monolit20",vector():set(4.931800365448,26.436803817749,188.25764465332),27658,3003)
			db.actor:disable_info_portion("limansk_building_monolit20_death")
		end
		if has_alife_info("limansk_building_monolit21_death") then
			alife():create("limansk_building_monolit21",vector():set(28.083862304688,28.541723251343,178.98104858398),41256,3003)
			db.actor:disable_info_portion("limansk_building_monolit21_death")
		end
		if has_alife_info("limansk_building_monolit22_death") then
			alife():create("limansk_building_monolit22",vector():set(25.576807022095,28.536645889282,182.4528503418),40154,3003)
			db.actor:disable_info_portion("limansk_building_monolit22_death")
		end
		if has_alife_info("limansk_building_monolit23_death") then
			alife():create("limansk_building_monolit23",vector():set(38.544300079346,28.540832519531,181.17953491211),47305,3003)
			db.actor:disable_info_portion("limansk_building_monolit23_death")
		end
		if has_alife_info("limansk_building_monolit24_death") then
			alife():create("limansk_building_monolit24",vector():set(38.372272491455,28.538743972778,178.03974914551),47291,3003)
			db.actor:disable_info_portion("limansk_building_monolit24_death")
		end
		if has_alife_info("limansk_building_monolit25_death") then
			alife():create("limansk_building_monolit25",vector():set(39.495166778564,28.541124343872,191.75732421875),47736,3003)
			db.actor:disable_info_portion("limansk_building_monolit25_death")
		end
		if has_alife_info("limansk_building_monolit26_death") then
			alife():create("limansk_building_monolit26",vector():set(33.582649230957,28.540218353271,199.69921875),44499,3003)
			db.actor:disable_info_portion("limansk_building_monolit26_death")
		end
		if has_alife_info("limansk_building_monolit27_death") then
			alife():create("limansk_building_monolit27",vector():set(20.630849838257,28.518884658813,199.69314575195),37286,3003)
			db.actor:disable_info_portion("limansk_building_monolit27_death")
		end
		if has_alife_info("limansk_building_monolit28_death") then
			alife():create("limansk_building_monolit28",vector():set(13.444618225098,28.515378952026,199.17797851563),33343,3003)
			db.actor:disable_info_portion("limansk_building_monolit28_death")
		end
		if has_alife_info("limansk_building_monolit29_death") then
			alife():create("limansk_building_monolit29",vector():set(-3.8233947753906,28.526195526123,197.57987976074),22891,3003)
			db.actor:disable_info_portion("limansk_building_monolit29_death")
		end
		if has_alife_info("limansk_building_monolit30_death") then
			alife():create("limansk_building_monolit30",vector():set(39.119758605957,28.541803359985,196.65983581543),47743,3003)
			db.actor:disable_info_portion("limansk_building_monolit30_death")
		end
	end
	
	if lname == "peshera" then
		if has_alife_info("peshera_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_bloodsucker1_death")
		end
		if has_alife_info("peshera_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_bloodsucker2_death")
		end
		if has_alife_info("peshera_gigant1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\gigant1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_gigant1_death")
		end
		if has_alife_info("peshera_gigant2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\gigant2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_gigant2_death")
		end
		if has_alife_info("peshera_controller1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_controller_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\controller1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_controller1_death")
		end
		if has_alife_info("peshera_poltergeist1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\poltergeist1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_poltergeist1_death")
		end
		if has_alife_info("peshera_poltergeist2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\poltergeist2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_poltergeist2_death")
		end
		if has_alife_info("peshera_poltergeist3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\poltergeist3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_poltergeist3_death")
		end
		if has_alife_info("peshera_poltergeist4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\poltergeist4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_poltergeist4_death")
		end
		if has_alife_info("peshera_pseudodog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\pseudodog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_pseudodog1_death")
		end
		if has_alife_info("peshera_snork1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\snork1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_snork1_death")
		end
		if has_alife_info("peshera_snork2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\snork2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_snork2_death")
		end
		if has_alife_info("peshera_snork3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\snork3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_snork3_death")
		end
		if has_alife_info("peshera_snork4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\snork4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_snork4_death")
		end
		if has_alife_info("peshera_snork5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\snork5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_snork5_death")
		end
		if has_alife_info("peshera_snork6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\snork6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_snork6_death")
		end
		if has_alife_info("peshera_snork7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\snork7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_snork7_death")
		end
		if has_alife_info("peshera_snork8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\snork8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_snork8_death")
		end
		if has_alife_info("peshera_snork9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\peshera\\snork9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("peshera_snork9_death")
		end
	end
	
	if lname == "pripyat" then
		if has_alife_info("pripyat_controller1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("controller_tubeman",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\controller1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_controller1_death")
		end
		if has_alife_info("pripyat_controller2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("controller_tubeman",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\controller2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_controller2_death")
		end
		if has_alife_info("pripyat_controller3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("controller_tubeman",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\controller3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_controller3_death")
		end
		if has_alife_info("pripyat_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_bloodsucker1_death")
		end
		if has_alife_info("pripyat_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_bloodsucker2_death")
		end
		if has_alife_info("pripyat_fracture1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_fracture_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\fracture1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_fracture1_death")
		end
		if has_alife_info("pripyat_fracture2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_fracture_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\fracture2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_fracture2_death")
		end
		if has_alife_info("pripyat_fracture3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_fracture_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\fracture3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_fracture3_death")
		end
		if has_alife_info("pripyat_fracture4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_fracture_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\fracture4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_fracture4_death")
		end
		if has_alife_info("pripyat_fracture5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_fracture_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\fracture5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_fracture5_death")
		end
		if has_alife_info("pripyat_dog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\dog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_dog1_death")
		end
		if has_alife_info("pripyat_dog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\dog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_dog2_death")
		end
		if has_alife_info("pripyat_dog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\dog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_dog3_death")
		end
		if has_alife_info("pripyat_dog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\dog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_dog4_death")
		end
		if has_alife_info("pripyat_dog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\dog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_dog5_death")
		end
		if has_alife_info("pripyat_dog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\dog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_dog6_death")
		end
		if has_alife_info("pripyat_dog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\dog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_dog7_death")
		end
		if has_alife_info("pripyat_dog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\dog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_dog8_death")
		end
		if has_alife_info("pripyat_pseudodog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\pseudodog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_pseudodog1_death")
		end
		if has_alife_info("pripyat_pseudodog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\pseudodog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_pseudodog2_death")
		end
		if has_alife_info("pripyat_pseudodog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\pseudodog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_pseudodog3_death")
		end
		if has_alife_info("pripyat_pseudodog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\pseudodog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_pseudodog4_death")
		end
		if has_alife_info("pripyat_pseudodog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\pseudodog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_pseudodog5_death")
		end
		if has_alife_info("pripyat_pseudodog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\pseudodog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_pseudodog6_death")
		end
		if has_alife_info("pripyat_pseudodog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\pseudodog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_pseudodog7_death")
		end
		if has_alife_info("pripyat_burer1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\burer1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_burer1_death")
		end
		if has_alife_info("pripyat_burer2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\burer2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_burer2_death")
		end
		if has_alife_info("pripyat_burer3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\burer3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_burer3_death")
		end
		if has_alife_info("pripyat_burer4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\burer4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_burer4_death")
		end
		if has_alife_info("pripyat_burer5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\pripyat\\burer5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("pripyat_burer5_death")
		end
		if has_alife_info("pripyat_zombied1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("pripyat_zombied1",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("pripyat_zombied1_death")
		end
		if has_alife_info("pripyat_zombied2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("pripyat_zombied2",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("pripyat_zombied2_death")
		end
		if has_alife_info("pripyat_zombied3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("pripyat_zombied3",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("pripyat_zombied3_death")
		end
		if has_alife_info("pripyat_zombied4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("pripyat_zombied4",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("pripyat_zombied4_death")
		end
		if has_alife_info("pripyat_zombied5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("pripyat_zombied5",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("pripyat_zombied5_death")
		end
		if has_alife_info("pripyat_zombied6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("pripyat_zombied6",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("pripyat_zombied6_death")
		end
		if has_alife_info("pripyat_zombied7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("pripyat_zombied7",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("pripyat_zombied7_death")
		end
		if has_alife_info("pripyat_zombied8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("pripyat_zombied8",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("pripyat_zombied8_death")
		end
		if has_alife_info("pripyat_zombied9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("pripyat_zombied9",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("pripyat_zombied9_death")
		end
		if has_alife_info("pripyat_zombied10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("pripyat_zombied10",pos, lv_rand, gv_rand)
			db.actor:disable_info_portion("pripyat_zombied10_death")
		end
		if has_alife_info("pripyat_monolit1_death") then
			alife():create("pripyat_monolit1",vector():set(293.49551391602,0.73322188854218,219.75480651855),476204,3769)
			db.actor:disable_info_portion("pripyat_monolit1_death")
		end
		if has_alife_info("pripyat_monolit2_death") then
			alife():create("pripyat_monolit2",vector():set(296.93368530273,0.61897993087769,223.58166503906),477661,3769)
			db.actor:disable_info_portion("pripyat_monolit2_death")
		end
		if has_alife_info("pripyat_monolit3_death") then
			alife():create("pripyat_monolit3",vector():set(286.17028808594,0.67680060863495,223.13150024414),473737,3769)
			db.actor:disable_info_portion("pripyat_monolit3_death")
		end
		if has_alife_info("pripyat_monolit4_death") then
			alife():create("pripyat_monolit4",vector():set(283.86492919922,0.6774514913559,226.01849365234),472998,3769)
			db.actor:disable_info_portion("pripyat_monolit4_death")
		end
		if has_alife_info("pripyat_monolit5_death") then
			alife():create("pripyat_monolit5",vector():set(288.50790405273,0.67801201343536,227.17175292969),474481,3769)
			db.actor:disable_info_portion("pripyat_monolit5_death")
		end
		if has_alife_info("pripyat_monolit6_death") then
			alife():create("pripyat_monolit6",vector():set(298.38354492188,0.67800033092499,238.20950317383),477926,3769)
			db.actor:disable_info_portion("pripyat_monolit6_death")
		end
		if has_alife_info("pripyat_monolit7_death") then
			alife():create("pripyat_monolit7",vector():set(301.10659790039,0.67706024646759,233.91925048828),478861,3769)
			db.actor:disable_info_portion("pripyat_monolit7_death")
		end
		if has_alife_info("pripyat_monolit8_death") then
			alife():create("pripyat_monolit8",vector():set(304.40493774414,0.67612946033478,229.580078125),479777,3769)
			db.actor:disable_info_portion("pripyat_monolit8_death")
		end
		if has_alife_info("pripyat_monolit9_death") then
			alife():create("pripyat_monolit9",vector():set(280.95913696289,-0.17508655786514,256.39807128906),471836,3769)
			db.actor:disable_info_portion("pripyat_monolit9_death")
		end
		if has_alife_info("pripyat_monolit10_death") then
			alife():create("pripyat_monolit10",vector():set(260.29791259766,0.17151460051537,301.56588745117),464372,3769)
			db.actor:disable_info_portion("pripyat_monolit10_death")
		end
		if has_alife_info("pripyat_monolit11_death") then
			alife():create("pripyat_monolit11",vector():set(263.31420898438,0.16718474030495,305.92361450195),465470,3769)
			db.actor:disable_info_portion("pripyat_monolit11_death")
		end
		if has_alife_info("pripyat_monolit12_death") then
			alife():create("pripyat_monolit12",vector():set(266.03826904297,0.16682866215706,304.67520141602),466565,3769)
			db.actor:disable_info_portion("pripyat_monolit12_death")
		end
		if has_alife_info("pripyat_monolit13_death") then
			alife():create("pripyat_monolit13",vector():set(265.654296875,0.16638216376305,306.93176269531),466568,3769)
			db.actor:disable_info_portion("pripyat_monolit13_death")
		end
		if has_alife_info("pripyat_monolit14_death") then
			alife():create("pripyat_monolit14",vector():set(259.39462280273,0.16577968001366,315.25140380859),463837,3769)
			db.actor:disable_info_portion("pripyat_monolit14_death")
		end
		if has_alife_info("pripyat_monolit15_death") then
			alife():create("pripyat_monolit15",vector():set(259.14508056641,0.16603466868401,310.88931274414),464105,3769)
			db.actor:disable_info_portion("pripyat_monolit15_death")
		end
		if has_alife_info("pripyat_monolit16_death") then
			alife():create("pripyat_monolit16",vector():set(266.17993164063,0.16319188475609,317.79962158203),466576,3769)
			db.actor:disable_info_portion("pripyat_monolit16_death")
		end
		if has_alife_info("pripyat_monolit17_death") then
			alife():create("pripyat_monolit17",vector():set(263.80740356445,0.16706815361977,317.79177856445),465750,3769)
			db.actor:disable_info_portion("pripyat_monolit17_death")
		end
		if has_alife_info("pripyat_monolit18_death") then
			alife():create("pripyat_monolit18",vector():set(250.15634155273,0.1675960123539,312.13357543945),460550,3769)
			db.actor:disable_info_portion("pripyat_monolit18_death")
		end
		if has_alife_info("pripyat_monolit19_death") then
			alife():create("pripyat_monolit19",vector():set(258.33694458008,5.646568775177,300.74130249023),463285,3769)
			db.actor:disable_info_portion("pripyat_monolit19_death")
		end
		if has_alife_info("pripyat_monolit20_death") then
			alife():create("pripyat_monolit20",vector():set(268.42529296875,6.9062829017639,303.51831054688),467364,3769)
			db.actor:disable_info_portion("pripyat_monolit20_death")
		end
		if has_alife_info("pripyat_monolit21_death") then
			alife():create("pripyat_monolit21",vector():set(258.57540893555,5.8489775657654,295.62768554688),463555,3769)
			db.actor:disable_info_portion("pripyat_monolit21_death")
		end
		if has_alife_info("pripyat_monolit22_death") then
			alife():create("pripyat_monolit22",vector():set(268.74612426758,12.346661567688,304.61508178711),467629,3769)
			db.actor:disable_info_portion("pripyat_monolit22_death")
		end
		if has_alife_info("pripyat_monolit23_death") then
			alife():create("pripyat_monolit23",vector():set(266.96047973633,12.488086700439,309.50482177734),466851,3769)
			db.actor:disable_info_portion("pripyat_monolit23_death")
		end
		if has_alife_info("pripyat_monolit24_death") then
			alife():create("pripyat_monolit24",vector():set(272.72579956055,18.782258987427,310.41955566406),468653,3769)
			db.actor:disable_info_portion("pripyat_monolit24_death")
		end
		if has_alife_info("pripyat_monolit25_death") then
			alife():create("pripyat_monolit25",vector():set(277.75244140625,12.452333450317,309.05279541016),470946,3769)
			db.actor:disable_info_portion("pripyat_monolit25_death")
		end
	end
	
	if lname == "puzir" then
		if has_alife_info("puzir_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_bloodsucker1_death")
		end
		if has_alife_info("puzir_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_bloodsucker2_death")
		end
		if has_alife_info("puzir_boar1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\boar1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_boar1_death")
		end
		if has_alife_info("puzir_boar2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\boar2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_boar2_death")
		end
		if has_alife_info("puzir_boar3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\boar3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_boar3_death")
		end
		if has_alife_info("puzir_boar4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\boar4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_boar4_death")
		end
		if has_alife_info("puzir_boar5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\boar5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_boar5_death")
		end
		if has_alife_info("puzir_boar6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\boar6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_boar6_death")
		end
		if has_alife_info("puzir_boar7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\boar7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_boar7_death")
		end
		if has_alife_info("puzir_dog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\dog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_dog1_death")
		end
		if has_alife_info("puzir_dog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\dog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_dog2_death")
		end
		if has_alife_info("puzir_dog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\dog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_dog3_death")
		end
		if has_alife_info("puzir_dog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\dog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_dog4_death")
		end
		if has_alife_info("puzir_dog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\dog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_dog5_death")
		end
		if has_alife_info("puzir_dog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\dog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_dog6_death")
		end
		if has_alife_info("puzir_dog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\dog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_dog7_death")
		end
		if has_alife_info("puzir_dog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\dog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_dog8_death")
		end
		if has_alife_info("puzir_dog9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\dog9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_dog9_death")
		end
		if has_alife_info("puzir_dog10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\dog10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_dog10_death")
		end
		if has_alife_info("puzir_gigant1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\gigant1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_gigant1_death")
		end
		if has_alife_info("puzir_gigant2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\gigant2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_gigant2_death")
		end
		if has_alife_info("puzir_gigant3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\gigant3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_gigant3_death")
		end
		if has_alife_info("puzir_pseudodog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\pseudodog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_pseudodog1_death")
		end
		if has_alife_info("puzir_pseudodog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\pseudodog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_pseudodog2_death")
		end
		if has_alife_info("puzir_pseudodog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\pseudodog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_pseudodog3_death")
		end
		if has_alife_info("puzir_snork1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork1_death")
		end
		if has_alife_info("puzir_snork2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork2_death")
		end
		if has_alife_info("puzir_snork3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork3_death")
		end
		if has_alife_info("puzir_snork4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork4_death")
		end
		if has_alife_info("puzir_snork5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork5_death")
		end
		if has_alife_info("puzir_snork6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork6_death")
		end
		if has_alife_info("puzir_snork7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork7_death")
		end
		if has_alife_info("puzir_snork8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork8_death")
		end
		if has_alife_info("puzir_snork9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork9_death")
		end
		if has_alife_info("puzir_snork10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork10_death")
		end
		if has_alife_info("puzir_snork11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork11_death")
		end
		if has_alife_info("puzir_snork12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork12_death")
		end
		if has_alife_info("puzir_snork13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork13_death")
		end
		if has_alife_info("puzir_snork14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork14_death")
		end
		if has_alife_info("puzir_snork15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\puzir\\snork15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("puzir_snork15_death")
		end
	end
	
	if lname == "red_forest" then
		if has_alife_info("red_forest_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_bloodsucker1_death")
		end
		if has_alife_info("red_forest_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_bloodsucker2_death")
		end
		if has_alife_info("red_forest_bloodsucker3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\bloodsucker3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_bloodsucker3_death")
		end
		if has_alife_info("red_forest_bloodsucker4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\bloodsucker4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_bloodsucker4_death")
		end
		if has_alife_info("red_forest_dog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\dog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_dog1_death")
		end
		if has_alife_info("red_forest_dog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\dog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_dog2_death")
		end
		if has_alife_info("red_forest_dog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\dog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_dog3_death")
		end
		if has_alife_info("red_forest_dog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\dog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_dog4_death")
		end
		if has_alife_info("red_forest_dog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\dog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_dog5_death")
		end
		if has_alife_info("red_forest_dog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\dog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_dog6_death")
		end
		if has_alife_info("red_forest_dog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\dog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_dog7_death")
		end
		if has_alife_info("red_forest_dog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\dog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_dog8_death")
		end
		if has_alife_info("red_forest_gigant1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\gigant1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_gigant1_death")
		end
		if has_alife_info("red_forest_gigant2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\gigant2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_gigant2_death")
		end
		if has_alife_info("red_forest_controller1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_controller_old",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\controller1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_controller1_death")
		end
		if has_alife_info("controller_corpse") and has_alife_info("controller_spawn") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_controller_old",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\controller2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("controller_corpse")
		end
		if has_alife_info("red_forest_poltergeist1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\poltergeist1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_poltergeist1_death")
		end
		if has_alife_info("red_forest_poltergeist2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\poltergeist2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_poltergeist2_death")
		end
		if has_alife_info("red_forest_poltergeist3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\poltergeist3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_poltergeist3_death")
		end
		if has_alife_info("red_forest_pseudodog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\pseudodog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_pseudodog1_death")
		end
		if has_alife_info("red_forest_pseudodog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\pseudodog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_pseudodog2_death")
		end
		if has_alife_info("red_forest_pseudodog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\pseudodog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_pseudodog3_death")
		end
		if has_alife_info("red_forest_pseudodog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_phantom",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\pseudodog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_pseudodog4_death")
		end
		if has_alife_info("red_forest_pseudodog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\pseudodog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_pseudodog5_death")
		end
		if has_alife_info("red_forest_pseudodog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\pseudodog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_pseudodog6_death")
		end
		if has_alife_info("red_forest_pseudodog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("psy_dog_radar",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\pseudodog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_pseudodog7_death")
		end
		if has_alife_info("red_forest_snork1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\snork1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_snork1_death")
		end
		if has_alife_info("red_forest_snork2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\snork2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_snork2_death")
		end
		if has_alife_info("red_forest_snork3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\snork3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_snork3_death")
		end
		if has_alife_info("red_forest_snork4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\snork4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_snork4_death")
		end
		if has_alife_info("red_forest_snork5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\snork5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_snork5_death")
		end
		if has_alife_info("red_forest_snork6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\snork6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_snork6_death")
		end
		if has_alife_info("red_forest_snork7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\snork7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_snork7_death")
		end
		if has_alife_info("red_forest_snork8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\snork8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_snork8_death")
		end
		if has_alife_info("red_forest_snork9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\snork9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_snork9_death")
		end
		if has_alife_info("red_forest_snork10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\snork10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_snork10_death")
		end
		if has_alife_info("red_forest_snork11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\snork11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_snork11_death")
		end
		if has_alife_info("red_forest_snork12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\snork12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_snork12_death")
		end
		if has_alife_info("red_forest_snork13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\red_forest\\snork13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("red_forest_snork13_death")
		end
	end
	
	if lname == "warlab" then
		if has_alife_info("warlab_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\warlab\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("warlab_bloodsucker1_death")
		end
		if has_alife_info("warlab_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\warlab\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("warlab_bloodsucker2_death")
		end
		if has_alife_info("warlab_poltergeist1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\warlab\\poltergeist1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("warlab_poltergeist1_death")
		end
		if has_alife_info("warlab_poltergeist2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\warlab\\poltergeist2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("warlab_poltergeist2_death")
		end
		if has_alife_info("warlab_poltergeist3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\warlab\\poltergeist3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("warlab_poltergeist3_death")
		end
		if has_alife_info("warlab_poltergeist4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_strong_flame",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\warlab\\poltergeist4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("warlab_poltergeist4_death")
		end
	end
	
	if lname == "yantar_old" then
		if has_alife_info("yantar_old_controller1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("controller_tubeman",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\controller1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_controller1_death")
		end
		if has_alife_info("yantar_old_controller2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("controller_tubeman",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\controller2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_controller2_death")
		end
		if has_alife_info("yantar_old_zombie1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie1_death")
		end
		if has_alife_info("yantar_old_zombie2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie2_death")
		end
		if has_alife_info("yantar_old_zombie3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie3_death")
		end
		if has_alife_info("yantar_old_zombie4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie4_death")
		end
		if has_alife_info("yantar_old_zombie5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie5_death")
		end
		if has_alife_info("yantar_old_zombie6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie6_death")
		end
		if has_alife_info("yantar_old_zombie7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie7_death")
		end
		if has_alife_info("yantar_old_zombie8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie8_death")
		end
		if has_alife_info("yantar_old_zombie9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie9_death")
		end
		if has_alife_info("yantar_old_zombie10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie10_death")
		end
		if has_alife_info("yantar_old_zombie11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie11_death")
		end
		if has_alife_info("yantar_old_zombie12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie12_death")
		end
		if has_alife_info("yantar_old_zombie13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie13_death")
		end
		if has_alife_info("yantar_old_zombie14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie14_death")
		end
		if has_alife_info("yantar_old_zombie15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie15_death")
		end
		if has_alife_info("yantar_old_zombie16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie16_death")
		end
		if has_alife_info("yantar_old_zombie17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie17_death")
		end
		if has_alife_info("yantar_old_zombie18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie18_death")
		end
		if has_alife_info("yantar_old_zombie19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie19_death")
		end
		if has_alife_info("yantar_old_zombie20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie20_death")
		end
		if has_alife_info("yantar_old_zombie21_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie21.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie21_death")
		end
		if has_alife_info("yantar_old_zombie22_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie22.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie22_death")
		end
		if has_alife_info("yantar_old_zombie23_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie23.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie23_death")
		end
		if has_alife_info("yantar_old_zombie24_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie24.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie24_death")
		end
		if has_alife_info("yantar_old_zombie25_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie25.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie25_death")
		end
		if has_alife_info("yantar_old_zombie26_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie26.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie26_death")
		end
		if has_alife_info("yantar_old_zombie27_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie27.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie27_death")
		end
		if has_alife_info("yantar_old_zombie28_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie28.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie28_death")
		end
		if has_alife_info("yantar_old_zombie29_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie29.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie29_death")
		end
		if has_alife_info("yantar_old_zombie30_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie30.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie30_death")
		end
		if has_alife_info("yantar_old_zombie31_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie31.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie31_death")
		end
		if has_alife_info("yantar_old_zombie32_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie32.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie32_death")
		end
		if has_alife_info("yantar_old_zombie33_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie33.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie33_death")
		end
		if has_alife_info("yantar_old_zombie34_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie34.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie34_death")
		end
		if has_alife_info("yantar_old_zombie35_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie35.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie35_death")
		end
		if has_alife_info("yantar_old_zombie36_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie36.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie36_death")
		end
		if has_alife_info("yantar_old_zombie37_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie37.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie37_death")
		end
		if has_alife_info("yantar_old_zombie38_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie38.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie38_death")
		end
		if has_alife_info("yantar_old_zombie39_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie39.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie39_death")
		end
		if has_alife_info("yantar_old_zombie40_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie40.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie40_death")
		end
		if has_alife_info("yantar_old_zombie41_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie41.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie41_death")
		end
		if has_alife_info("yantar_old_zombie42_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie42.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie42_death")
		end
		if has_alife_info("yantar_old_zombie43_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie43.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie43_death")
		end
		if has_alife_info("yantar_old_zombie44_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie44.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie44_death")
		end
		if has_alife_info("yantar_old_zombie45_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie45.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie45_death")
		end
		if has_alife_info("yantar_old_zombie46_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie46.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie46_death")
		end
		if has_alife_info("yantar_old_zombie47_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie47.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie47_death")
		end
		if has_alife_info("yantar_old_zombie48_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie48.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie48_death")
		end
		if has_alife_info("yantar_old_zombie49_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie49.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie49_death")
		end
		if has_alife_info("yantar_old_zombie50_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie50.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie50_death")
		end
		if has_alife_info("yantar_old_zombie51_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie51.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie51_death")
		end
		if has_alife_info("yantar_old_zombie52_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie52.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie52_death")
		end
		if has_alife_info("yantar_old_zombie53_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie53.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie53_death")
		end
		if has_alife_info("yantar_old_zombie54_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie54.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie54_death")
		end
		if has_alife_info("yantar_old_zombie55_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie55.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie55_death")
		end
		if has_alife_info("yantar_old_zombie56_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie56.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie56_death")
		end
		if has_alife_info("yantar_old_zombie57_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie57.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie57_death")
		end
		if has_alife_info("yantar_old_zombie58_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie58.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie58_death")
		end
		if has_alife_info("yantar_old_zombie59_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie59.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie59_death")
		end
		if has_alife_info("yantar_old_zombie60_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie60.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie60_death")
		end
		if has_alife_info("yantar_old_zombie61_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie61.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie61_death")
		end
		if has_alife_info("yantar_old_zombie62_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\zombie62.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_zombie62_death")
		end
		if has_alife_info("yantar_old_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_bloodsucker1_death")
		end
		if has_alife_info("yantar_old_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_bloodsucker2_death")
		end
		if has_alife_info("yantar_old_burer1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\burer1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_burer1_death")
		end
		if has_alife_info("yantar_old_burer2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\burer2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_burer2_death")
		end
		if has_alife_info("yantar_old_burer3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\burer3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_burer3_death")
		end
		if has_alife_info("yantar_old_burer4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\burer4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_burer4_death")
		end
		if has_alife_info("yantar_old_burer5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\burer5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_burer5_death")
		end
		if has_alife_info("yantar_old_burer6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\burer6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_burer6_death")
		end
		if has_alife_info("yantar_old_burer7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\burer7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_burer7_death")
		end
		if has_alife_info("yantar_old_gigant1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\gigant1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_gigant1_death")
		end
		if has_alife_info("yantar_old_gigant2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\gigant2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_gigant2_death")
		end
		if has_alife_info("yantar_old_gigant3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\gigant3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_gigant3_death")
		end
		if has_alife_info("yantar_old_gigant4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\gigant4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_gigant4_death")
		end
		if has_alife_info("yantar_old_gigant5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\gigant5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_gigant5_death")
		end
		if has_alife_info("yantar_old_snork1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork1_death")
		end
		if has_alife_info("yantar_old_snork2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork2_death")
		end
		if has_alife_info("yantar_old_snork3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork3_death")
		end
		if has_alife_info("yantar_old_snork4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork4_death")
		end
		if has_alife_info("yantar_old_snork5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork5_death")
		end
		if has_alife_info("yantar_old_snork6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork6_death")
		end
		if has_alife_info("yantar_old_snork7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork7_death")
		end
		if has_alife_info("yantar_old_snork8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork8_death")
		end
		if has_alife_info("yantar_old_snork9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork9_death")
		end
		if has_alife_info("yantar_old_snork10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork10_death")
		end
		if has_alife_info("yantar_old_snork11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork11_death")
		end
		if has_alife_info("yantar_old_snork12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork12_death")
		end
		if has_alife_info("yantar_old_snork13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork13_death")
		end
		if has_alife_info("yantar_old_snork14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork14_death")
		end
		if has_alife_info("yantar_old_snork15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork15_death")
		end
		if has_alife_info("yantar_old_snork16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork16_death")
		end
		if has_alife_info("yantar_old_snork17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork17_death")
		end
		if has_alife_info("yantar_old_snork18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork18_death")
		end
		if has_alife_info("yantar_old_snork19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork19_death")
		end
		if has_alife_info("yantar_old_snork20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork20_death")
		end
		if has_alife_info("yantar_old_snork21_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork21.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork21_death")
		end
		if has_alife_info("yantar_old_snork22_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork22.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork22_death")
		end
		if has_alife_info("yantar_old_snork23_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork23.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork23_death")
		end
		if has_alife_info("yantar_old_snork24_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork24.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork24_death")
		end
		if has_alife_info("yantar_old_snork25_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("snork_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\yantar_old\\snork25.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("yantar_old_snork25_death")
		end
	end
	
	if lname == "zaton" then
		if has_alife_info("zaton_burer1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\burer1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_burer1_death")
		end
		if has_alife_info("zaton_burer2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\burer2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_burer2_death")
		end
		if has_alife_info("zaton_burer3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\burer3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_burer3_death")
		end
		if has_alife_info("zaton_burer4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\burer4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_burer4_death")
		end
		if has_alife_info("zaton_burer5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\burer5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_burer5_death")
		end
		if has_alife_info("zaton_burer6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("burer_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\burer6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_burer6_death")
		end
		if has_alife_info("zaton_gigant1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\gigant1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_gigant1_death")
		end
		if has_alife_info("zaton_gigant2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\gigant2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_gigant2_death")
		end
		if has_alife_info("zaton_gigant3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\gigant3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_gigant3_death")
		end
		if has_alife_info("zaton_gigant4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\gigant4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_gigant4_death")
		end
		if has_alife_info("zaton_gigant5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\gigant5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_gigant5_death")
		end
		if has_alife_info("zaton_gigant6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\gigant6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_gigant6_death")
		end
		if has_alife_info("zaton_gigant7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("gigant_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\gigant7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_gigant7_death")
		end
		if has_alife_info("zaton_zombie1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\zombie1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_zombie1_death")
		end
		if has_alife_info("zaton_zombie2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\zombie2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_zombie2_death")
		end
		if has_alife_info("zaton_zombie3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\zombie3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_zombie3_death")
		end
		if has_alife_info("zaton_zombie4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\zombie4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_zombie4_death")
		end
		if has_alife_info("zaton_zombie5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\zombie5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_zombie5_death")
		end
		if has_alife_info("zaton_zombie6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\zombie6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_zombie6_death")
		end
		if has_alife_info("zaton_zombie7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\zombie7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_zombie7_death")
		end
		if has_alife_info("zaton_zombie8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("zombie_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\zombie8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_zombie8_death")
		end
		if has_alife_info("zaton_fracture1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_fracture_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\fracture1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_fracture1_death")
		end
		if has_alife_info("zaton_fracture2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_fracture_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\fracture2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_fracture2_death")
		end
		if has_alife_info("zaton_fracture3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_fracture_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\fracture3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_fracture3_death")
		end
		if has_alife_info("zaton_boar1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar1_death")
		end
		if has_alife_info("zaton_boar2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar2_death")
		end
		if has_alife_info("zaton_boar3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar3_death")
		end
		if has_alife_info("zaton_boar4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar4_death")
		end
		if has_alife_info("zaton_boar5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar5_death")
		end
		if has_alife_info("zaton_boar6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar6_death")
		end
		if has_alife_info("zaton_boar7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar7_death")
		end
		if has_alife_info("zaton_boar8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar8_death")
		end
		if has_alife_info("zaton_boar9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar9_death")
		end
		if has_alife_info("zaton_boar10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar10_death")
		end
		if has_alife_info("zaton_boar11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar11_death")
		end
		if has_alife_info("zaton_boar12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar12_death")
		end
		if has_alife_info("zaton_boar13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar13_death")
		end
		if has_alife_info("zaton_boar14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar14_death")
		end
		if has_alife_info("zaton_boar15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar15_death")
		end
		if has_alife_info("zaton_boar16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar16_death")
		end
		if has_alife_info("zaton_boar17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar17_death")
		end
		if has_alife_info("zaton_boar18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar18_death")
		end
		if has_alife_info("zaton_boar19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar19_death")
		end
		if has_alife_info("zaton_boar20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar20_death")
		end
		if has_alife_info("zaton_boar21_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar21.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar21_death")
		end
		if has_alife_info("zaton_boar22_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("boar_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\boar22.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_boar22_death")
		end
		if has_alife_info("zaton_cat1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\cat1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_cat1_death")
		end
		if has_alife_info("zaton_cat2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\cat2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_cat2_death")
		end
		if has_alife_info("zaton_cat3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\cat3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_cat3_death")
		end
		if has_alife_info("zaton_cat4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\cat4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_cat4_death")
		end
		if has_alife_info("zaton_cat5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\cat5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_cat5_death")
		end
		if has_alife_info("zaton_cat6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\cat6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_cat6_death")
		end
		if has_alife_info("zaton_cat7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\cat7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_cat7_death")
		end
		if has_alife_info("zaton_cat8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\cat8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_cat8_death")
		end
		if has_alife_info("zaton_cat9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_cat_e",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\cat9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_cat9_death")
		end
		if has_alife_info("zaton_controller1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_controller_old",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\controller1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_controller1_death")
		end
		if has_alife_info("zaton_bloodsucker1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\bloodsucker1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_bloodsucker1_death")
		end
		if has_alife_info("zaton_bloodsucker2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\bloodsucker2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_bloodsucker2_death")
		end
		if has_alife_info("zaton_bloodsucker3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("bloodsucker_strong",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\bloodsucker3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_bloodsucker3_death")
		end
		if has_alife_info("zaton_flesh1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\flesh1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_flesh1_death")
		end
		if has_alife_info("zaton_flesh2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\flesh2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_flesh2_death")
		end
		if has_alife_info("zaton_flesh3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\flesh3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_flesh3_death")
		end
		if has_alife_info("zaton_flesh4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\flesh4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_flesh4_death")
		end
		if has_alife_info("zaton_flesh5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\flesh5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_flesh5_death")
		end
		if has_alife_info("zaton_flesh6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\flesh6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_flesh6_death")
		end
		if has_alife_info("zaton_flesh7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\flesh7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_flesh7_death")
		end
		if has_alife_info("zaton_flesh8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\flesh8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_flesh8_death")
		end
		if has_alife_info("zaton_flesh9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\flesh9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_flesh9_death")
		end
		if has_alife_info("zaton_flesh10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\flesh10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_flesh10_death")
		end
		if has_alife_info("zaton_flesh11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\flesh11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_flesh11_death")
		end
		if has_alife_info("zaton_flesh12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("flesh_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\flesh12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_flesh12_death")
		end
		if has_alife_info("zaton_poltergeist1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\poltergeist1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_poltergeist1_death")
		end
		if has_alife_info("zaton_poltergeist2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\poltergeist2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_poltergeist2_death")
		end
		if has_alife_info("zaton_poltergeist3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\poltergeist3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_poltergeist3_death")
		end
		if has_alife_info("zaton_poltergeist4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\poltergeist4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_poltergeist4_death")
		end
		if has_alife_info("zaton_poltergeist5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\poltergeist5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_poltergeist5_death")
		end
		if has_alife_info("zaton_poltergeist6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\poltergeist6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_poltergeist6_death")
		end
		if has_alife_info("zaton_poltergeist7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\poltergeist7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_poltergeist7_death")
		end
		if has_alife_info("zaton_poltergeist8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("m_poltergeist_normal_tele",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\poltergeist8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_poltergeist8_death")
		end
		if has_alife_info("zaton_pseudodog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\pseudodog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_pseudodog1_death")
		end
		if has_alife_info("zaton_pseudodog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\pseudodog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_pseudodog2_death")
		end
		if has_alife_info("zaton_pseudodog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\pseudodog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_pseudodog3_death")
		end
		if has_alife_info("zaton_pseudodog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\pseudodog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_pseudodog4_death")
		end
		if has_alife_info("zaton_pseudodog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\pseudodog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_pseudodog5_death")
		end
		if has_alife_info("zaton_pseudodog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\pseudodog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_pseudodog6_death")
		end
		if has_alife_info("zaton_pseudodog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\pseudodog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_pseudodog7_death")
		end
		if has_alife_info("zaton_pseudodog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\pseudodog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_pseudodog8_death")
		end
		if has_alife_info("zaton_pseudodog9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\pseudodog9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_pseudodog9_death")
		end
		if has_alife_info("zaton_pseudodog10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("pseudodog_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\pseudodog10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_pseudodog10_death")
		end
		if has_alife_info("zaton_dog1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog1_death")
		end
		if has_alife_info("zaton_dog2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog2_death")
		end
		if has_alife_info("zaton_dog3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog3_death")
		end
		if has_alife_info("zaton_dog4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog4_death")
		end
		if has_alife_info("zaton_dog5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog5_death")
		end
		if has_alife_info("zaton_dog6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog6_death")
		end
		if has_alife_info("zaton_dog7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog7_death")
		end
		if has_alife_info("zaton_dog8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog8_death")
		end
		if has_alife_info("zaton_dog9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog9_death")
		end
		if has_alife_info("zaton_dog10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog10_death")
		end
		if has_alife_info("zaton_dog11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog11_death")
		end
		if has_alife_info("zaton_dog12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog12_death")
		end
		if has_alife_info("zaton_dog13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog13_death")
		end
		if has_alife_info("zaton_dog14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog14_death")
		end
		if has_alife_info("zaton_dog15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog15_death")
		end
		if has_alife_info("zaton_dog16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog16_death")
		end
		if has_alife_info("zaton_dog17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog17_death")
		end
		if has_alife_info("zaton_dog18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog18_death")
		end
		if has_alife_info("zaton_dog19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog19_death")
		end
		if has_alife_info("zaton_dog20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog20_death")
		end
		if has_alife_info("zaton_dog21_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("dog_weak",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\dog21.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_dog21_death")
		end
		if has_alife_info("zaton_tushkano1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano1.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano1_death")
		end
		if has_alife_info("zaton_tushkano2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano2.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano2_death")
		end
		if has_alife_info("zaton_tushkano3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano3.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano3_death")
		end
		if has_alife_info("zaton_tushkano4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano4.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano4_death")
		end
		if has_alife_info("zaton_tushkano5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano5.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano5_death")
		end
		if has_alife_info("zaton_tushkano6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano6.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano6_death")
		end
		if has_alife_info("zaton_tushkano7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano7.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano7_death")
		end
		if has_alife_info("zaton_tushkano8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano8.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano8_death")
		end
		if has_alife_info("zaton_tushkano9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano9.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano9_death")
		end
		if has_alife_info("zaton_tushkano10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano10.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano10_death")
		end
		if has_alife_info("zaton_tushkano11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano11.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano11_death")
		end
		if has_alife_info("zaton_tushkano12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano12.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano12_death")
		end
		if has_alife_info("zaton_tushkano13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano13.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano13_death")
		end
		if has_alife_info("zaton_tushkano14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano14.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano14_death")
		end
		if has_alife_info("zaton_tushkano15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano15.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano15_death")
		end
		if has_alife_info("zaton_tushkano16_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano16.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano16_death")
		end
		if has_alife_info("zaton_tushkano17_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano17.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano17_death")
		end
		if has_alife_info("zaton_tushkano18_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano18.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano18_death")
		end
		if has_alife_info("zaton_tushkano19_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano19.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano19_death")
		end
		if has_alife_info("zaton_tushkano20_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			local obj = alife():create("tushkano_normal",pos, lv_rand, gv_rand)
			local params=amk.read_monster_params(obj)
			params.custom="[logic]\ncfg = scripts\\logic\\zaton\\tushkano20.ltx"
			amk.write_monster_params(params,obj)
			db.actor:disable_info_portion("zaton_tushkano20_death")
		end
		
		
		if has_alife_info("zaton_zombied1_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied1",vector():set(-312.09350585938,9.8017225265503,405.43969726563),324561,3665)
			db.actor:disable_info_portion("zaton_zombied1_death")
		end
		if has_alife_info("zaton_zombied2_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied2",vector():set(-316.03387451172,9.778284072876,405.85754394531),317826,3665)
			db.actor:disable_info_portion("zaton_zombied2_death")
		end
		if has_alife_info("zaton_zombied3_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied3",vector():set(-318.09130859375,9.7939119338989,410.72082519531),313852,3665)
			db.actor:disable_info_portion("zaton_zombied3_death")
		end
		if has_alife_info("zaton_zombied4_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied4",vector():set(-326.34722900391,9.6446743011475,412.61337280273),298364,3665)
			db.actor:disable_info_portion("zaton_zombied4_death")
		end
		if has_alife_info("zaton_zombied5_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied5",vector():set(-325.91223144531,9.5992546081543,419.97454833984),298375,3665)
			db.actor:disable_info_portion("zaton_zombied5_death")
		end
		if has_alife_info("zaton_zombied6_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied6",vector():set(-334.03872680664,9.7276554107666,416.21243286133),284432,3665)
			db.actor:disable_info_portion("zaton_zombied6_death")
		end
		if has_alife_info("zaton_zombied7_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied7",vector():set(-318.0615234375,9.6832447052002,429.89227294922),313874,3665)
			db.actor:disable_info_portion("zaton_zombied7_death")
		end
		if has_alife_info("zaton_zombied8_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied8",vector():set(-321.77722167969,9.6900310516357,430.18246459961),305851,3665)
			db.actor:disable_info_portion("zaton_zombied8_death")
		end
		if has_alife_info("zaton_zombied9_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied9",vector():set(-325.67428588867,9.6602163314819,427.2004699707),299650,3665)
			db.actor:disable_info_portion("zaton_zombied9_death")
		end
		if has_alife_info("zaton_zombied10_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied10",vector():set(-305.82516479492,10.116463661194,431.21994018555),336195,3665)
			db.actor:disable_info_portion("zaton_zombied10_death")
		end
		if has_alife_info("zaton_zombied11_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied11",vector():set(-303.47039794922,10.03099155426,428.4885559082),340182,3665)
			db.actor:disable_info_portion("zaton_zombied11_death")
		end
		if has_alife_info("zaton_zombied12_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied12",vector():set(-308.29415893555,9.7501058578491,418.65930175781),332276,3665)
			db.actor:disable_info_portion("zaton_zombied12_death")
		end
		if has_alife_info("zaton_zombied13_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied13",vector():set(-307.46990966797,9.8609037399292,412.41213989258),333567,3665)
			db.actor:disable_info_portion("zaton_zombied13_death")
		end
		if has_alife_info("zaton_zombied14_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied14",vector():set(-301.47665405273,9.8663816452026,415.13681030273),344271,3665)
			db.actor:disable_info_portion("zaton_zombied14_death")
		end
		if has_alife_info("zaton_zombied15_death") then
			local pos, lv_rand, gv_rand = monster_position_choice(lname)
			alife():create("zaton_zombied15",vector():set(-301.27923583984,9.8912839889256,411.50915527344),345640,3665)
			db.actor:disable_info_portion("zaton_zombied15_death")
		end
		if has_alife_info("zaton_lesnichestvo_bandit1_death") then
			spawn_ids_object("zaton_bandit1")
			db.actor:disable_info_portion("zaton_lesnichestvo_bandit1_death")
		end
		if has_alife_info("zaton_lesnichestvo_bandit2_death") then
			spawn_ids_object("zaton_bandit2")
			db.actor:disable_info_portion("zaton_lesnichestvo_bandit2_death")
		end
		if has_alife_info("zaton_lesnichestvo_bandit3_death") then
			spawn_ids_object("zaton_bandit3")
			db.actor:disable_info_portion("zaton_lesnichestvo_bandit3_death")
		end
		if has_alife_info("zaton_lesnichestvo_bandit4_death") then
			spawn_ids_object("zaton_bandit4")
			db.actor:disable_info_portion("zaton_lesnichestvo_bandit4_death")
		end
		if has_alife_info("zaton_lesnichestvo_bandit5_death") then
			spawn_ids_object("zaton_bandit5")
			db.actor:disable_info_portion("zaton_lesnichestvo_bandit5_death")
		end
		if has_alife_info("zaton_lesnichestvo_bandit6_death") then
			spawn_ids_object("zaton_bandit6")
			db.actor:disable_info_portion("zaton_lesnichestvo_bandit6_death")
		end
		if has_alife_info("zaton_lesnichestvo_bandit7_death") then
			spawn_ids_object("zaton_bandit7")
			db.actor:disable_info_portion("zaton_lesnichestvo_bandit7_death")
		end
		if has_alife_info("zaton_lesnichestvo_bandit8_death") then
			spawn_ids_object("zaton_bandit8")
			db.actor:disable_info_portion("zaton_lesnichestvo_bandit8_death")
		end
		if has_alife_info("zaton_lesnichestvo_bandit9_death") then
			spawn_ids_object("zaton_bandit9")
			db.actor:disable_info_portion("zaton_lesnichestvo_bandit9_death")
		end
		if has_alife_info("zaton_lesnichestvo_bandit10_death") then
			spawn_ids_object("zaton_bandit10")
			db.actor:disable_info_portion("zaton_lesnichestvo_bandit10_death")
		end
		if has_alife_info("zaton_lesnichestvo_lider_death") then
			spawn_ids_object("zaton_bandit_lider")
			db.actor:disable_info_portion("zaton_lesnichestvo_lider_death")
		end
		if has_alife_info("zaton_stancia_killer1_death") then
			spawn_ids_object("zaton_killer1")
			db.actor:disable_info_portion("zaton_stancia_killer1_death")
		end
		if has_alife_info("zaton_stancia_killer2_death") then
			spawn_ids_object("zaton_killer2")
			db.actor:disable_info_portion("zaton_stancia_killer2_death")
		end
		if has_alife_info("zaton_stancia_killer3_death") then
			spawn_ids_object("zaton_killer3")
			db.actor:disable_info_portion("zaton_stancia_killer3_death")
		end
		if has_alife_info("zaton_stancia_killer4_death") then
			spawn_ids_object("zaton_killer4")
			db.actor:disable_info_portion("zaton_stancia_killer4_death")
		end
		if has_alife_info("zaton_stancia_killer5_death") then
			spawn_ids_object("zaton_killer5")
			db.actor:disable_info_portion("zaton_stancia_killer5_death")
		end
		if has_alife_info("zaton_stancia_killer6_death") then
			spawn_ids_object("zaton_killer6")
			db.actor:disable_info_portion("zaton_stancia_killer6_death")
		end
		if has_alife_info("zaton_stancia_killer7_death") then
			spawn_ids_object("zaton_killer7")
			db.actor:disable_info_portion("zaton_stancia_killer7_death")
		end
		if has_alife_info("zaton_stancia_killer8_death") then
			spawn_ids_object("zaton_killer8")
			db.actor:disable_info_portion("zaton_stancia_killer8_death")
		end
		if has_alife_info("zaton_stancia_killer9_death") then
			spawn_ids_object("zaton_killer9")
			db.actor:disable_info_portion("zaton_stancia_killer9_death")
		end
		if has_alife_info("zaton_stancia_killer10_death") then
			spawn_ids_object("zaton_killer10")
			db.actor:disable_info_portion("zaton_stancia_killer10_death")
		end
		if has_alife_info("zaton_stancia_killer11_death") then
			spawn_ids_object("zaton_killer11")
			db.actor:disable_info_portion("zaton_stancia_killer11_death")
		end
		if has_alife_info("zaton_stancia_lider_death") then
			spawn_ids_object("zaton_killer_lider")
			db.actor:disable_info_portion("zaton_stancia_lider_death")
		end
	end
end

function spawn_ids_object(name_object)
	local ini = ini_file("game_spawn_story_ids.ltx")
	local spawn_story = ini:r_string("spawn_story_ids",name_object)
	local section_number = alife():spawn_id(tonumber(spawn_story))
	
	alife():create(section_number)
end
