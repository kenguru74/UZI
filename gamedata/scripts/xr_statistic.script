
local killCountProps = {
	neutral_novice = 1, 	neutral_experienced = 2, 	neutral_veteran = 3, 	neutral_master = 4, neutral_legend = 5,
	monolith_novice = 1, 	monolith_experienced = 2, 	monolith_veteran = 3, 	monolith_master = 4, monolith_legend = 5,
	military_novice = 1, 	military_experienced = 2, 	military_veteran = 3, 	military_master = 4, military_legend = 5,
	killer_novice = 1, 	killer_experienced = 2, 	killer_veteran = 3, 	killer_master = 4, killer_legend = 5,
	ecolog_novice = 1, 	ecolog_experienced = 2, 	ecolog_veteran = 3, 	ecolog_master = 4, ecolog_legend = 5,
	dolg_novice = 1, 		dolg_experienced = 2, 		dolg_veteran = 3, 	dolg_master = 4, dolg_legend = 5,
	freedom_novice = 1, 	freedom_experienced = 2, 	freedom_veteran = 3, 	freedom_master = 4, freedom_legend = 5,
	bandit_novice = 1, 	bandit_experienced = 2, 	bandit_veteran = 3, 	bandit_master = 4, bandit_legend = 5,
	zombied_novice = 1, 	zombied_experienced = 2, 	zombied_veteran = 3, 	zombied_master = 4, zombied_legend = 5,
	formers_novice = 1, 	formers_experienced = 2, 	formers_veteran = 3, 	formers_master = 4, formers_legend = 5,
	hunters_novice = 1, 	hunters_experienced = 2, 	hunters_veteran = 3, 	hunters_master = 4, hunters_legend = 5,
	monolits_novice = 1, 	monolits_experienced = 2, 	monolits_veteran = 3, 	monolits_master = 4, monolits_legend = 5,
	dark_novice = 1, 	dark_experienced = 2, 	        dark_veteran = 3, 	dark_master = 4, dark_legend = 5,
	
	tushkano_weak = 1,
	flesh_weak = 1, 		flesh_normal = 2, 	flesh_strong = 3,
	boar_weak = 1, 		boar_normal = 2, 		boar_strong = 3,
	cat_weak = 1,
	burer_weak = 1, 		burer_strong = 3,
	fracture_weak = 1, 
	chimera_weak = 1, 	chimera_normal = 3,
	zombie_weak = 1, 		zombie_strong = 2,
	dog_weak = 1, 		dog_normal = 2, 		dog_strong = 3,
	pseudodog_weak = 1, 	pseudodog_normal = 2, 	pseudodog_strong = 3,
	psy_dog_weak = 3,
	snork_weak = 2, 		snork_normal = 3, 	snork_strong = 4,
	poltergeist_weak = 2,
	pseudo_gigant_weak = 4,
	controller_weak = 4,
	bloodsucker_weak = 1, 	bloodsucker_normal = 2, bloodsucker_strong = 3,
        nozombie_weak = 1,
        spider = 1
}

local sect_alias = {
	tushkano_normal = "tushkano_weak", 
	tushkano_strong = "tushkano_weak",
	cat_normal = "cat_weak",
	cat_strong = "cat_weak",
	burer_normal = "burer_weak", 
	fracture_normal = "fracture_weak",
	fracture_strong = "fracture_weak",
	zombie_ghost = "zombie_weak",
	zombie_immortal = "zombie_weak",
	zombie_old = "zombie_weak",
	zombie_normal = "zombie_weak",
	chimera_normal = "chimera_weak",
	poltergeist_normal = "poltergeist_weak",
	poltergeist_strong = "poltergeist_weak",
	pseudo_gigant_normal = "pseudo_gigant_weak",
	pseudo_gigant_strong = "pseudo_gigant_weak",
	controller_normal = "controller_weak",
	controller_strong = "controller_weak",
	rad_psy_dog = "psy_dog_weak",
	nozombie_weak = "nozombie_weak",
	spider = "spider"
}

monster_classes = {
			[clsid.tushkano_s    ] = "tushkano",
			[clsid.flesh_s       ] = "flesh",
			[clsid.boar_s        ] = "boar",
			[clsid.cat_s         ] = "cat",
			[clsid.zombie_s      ] = "zombie",
			[clsid.burer_s       ] = "burer",
			[clsid.fracture_s    ] = "fracture",
			[clsid.chimera_s     ] = "chimera",
			[clsid.dog_s         ] = "dog",
			[clsid.pseudodog_s   ] = "pseudodog",
			[clsid.psy_dog_s     ] = "psy_dog",
			[clsid.psy_dog_phantom_s] = "NIL",
			[clsid.snork_s       ] = "snork",
			[clsid.poltergeist_s ] = "poltergeist",
			[clsid.gigant_s      ] = "pseudo_gigant",
			[clsid.controller_s  ] = "controller",
			[clsid.bloodsucker_s ] = "bloodsucker"
		}		


function addKillCount(npc)
	local props, sect = getNpcType(npc)
	if props == nil then
		return
	end

	local sect_name
	if sect_alias[sect] ~= nil then
		sect_name = sect_alias[sect]
	else
		sect_name = sect
	end

	if killCountProps[sect_name] == nil then
		return
	end
	actor_stats.add_points(props, sect_name, 1, killCountProps[sect_name])
	db.actor:set_character_rank(db.actor:character_rank() + killCountProps[sect_name])
end


function getNpcType(npc)
	if IsStalker(npc) then
		local community = "neutral"
		if     npc:character_community() == "monolith" then	community = "monolith"
		elseif npc:character_community() == "military" then 	community = "military"
		elseif npc:character_community() == "killer" then 	community = "killer"
		elseif npc:character_community() == "ecolog" then 	community = "ecolog"
		elseif npc:character_community() == "dolg" then 	community = "dolg"
		elseif npc:character_community() == "freedom" then 	community = "freedom"
		elseif npc:character_community() == "bandit" then 	community = "bandit"
		elseif npc:character_community() == "zombied" then 	community = "zombied"
		end
		local rank = ranks.get_obj_rank_name(npc)
		return "stalkerkills", community.."_"..rank
	else
		local community = monster_classes[get_clsid(npc)]
		if community == nil then
			abort("Statistic ERROR: cannot find monstr class for [%s]", npc:name())
		end

		if community == "NIL" then
			return nil,nil
		end

		if community == "spider" then
			return "monsterkills", npc:section()
		end

		if community == "nozombie" then
			return "monsterkills", npc:section()
		end
		
		if community == "zombie" then
			return "monsterkills", npc:section()
		end		

		if community == "psy_dog" then
			if npc:section()=="psy_dog" then return "monsterkills", "psy_dog_weak" end
			if npc:section()=="psy_dog_radar" then return "monsterkills", "rad_psy_dog" end
		end 

		local rank = ranks.get_obj_rank_name(npc)
		return "monsterkills", community.."_"..rank
	end	
end