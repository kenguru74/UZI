--' Квест спартака
function spartak_help(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "af_night_star_u", "in")
   first_speaker:set_relation(game_object.friend, second_speaker)
   db.actor:set_character_rank(db.actor:character_rank() + 100)
end

function noah_friend(first_speaker, second_speaker)
   second_speaker:set_relation(game_object.friend, first_speaker)
end

function pda_have()
 return this.have_n_m("pda_noah",1)
end

function have_n_m(section,number)
 local actor = db.actor
 if actor then
  local cnt = 0
  actor:iterate_inventory(function (dummy, item) if item:section() == section then cnt = cnt + 1 end end,nil)
  return cnt >= number
 end
 return false
end

--'  Квест Германа на документы в экспериментальном цехе
function blocknotes_have(task, objective)
   if db.actor ~= nil then
      return db.actor:object("blocknotes") ~= nil
   end
   return false
end

function spawn_docs()
   local sobj = alife():object("heli_seif")
   if sobj and has_alife_info("take_zver_message") then
     local obj = level.object_by_id(sobj.id)
     if obj then
       spawn_item_in_inv("access_card", obj)
       spawn_item_in_inv("journal", obj)
     end
   end
end

function spawn_item_in_inv(spawn_item,npc)
	if not npc then 
		npc = db.actor 
	end
	local item = alife():create(spawn_item, 
		npc:position(),
		npc:level_vertex_id(),  
		npc:game_vertex_id(),
		npc:id())
	
	if npc:id() ~= db.actor:id() then
		-- Фикс пропадания доспавненного предмета при сейв/лоаде
		level.client_spawn_manager():add(item.id, -1, fix_spawn_item_in_inv, npc)  -- Калбек на выход item в онлайн
	end

	return item
end

function fix_spawn_item_in_inv(npc, id, item)
    npc:transfer_item(item, npc)
end

local heli_docs = {"journal", "access_card"}
function heli_docs_have(task, objective)
    local gg = db.actor
    if gg then
        for i=1,#heli_docs  do
            if not gg:object(heli_docs[i]) then 
                return false
            end
        end
        db.actor:give_info_portion("have_heli_docs")
        return true 
    end
    return false
end

function give_heli_docs(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "journal", "out")
   dialogs.relocate_item_section(first_speaker, "access_card", "out")
end

function noah_message()
 amk.g_start_timer("noa",0, 0, 30)
end

function take_access_card(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "access_card", "in")
end

function give_access_card(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "access_card", "out")
   dialogs.relocate_item_section(first_speaker, "pda_noah", "out")
   first_speaker:set_relation(game_object.friend, second_speaker)
end

function zver_friend(first_speaker, second_speaker)
   second_speaker:set_relation(game_object.friend, first_speaker)
end

function jo_give_things1(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_ap", "in")
   dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_ap", "in")
   dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_ap", "in")
   db.actor:set_character_rank(db.actor:character_rank() + 15)
end

function jo_give_things2(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "ammo_7.62x39_ap", "in")
   dialogs.relocate_item_section(first_speaker, "ammo_7.62x39_ap", "in")
   dialogs.relocate_item_section(first_speaker, "ammo_7.62x39_ap", "in")
   db.actor:set_character_rank(db.actor:character_rank() + 15)
end

function jo_give_things3(first_speaker, second_speaker)
   dialogs.relocate_item_section(first_speaker, "ammo_9x39_ap", "in")
   dialogs.relocate_item_section(first_speaker, "ammo_9x39_ap", "in")
   dialogs.relocate_item_section(first_speaker, "ammo_9x39_ap", "in")
   db.actor:set_character_rank(db.actor:character_rank() + 15)
end

function jo_give_things4(actor, npc)
   dialogs.relocate_money(actor, 10000, "in")
   db.actor:set_character_rank(db.actor:character_rank() + 15)
end