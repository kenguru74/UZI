---------------------- Квестовые функции для OGSM 2.x -------------------------

------------------------- Copyright 2007-2008 DEXXX ---------------------------

local vdk_cnt = 0
local flaska_cnt = 0
local termos_e_cnt = 0
local blood = 0
local bl_sound = sound_object([[heart\2]])

local flaska_esty = false
local termos_esty = false

local flaska_delete = false
local termos_delete = false
local chay_delete = false

-- ГГ вступает в "Свободу"
function set_freedom()
db.actor:set_character_community("actor_freedom",0,0)
db.actor:give_info_portion("mil_leader_attach_community")
end


-- ГГ вступает в "Долг"
function set_dolg()
db.actor:set_character_community("actor_dolg",0,0)
end


-- ГГ получает доступ в арсенал "Свободы"
function allow_arsenal()
db.actor:give_info_portion("mil_leader_attach_community2")
end


-- Функции квеста с рукой зомби
function has_zombie_hand()
if db.actor:object("af_zombie_hand") and not has_alife_info("zombie_hand_sold") then return true end
return false
end
function zombie_hand_sold()
if has_alife_info("zombie_hand_sold") and not has_alife_info("zombie_hand_research") then return true end
return false
end
function sell_zombie_hand(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "af_zombie_hand", "out")
db.actor:give_info_portion("zombie_hand_sold")
end
function zombie_hand_research(first_speaker, second_speaker)
db.actor:give_info_portion("zombie_hand_research")
dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_7h14", "in")
dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_7h14", "in")
dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_7h14", "in")
end


-- Проверка, пьян ли актор, если да, то даем защиту от пси
function check_drunk()
	if db.actor.psy_health < 0.99 then
		local time = level.get_time_days()*60*24+level.get_time_hours()*60+level.get_time_minutes()
		local end_time = amk.load_variable("drnk", 0)
		
		if time < end_time then
			db.actor.psy_health = 0.0015
		else
			amk.del_variable("drnk")
		end
	end
end

-- Проверка наличия 10 бутылок для повара
function has_ten_vodkas()
	if has_alife_info("povar_vodka_asked") then 
		vdk_cnt = 0
		db.actor:iterate_inventory(count_vodka, db.actor)
		
		if vdk_cnt >= 10 then
			return true 
		else
			return false
		end
	else 
		return false 
	end
end

-- Подсчет водки
function count_vodka(npc, item)
	local section = item:section()
	
	if section == "vodka" then
		vdk_cnt = vdk_cnt + 1
	end
end

-- Удаление водки
function del_vodka(npc, item)
	local section = item:section()

	if vdk_cnt > 0 then
		if section == "vodka" then
			alife():release(alife():object(item:id()), true)
			vdk_cnt = vdk_cnt-1
		end
	else
		return
	end
end

-- Обмен с поваром
function transfer_povar_items(first_speaker, second_speaker)
vdk_cnt = 10
db.actor:iterate_inventory(del_vodka, db.actor)
for i=1,3 do
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_7h14", "in")
end
end

-- Использование GPS-маячка
function use_gps(oid)
  if alife():object(oid)==nil then
    if ogsm_quests then
      ogsm_quests.create_gps()
    end
  end
end

function create_gps()

	local obj
	local pos = db.actor:position()
	obj = alife():create("gps_box", pos, db.actor:level_vertex_id(), db.actor:game_vertex_id())
	if (obj) then
		local t = amk.get_invbox_data(obj)
		t.custom = "[logic]\ncfg = scripts\\gps_inventory_box.ltx"
		amk.set_invbox_data(t, obj)
         	level.map_add_object_spot_ser(obj.id, "my_gps", "GPS-маячок")
	end
end

-- Съедание нужного гриба
function use_grib(pid)
  db.actor:give_info_portion("eat_grib")
end

-- Использование рюкзака-схрона
function use_rukzak(oid)
  if alife():object(oid)==nil then
     if ogsm_quests then
        ogsm_quests.create_rukzak()
     end
  end
end

function create_rukzak()

	local obj
	local pos = db.actor:position()
	obj = alife():create("m_inventory_box", pos, db.actor:level_vertex_id(), db.actor:game_vertex_id())
	if (obj) then
		local t = amk.get_invbox_data(obj)
		t.custom = "[logic]\ncfg = scripts\\treasure_inventory_box.ltx"
		amk.set_invbox_data(t, obj)
         	level.map_add_object_spot_ser(obj.id, "my_treasure", "Мой тайник")
	end
end

-- Использование водки
function use_vodka(pid)
	local start_time
	local cur_time
	local end_time

	if alife():object(pid)==nil then
		start_time = level.get_time_days()*60*24+level.get_time_hours()*60+level.get_time_minutes()
		cur_time = amk.load_variable("drnk", 0)
		if cur_time ~= 0 then
			if (cur_time - start_time) > 0 and (cur_time - start_time) < 15 then
				end_time = cur_time + 5
			else
				end_time = cur_time
			end
		else
			end_time = start_time + 5
		end
		amk.save_variable("drnk", end_time)
	end
end

-- Использование губной гармошки
function use_harmonica(pid)

local snd
local length

if alife():object(pid)==nil then
	snd = sound_object("harmonica")
	length = snd:length()
	if not snd:playing() then
		snd:play_no_feedback(db.actor,sound_object.s2d, 0, vector():set(0, 0, 0), 1.0)
	end
	amk.start_timer("spw",length/1000, "hrm")
end

end

-- Использование рации
function use_radio(pid)

local snd
local i
local length

if alife():object(pid)==nil then
	if level.name() == "l03u_agr_underground" or
	   level.name() == "l04u_labx18" or
	   level.name() == "l08u_brainlab" or
	   level.name() == "l10u_bunker" or
	   level.name() == "l12u_sarcofag" or
	   level.name() == "l12u_control_monolith" or
           level.name() == "peshera" or
           level.name() == "av_peshera" or
           level.name() == "warlab" or
           level.name() == "jupiter_underground" or
	   level.name() == "labx8" or
	   level.name() == "cs_agroprom_underground" then
		snd = sound_object("script_replics\\radio\\message\\radio_noise_2")
		length = snd:length()
	elseif level.name() == "l10_radar" and has_alife_info("bun_antenna_off") and not has_alife_info("secret_talk") then
		snd = sound_object("script_replics\\radio\\message\\radio_voice_secret")
		length = snd:length()
		amk.start_timer("scr", length/1000)
	else
		if math.random()<0.45 then
			i = math.random(1,12)
			snd = sound_object("script_replics\\radio\\message\\radio_voice_"..i)
			length = snd:length()
		else
			i = math.random(1,2)
			snd = sound_object("script_replics\\radio\\message\\radio_noise_"..i)
			length = snd:length()
		end
	end
	if not snd:playing() then
		snd:play_no_feedback(db.actor,sound_object.s2d, 0, vector():set(0, 0, 0), 1.0)
	end
	amk.start_timer("spw",length/1000, "rad")
end

end

-- Функции вызываются на дроп предмета
function check_use_vodka(p_obj)
	if (has_alife_info("ui_trade")) or (has_alife_info("ui_car_body")) then
	else
		if p_obj and p_obj:section() == "vodka" then
			alife():create("vodka_half",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
			amk.start_timer("vdk", 0.1, p_obj:id())
		end
	end
end

function check_use_vodka_half(p_obj)
	if (has_alife_info("ui_trade")) or (has_alife_info("ui_car_body")) then
	else
		if p_obj and ((p_obj:section() == "vodka_a") or (p_obj:section() == "vodka_half")) then
			amk.start_timer("vdk", 0.1, p_obj:id())
		end
	end
end

function check_use_harmonica(p_obj)
 if p_obj and p_obj:section() == "harmonica_f" then
	amk.start_timer("hrm", 0.1, p_obj:id())
 end
end

function check_use_radio(p_obj)
 if p_obj and p_obj:section() == "hand_radio_f" then
	amk.start_timer("rad", 0.1, p_obj:id())
 end
end

function check_use_rukzak(p_obj)
	if (has_alife_info("ui_trade")) or (has_alife_info("ui_car_body")) then
	else
		if p_obj and p_obj:section() == "rukzak_shron" then
			amk.start_timer("ruk", 0.1, p_obj:id())
		end
	end
end

function check_use_irp(p_obj)
	if (has_alife_info("ui_trade")) or (has_alife_info("ui_car_body")) then
	else
		if p_obj and p_obj:section() == "irp" then
			alife():create("irp_two",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
		end
	end
end

function check_use_irp_two(p_obj)
	if (has_alife_info("ui_trade")) or (has_alife_info("ui_car_body")) then
	else
		if p_obj and p_obj:section() == "irp_two" then
			alife():create("irp_one",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
		end
	end
end

function givePower()
	-- db.actor.power = 0.5
	db.actor.health = 0.5
	db.actor.psy_health = 0.2
end


-- Функция сушняка, довёл до ума kenguru

-- Употребление чистой воды и чая, дважды снимающих жажду, с возвратом полупустой тары
function check_use_water(p_obj)
	if (has_alife_info("ui_trade")) or (has_alife_info("ui_car_body")) then
	else
		if p_obj and p_obj:section() == "flaska" then
			alife():create("flaska_half",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
		end
		
		if p_obj and p_obj:section() == "termos_f" then
			alife():create("termos_h",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
		end
		
		if p_obj and p_obj:section() == "termos_h" then
			alife():create("termos_e",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
		end
		
		napilsya()
		napilsya()
	end
end

-- Употребление чистой воды, дважды снимающей жажду, одноразовой
function check_use_waterHalf(p_obj)
	if (has_alife_info("ui_trade")) or (has_alife_info("ui_car_body")) then
	else
		if p_obj and (p_obj:section() == "flaska_half") then
			napilsya()
			napilsya()
		end
	end
end

-- Употребление напитков, снимающих жажду, одноразовых
function check_use_wet_foods(p_obj)
	if (has_alife_info("ui_trade")) or (has_alife_info("ui_car_body")) then
	else
		if p_obj and ((p_obj:section() == "beer") or (p_obj:section() == "sok") or (p_obj:section() == "energy_drink") or (p_obj:section() == "milk") or (p_obj:section() == "chaek") or (p_obj:section() == "olives") or (p_obj:section() == "sup") or (p_obj:section() == "irp") or (p_obj:section() == "irp_two") or (p_obj:section() == "irp_one")) then
			napilsya()
		end
	end
end

-- Употребление продуктов, вызывающих супержажду
function check_use_Superdrugs(p_obj)
	if (has_alife_info("ui_trade")) or (has_alife_info("ui_car_body")) then
	else
		if p_obj and ((p_obj:section() == "vodka_a") or (p_obj:section() == "vodka_u")) then
			zhazhda()
			zhazhda()
		end
	end
end

-- Упрощённый розжиг костра от kenguru
function check_use_Spichki(p_obj)
	if (has_alife_info("ui_trade")) or (has_alife_info("ui_car_body")) then
	else
		if p_obj and ((p_obj:section() == "spichki") or (p_obj:section() == "spichki9") or (p_obj:section() == "spichki8") or (p_obj:section() == "spichki7") or (p_obj:section() == "spichki6") or (p_obj:section() == "spichki5") or (p_obj:section() == "spichki4") or (p_obj:section() == "spichki3") or (p_obj:section() == "spichki2") or (p_obj:section() == "spichki1")) then
			local	pos = db.actor:position()
			local	dir = db.actor:direction()
			local id, obj
			local koster_esty = false
			
			pos = pos:add(dir:mul(2))
			
			for id=0, 65535 do
				obj = level.object_by_id(id)
				if obj ~= nil and obj:section() == "koster" then
					local objPos = obj:position()
					local objLvid = obj:level_vertex_id()
					local objGvid = obj:game_vertex_id()
					
					if obj:position():distance_to(db.actor:position()) < 3 then
						alife():create("light_koster", objPos, objLvid, objGvid)
						koster_esty = true
					end
				end
			end
			
			if koster_esty == false then
				alife():create("koster", pos, 3, db.actor:game_vertex_id())
				alife():create("light_koster", pos, 3, db.actor:game_vertex_id())
			end
			
			amk.del_variable("koster")
			
			amk.g_start_timer("koster",0, 0, 30)
		end
		
		if p_obj and (p_obj:section() == "spichki") then
			alife():create("spichki9",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
		elseif p_obj and (p_obj:section() == "spichki9") then
			alife():create("spichki8",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
		elseif p_obj and (p_obj:section() == "spichki8") then
			alife():create("spichki7",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
		elseif p_obj and (p_obj:section() == "spichki7") then
			alife():create("spichki6",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
		elseif p_obj and (p_obj:section() == "spichki6") then
			alife():create("spichki5",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
		elseif p_obj and (p_obj:section() == "spichki5") then
			alife():create("spichki4",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
		elseif p_obj and (p_obj:section() == "spichki4") then
			alife():create("spichki3",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
		elseif p_obj and (p_obj:section() == "spichki3") then
			alife():create("spichki2",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
		elseif p_obj and (p_obj:section() == "spichki2") then
			alife():create("spichki1",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
		end
	end
end

-- Заваривание чая у костра от kenguru
function check_use_Chay(p_obj)
	if (has_alife_info("ui_trade")) or (has_alife_info("ui_car_body")) then
	else
		if p_obj and (p_obj:section() == "chay") then
			flaska_esty = _f.have_item("flaska")
			termos_esty = _f.have_item("termos_e")
			
			if (flaska_esty and termos_esty) then
				local light_koster_esty = false
				local id, obj
				
				for id=0, 65535 do
					obj = level.object_by_id(id)
					
					if obj ~= nil and ((obj:section() == "light_koster") or (string.find(obj:section(), "_fire_") or (string.find(obj:section(), "_flame_")))) then
						local	objPos = obj:position()
						
						if objPos:distance_to(db.actor:position()) < 1.6 then
							light_koster_esty = true
						end
					end
				end
				
				if light_koster_esty then
					flaska_delete = amk.remove_item_from_inventory_by_name("flaska",db.actor)
					termos_delete = amk.remove_item_from_inventory_by_name("termos_e", db.actor)
					chay_delete = amk.remove_item_from_inventory_by_name("chay", db.actor )
					
					if flaska_delete and termos_delete and chay_delete then
						alife():create("termos_f",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id(),db.actor:id())
					end
				else
					local text = "Нет костра поблизости!"
					db.actor:give_game_news(text, "", Frect():set(498,47,83,47), 0, 13000)
				end
			elseif flaska_esty then
				local text = "Нужен пустой термос.."
				db.actor:give_game_news(text, "", Frect():set(498,47,83,47), 0, 13000)
			elseif termos_esty then
				local text = "Нужна полная бутылка воды.."
				db.actor:give_game_news(text, "", Frect():set(498,47,83,47), 0, 13000)
			else
				local text = "Нужна полная бутылка воды и пустой термос.."
				db.actor:give_game_news(text, "", Frect():set(498,47,83,47), 0, 13000)
			end
		end
	end
end

-- Употребление продуктов, вызывающих супержажду
function check_use_Superdrugs(p_obj)
	if (has_alife_info("ui_trade")) or (has_alife_info("ui_car_body")) then
	else
		if p_obj and ((p_obj:section() == "vodka_a") or (p_obj:section() == "vodka_u")) then
			zhazhda()
			zhazhda()
		end
	end
end

-- Употребление продуктов, вызывающих жажду (с выдачей тары в скрипте выше)
function check_use_dry_foodsOrDrugs(p_obj)
	if (has_alife_info("ui_trade")) or (has_alife_info("ui_car_body")) then
	else
		if p_obj and ((p_obj:section() == "vodka") or (p_obj:section() == "vodka_half") or (p_obj:section() == "nuts") or (p_obj:section() == "sigaret") or (p_obj:section() == "kolbasa") or (p_obj:section() == "salo") or (p_obj:section() == "mre") or (p_obj:section() == "sandwich") or (p_obj:section() == "sweetness") or (p_obj:section() == "batat") or (p_obj:section() == "sgus") or (p_obj:section() == "bread") or (p_obj:section() == "bread_a") or (p_obj:section() == "antirad") or (p_obj:section() == "medkit") or (p_obj:section() == "medkit_army") or (p_obj:section() == "medkit_scientic")) then
			zhazhda()
		end
	end
end

-- Было water1 = 10, water2 = 16, water3 = 22, water4 = 23
-- Потом было water1 = 12, water2 = 16, water3 = 20, water4 = 24
-- Сделал water1 = 8, water2 = 10, water3 = 12, water4 = 14
-- Поправил water1 = 4, water2 = 1, water3 = 1, water4 = 1

function zhazhda()
	amk.g_start_timer("water0",0, 0, 0)
end

-- Функция СНЯТИЯ жажды с обнулением счётчиков и текущего порога сушняка
function napilsya()
-- Если нет инфопоршней жажды - начинается новый отсчёт таймера первой жажды
	if not has_alife_info("start_water_1") and (not has_alife_info("start_water_2")) and (not has_alife_info("start_water_3")) then
		amk.del_variable("water5")
		amk.del_variable("water4")
		amk.del_variable("water3")
		amk.del_variable("water2")
		amk.del_variable("water1")
		amk.del_variable("water0")
		
		get_hud():RemoveCustomStatic("water_green")
		amk.g_start_timer("water1",0, 4, 0)
	end
	
-- Если есть порог первой жажды - она снимается, и начинается новый отсчёт таймера первой жажды
	if has_alife_info("start_water_1") and (not has_alife_info("start_water_2")) and (not has_alife_info("start_water_3")) then
		amk.del_variable("water5")
		amk.del_variable("water4")
		amk.del_variable("water3")
		amk.del_variable("water2")
		amk.del_variable("water1")
		amk.del_variable("water0")
		
		get_hud():RemoveCustomStatic("water_green")
		amk.g_start_timer("water1",0, 4, 0)
		db.actor:disable_info_portion("start_water_1")
	end
	
-- Если есть порог второй жажды - она снимается, и снова начинается отсчёт таймера второй жажды
	if has_alife_info("start_water_1") and has_alife_info("start_water_2") and (not has_alife_info("start_water_3")) then
		amk.del_variable("water5")
		amk.del_variable("water4")
		amk.del_variable("water3")
		amk.del_variable("water2")
		amk.del_variable("water1")
		amk.del_variable("water0")
		
		get_hud():RemoveCustomStatic("water_yellow")
		get_hud():AddCustomStatic("water_green", true)
		amk.g_start_timer("water2",0, 1, 0)
		db.actor:disable_info_portion("start_water_2")
	end
	
-- Если есть порог третьей жажды - она снимается, и снова начинается отсчёт таймера третьей жажды
	if has_alife_info("start_water_1") and has_alife_info("start_water_2") and has_alife_info("start_water_3") then
		amk.del_variable("water5")
		amk.del_variable("water4")
		amk.del_variable("water3")
		amk.del_variable("water2")
		amk.del_variable("water1")
		amk.del_variable("water0")
		
		get_hud():RemoveCustomStatic("water_red")
		get_hud():AddCustomStatic("water_yellow", true)
		amk.g_start_timer("water3",0, 1, 0)
		db.actor:disable_info_portion("start_water_3")
	end
end

function check_use_gps(p_obj)
 if (has_alife_info("ui_trade")) or (has_alife_info("ui_car_body")) then
  else
 if p_obj and p_obj:section() == "gps" then
	amk.start_timer("gss", 0.1, p_obj:id())
 end
 end
end

function check_use_grib(p_obj)
 if p_obj and (p_obj:section() == "grib_9" or p_obj:section() == "grib_8" or p_obj:section() == "grib_7") then
	amk.start_timer("grb", 0.1, p_obj:id())
 end
end

-- Функции квеста с FN-2000
function spawn_fn2000()
alife():create("wpn_fn2000", vector():set(305.17,-38.7,-24.4), 68330, 1930)
for i=1,3 do
	alife():create("ammo_5.56x45_ap", vector():set(305.17,-39.4,-25), 68330, 1930)
end
end

-- Помощь раненому
function help_wounded(npc)
local snd
	if npc:name()~="esc_vagon_wounded" then
		snd = xr_sound.get_safe_sound_object("characters_voice\\human_01\\newbie\\help\\wounded_thanx\\thanx_"..math.random(1,3))
		snd:play_no_feedback(npc, sound_object.s3d, 0, npc:position(), 1.0)
	else 
		db.actor:give_info_portion("tutorial_wounded_heal")
		db.actor:give_info_portion("tutorial_wounded_help")
	end
	if npc:relation(db.actor)==game_object.enemy and math.random() > 0.4 then
		npc:set_character_community("stalker", 0, 0)
		npc:set_relation(game_object.friend, db.actor)
		npc:enable_talk()
	elseif npc:relation(db.actor)~=game_object.enemy then
		npc:set_relation(game_object.friend, db.actor)
	end

end

-- Эффект от критического ранения
function wounded_pp()
	if db.actor.health<0.2 and blood==0 then
		level.add_pp_effector("escape.ppe", 1999, true)
		level.set_pp_effector_factor(1999, 5.0)
		if not bl_sound:playing() then 
			bl_sound:play_at_pos(db.actor, db.actor:position(), 1, sound_object.looped)
		end
		blood = 1
	elseif db.actor.health>0.2 then
		level.remove_pp_effector(1999)
		if bl_sound:playing() then 
			bl_sound:stop() 
		end
		blood = 0
	elseif db.actor.health<0.2 and blood==1 and bl_sound:playing() then
		bl_sound:set_position(db.actor:position())
	end
end


-- Функции квестов Темного дилера
function kill_arny_precondition()
	if has_alife_info("pri_trader_first_talk") and not has_alife_info("pri_trader_arny_task") and
	   not has_alife_info("aem_arny_dead") and not has_alife_info("aem_arny_spread_out") then
		return true
	else
		return false
	end
end
function kill_arny_reward_precondition()
	if (has_alife_info("aem_arny_dead") or has_alife_info("aem_arny_spread_out")) and
	   has_alife_info("pri_trader_arny_task") and not has_alife_info("pri_trader_arny_task_done") then
		return true
	else
		return false
	end
end
function kill_freedom_precondition()
	if ( has_alife_info("pri_trader_arny_task_done") or (not has_alife_info("pri_trader_arny_task") and (has_alife_info("aem_arny_dead") or has_alife_info("aem_arny_spread_out"))) ) and
	   ( not has_alife_info("sar2_death_49") or not has_alife_info("sar2_death_48") ) and
	   not has_alife_info("pri_trader_freedom_task") then
		return true
	else
		return false
	end
end
function kill_dolg_precondition()
	if ( has_alife_info("pri_trader_arny_task_done") or (not has_alife_info("pri_trader_arny_task") and (has_alife_info("aem_arny_dead") or has_alife_info("aem_arny_spread_out"))) ) and
	   ( has_alife_info("pri_trader_freedom_task_done") or (not has_alife_info("pri_trader_freedom_task") and has_alife_info("sar2_death_49") and has_alife_info("sar2_death_48")) ) and
	   ( not has_alife_info("bar_voronin_dead") or not has_alife_info("sar2_death_42") ) and
	   not has_alife_info("pri_trader_dolg_task") then
		return true
	else
		return false
	end
end
function kill_arny_reward(first_speaker, second_speaker)
	dialogs.relocate_money(second_speaker, 10000, "in")
end
function kill_freedom_reward(first_speaker, second_speaker)
	dialogs.relocate_money(second_speaker, 30000, "in")
end
function kill_dolg_reward(first_speaker, second_speaker)
	dialogs.relocate_money(second_speaker, 50000, "in")
end
function final_precondition()
	if ( has_alife_info("pri_trader_arny_task_done") or (not has_alife_info("pri_trader_arny_task") and (has_alife_info("aem_arny_dead") or has_alife_info("aem_arny_spread_out"))) ) and
	   ( has_alife_info("pri_trader_freedom_task_done") or (not has_alife_info("pri_trader_freedom_task") and has_alife_info("sar2_death_49") and has_alife_info("sar2_death_48")) ) and
	   ( has_alife_info("pri_trader_dolg_task_done") or (not has_alife_info("pri_trader_dolg_task") and has_alife_info("bar_voronin_dead") and has_alife_info("sar2_death_42")) ) then
		return true
	else
		return false
	end
end
function remove_dealer_spot(fs,ss)
	level.map_remove_object_spot(fs:id(), "red_location")
end
function release_dark_dealer()
	local pos
	for i=0, 65535 do
		local obj = level.object_by_id(i)
		if obj and string.find(obj:name(), "pri_trader") then
			pos = obj:position()
		end
	end
	if pos then
		db.actor:hide_weapon()
		level.disable_input()
		level.add_cam_effector("camera_effects\\earthquake.anm", 2010, false, "")
		local s = sound_object("ambient\\earthquake")
		s:play_no_feedback(db.actor,sound_object.s2d, 0, vector():set(0, 0, 0), 1.0)
		amk.start_timer("vd1", 2, pos)
	end
end
function x18_laugh()
	local s = sound_object("x18_laugh")
	s:play_no_feedback(db.actor,sound_object.s2d, 0, vector():set(0, 0, 0), 1.0)
end


---------------------- Квестовые функции для OGSM 2.x -------------------------

------------------------- Copyright 2007-2008 DEXXX ---------------------------

--[[

If you're going to use the whole of this script or its parts in your own creative 
developments for the S.T.A.L.K.E.R. game, please don't become such a goddamn 
motherfucker like the notorious author of the ABC Mod - Carbrobro. Leave the 
copyrights, note the real author(s) and don't claim others' ideas and their 
realization to be your own ones. It's just simple Modmakers' Ethics. Thank you!

Если вы собираетесь использовать данный скрипт целиком или частично в своих 
разработках по игре S.T.A.L.K.E.R., пожалуйста не опускайтесь до уровня печально 
известного автора ABC мода - Carbrobro. Не удаляйте копирайты, указывайте настоящего 
автора(ов) и не выдавайте чужие идеи и их реализацию за свои. Ведь это элементарная 
этика модостроителей! Спасибо за понимание.

]]--