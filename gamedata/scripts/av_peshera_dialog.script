function have_strelok_money(actor, npc)
	return actor:money() >= 1500000
end

function give_cheburek_money(actor, npc)
	dialogs.relocate_money(actor, 1500000, "out")
end

function find_av_peshera()
 if level.name()=="av_peshera" and has_alife_info("third_talking_doctor") and (not has_alife_info("find_av_peshera")) then
   db.actor:give_info_portion("find_av_peshera")
   local obj = alife():object( "zaton_labirint" )
   if obj then
     level.map_remove_object_spot(obj.id, "green_location")
   end
 end
end

function actor_killing_darks(task, objective)
   if db.actor ~= nil then
      if has_alife_info("kill_dark_1") and has_alife_info("kill_dark_2") and has_alife_info("kill_dark_3") and has_alife_info("kill_dark_4") and has_alife_info("kill_dark_5") then
        return true
      end
   end
   return false
end

function give_klyk_so(first_speaker, second_speaker)
   dialogs.relocate_item_section(second_speaker, "af_cristall_plant", "out")
   db.actor:give_info_portion("give_so")
   local cnt = db.actor:object_count()
   local ch=0
   for i=0, cnt-1 do
    local item = db.actor:object(i)
    if item:section() == "af_cristall_plant" then
     local sobj = alife():object(item:id())
     if sobj then
       alife():release(sobj,true)
       ch = ch+1
        if ch == 1 then
         break
        end
     end
    end
   end
end

function spawn_things_klyk()
   local sobj = alife():object("av_peshera_blue_yashik_shron_01")
   if sobj then
      local obj = level.object_by_id(sobj.id)
      if obj and has_alife_info("first_talking_klyk") then
          spawn_item_in_inv_klyk("wpn_val", obj)
          spawn_item_in_inv_klyk("ammo_9x39_ap", obj)
          spawn_item_in_inv_klyk("conserva", obj)
          spawn_item_in_inv_klyk("vodka", obj)
          spawn_item_in_inv_klyk("bandage", obj)
          spawn_item_in_inv_klyk("antirad", obj)
          spawn_item_in_inv_klyk("flaska", obj)
          spawn_item_in_inv_klyk("bread", obj)
          spawn_item_in_inv_klyk("medkit", obj)
      end
   end
   db.actor:give_info_portion("bring_food_klyk")
end

function spawn_item_in_inv_klyk(spawn_item,npc)
	if not npc then 
		npc = db.actor 
	end
	local item = alife():create(spawn_item, 
		npc:position(),
		npc:level_vertex_id(),  
		npc:game_vertex_id(),
		npc:id())
	
	if npc:id() ~= db.actor:id() then
		-- Фикс пропадания доспавненного предмета при сейв/лоаде
		level.client_spawn_manager():add(item.id, -1, fix_spawn_item_in_inv_klyk, npc)  -- Калбек на выход item в онлайн
	end

	return item
end

function fix_spawn_item_in_inv_klyk(npc, id, item)
    npc:transfer_item(item, npc)
end

local klyk_things = {"wpn_val", "ammo_9x39_ap", "conserva", "vodka", "medkit", "bandage", "antirad", "flaska", "bread"}
function actor_find_things_klyk(task, objective)
    local gg = db.actor
    if gg then
        for i=1,#klyk_things  do
            if not gg:object(klyk_things[i]) then 
                return false
            end
        end
        return true 
    end
    return false
end

function give_things_klyk(first_speaker, second_speaker)
   dialogs.relocate_item_section(second_speaker, "wpn_val", "out")
   dialogs.relocate_item_section(second_speaker, "ammo_9x39_ap", "out")
   dialogs.relocate_item_section(second_speaker, "conserva", "out")
   dialogs.relocate_item_section(second_speaker, "vodka", "out")
   dialogs.relocate_item_section(second_speaker, "medkit", "out")
   dialogs.relocate_item_section(second_speaker, "bandage", "out")
   dialogs.relocate_item_section(second_speaker, "antirad", "out")
   dialogs.relocate_item_section(second_speaker, "flaska", "out")
   dialogs.relocate_item_section(second_speaker, "bread", "out")
   second_speaker:set_relation(game_object.friend, first_speaker)
end